{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/collection-detail.vue?vue&type=style&index=0&id=ae65b7d2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/collection-detail.vue","mtime":1608715596686},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//noinspection CssUnknownTarget\n@import \"@/static/css/common.scss\";\n.body {\n  display: flex;\n\n  .pocket-card {\n    width: 22%;\n    height: 600px;\n    position:relative;\n\n    .run-button {\n      width: 100%;\n      height: 40px;\n      font-size: 120%;\n    }\n\n    .tree-list {\n      height: 520px;\n\n      .custom-tree-node {\n        flex: 1 1 auto;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 14px;\n        padding-right: 8px;\n        width: 100%;\n\n        .node-title {\n          width: 0;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          flex: 1 1 auto;\n          padding: 0 5px;\n          overflow: hidden;\n        }\n\n        .node-operate > i {\n          color: #409eff;\n          margin: 0 5px;\n        }\n\n        .children-content {\n          width: 150px;\n          overflow:hidden;\n          text-overflow:ellipsis;\n          white-space:nowrap;\n        }\n\n        .delete-icon {\n          display: none;\n        }\n      }\n\n      .father .child {\n        display: none;\n      }\n\n      .father:hover .child {\n        display: block;\n      }\n\n      .custom-tree-node:hover .delete-icon{\n        display: block;\n      }\n    }\n\n\n  }\n\n  .case-manage-card {\n    width: 78%;\n    height: 600px;\n    margin-left: 5px;\n\n    .row-name {\n      width: 120px\n    }\n\n    .row-category {\n      width: 100px;\n      margin-left: 10px\n    }\n\n    .row-creator {\n      width: 120px;\n      margin-left: 10px;\n\n      .creator-name {\n        float: left;\n      }\n      .creator-code {\n        float: right;\n        color: #8492a6;\n        font-size: 13px;\n      }\n    }\n\n    .case-table {\n      height: 520px;\n      margin-top: 10px;\n      width: 100%;\n\n      .GET {\n        color: #00C292;\n        font-weight: 500;\n      }\n      .POST {\n        color: #409EFF;\n        font-weight: 500;\n      }\n      .PUT {\n        color: #E6A23C;\n        font-weight: 500;\n      }\n      .DELETE {\n        color: #E46A76;\n        font-weight: 500;\n      }\n    }\n  }\n}\n\n.el-tree /deep/ .is-expanded {\n  color: #333333;\n  font-weight: bold\n}\n\n\n",{"version":3,"sources":["collection-detail.vue"],"names":[],"mappingsilBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"collection-detail.vue","sourceRoot":"src/view/api-test","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"title\">{{collection_info.collection_name}} <i class=\"el-icon-edit\" @click=\"collection_info_dialog_visible = true\"></i></div>\n      <el-button type=\"primary\" size=\"small\" icon=\"el-icon-setting\" style=\"float: right\" @click=\"config_dialog_visible = true\"/>\n    </div>\n    <div class=\"body\">\n      <el-card class=\"pocket-card\">\n        <el-button type=\"success\"\n                   class=\"run-button\"\n                   @click=\"doExecute\"\n                   :disabled=\"pocket_list.length === 1 && current_choose_case_id_list.length === 0\">\n          执 行\n          <i v-if=\"execute_button_loading\" class=\"el-icon-loading\"></i>\n          <i v-else class=\"el-icon-video-play\"></i>\n        </el-button>\n        <div class=\"tree-list\">\n          <vue-scroll>\n            <el-tree :data=\"pocket_list\" :props=\"defaultProps\"\n                     @node-click=\"handleNodeClick\"\n                     @node-drag-end=\"handleDragEnd\"\n                     :allow-drop=\"allowDrop\"\n                     :default-expanded-keys=\"default_expanded_key\"\n                     node-key=\"id\"\n                     draggable\n                     highlight-current\n                     accordion\n                     ref=\"tree\"\n                     style=\"margin-top: 10px\">\n              <template v-slot:default=\"{node,data}\">\n            <span class=\"custom-tree-node father\">\n              <span v-if=\"node.level === 1\" class=\"node-icon\">\n                <i class=\"el-icon-folder\"></i>\n              </span>\n              <!--如果没修改过字段，这里对应后端应该使用node.name-->\n              <span class=\"node-title\">{{ node.label }}</span>\n              <span v-if=\"node.level === 1\" class=\"node-operate child\">\n                <el-tooltip\n                  class=\"item\"\n                  effect=\"dark\"\n                  :open-delay=\"200\"\n                  content=\"新增模块\"\n                  placement=\"top\">\n                  <i @click.stop=\"createNewPocket\" class=\"el-icon-circle-plus-outline\"></i>\n                </el-tooltip>\n                <el-tooltip\n                  class=\"item\"\n                  effect=\"dark\"\n                  :open-delay=\"200\"\n                  content=\"重命名\"\n                  placement=\"top\">\n                  <i @click.stop=\"updatePocket(data)\" class=\"el-icon-edit\"></i>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\"\n                            :open-delay=\"200\" content=\"删除\" placement=\"top\">\n                  <i @click.stop=\"deletePocket(data.id)\" class=\"el-icon-delete\"></i>\n                </el-tooltip>\n              </span>\n              <span v-if=\"node.level === 2\" class=\"node-operate child\">\n                <el-tooltip class=\"item\" effect=\"dark\"\n                            :open-delay=\"200\" content=\"删除\" placement=\"top\">\n                  <i @click.stop=\"deleteCase(data)\" class=\"el-icon-delete\"></i>\n                </el-tooltip>\n              </span>\n            </span>\n              </template>\n            </el-tree>\n          </vue-scroll>\n        </div>\n\n      </el-card>\n      <el-card class=\"case-manage-card\">\n        <el-row>\n          <el-input v-model=\"search.case_name\"\n                    placeholder=\"接口名称\"\n                    class=\"row-name\"\n                    size=\"small\"\n                    @change=\"refreshTableInfo\" />\n          <el-select v-model=\"search.category\"\n                     placeholder=\"系 统\"\n                     class=\"row-category\"\n                     @change=\"refreshTableInfo\"\n                     clearable\n                     size=\"small\"\n                     filterable>\n            <el-option v-for=\"item in category_list\"\n                       :key=\"item.category_name\"\n                       :label=\"item.category_name\"\n                       :value=\"item.category_name\"/>\n          </el-select>\n          <el-select v-model=\"search.creator_code\"\n                     placeholder=\"创建人\"\n                     class=\"row-creator\"\n                     @change=\"refreshTableInfo\"\n                     clearable\n                     size=\"small\"\n                     filterable>\n            <el-option v-for=\"item in creator_list\"\n                       :key=\"item.creator_code\"\n                       :label=\"item.creator_name\"\n                       :value=\"item.creator_code\">\n              <span class=\"creator-name\">{{ item.creator_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.creator_code }}</span>\n            </el-option>\n          </el-select>\n          <el-pagination background\n                         small\n                         @size-change=\"handleSizeChange\"\n                         @current-change=\"handleCurrentChange\"\n                         :current-page=\"search.page\"\n                         :page-size=\"search.count\"\n                         :page-sizes=\"[10, 20, 50, 100]\"\n                         :total=\"total\" layout=\"sizes, prev, pager, next\" style=\"float: right\">\n          </el-pagination>\n        </el-row>\n        <div class=\"case-table\">\n          <vue-scroll>\n            <el-table ref=\"multipleTable\"\n                      :data=\"case_list\"\n                      tooltip-effect=\"dark\"\n                      @select-all=\"selectAll\"\n                      @select=\"rowSelect\"\n                      stripe>\n              <el-table-column type=\"selection\" width=\"35\" fixed/>\n              <el-table-column prop=\"case_name\" label=\"接口名称\" min-width=\"200\" fixed></el-table-column>\n              <el-table-column label=\"备注\" fixed>\n                <template v-slot:default=\"scope\">\n                  <el-tooltip effect=\"dark\" placement=\"top-start\" v-if=\"scope.row.description\">\n                    <div slot=\"content\">{{scope.row.description}}</div>\n                    <l-icon name=\"read\" color=\"#409EFF\" height=\"1.6em\" width=\"1.6em\"></l-icon>\n                  </el-tooltip>\n                  <l-icon name=\"read\" color=\"#ccc\" height=\"1.6em\" width=\"1.6em\" v-else></l-icon>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"api_method\" min-width=\"100\" label=\"请求方式\">\n                <template v-slot:default=\"scope\">\n                  <div :class=\"scope.row.api_method\">{{scope.row.api_method}}</div>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"接口路径\" prop=\"api_url\" :show-overflow-tooltip=\"true\" min-width=\"440\"></el-table-column>\n              <el-table-column prop=\"category\" label=\"系 统\" min-width=\"100\" sortable/>\n              <el-table-column prop=\"creator_name\" label=\"创建人\" width=\"120\"/>\n              <el-table-column\n                align=\"center\"\n                fixed=\"right\"\n                label=\"操作\">\n                <template v-slot:default=\"scope\">\n                  <el-tooltip content=\"编辑\"\n                              placement=\"bottom\"\n                              :enterable=\"false\"\n                              effect=\"dark\">\n                    <el-button\n                      type=\"primary\"\n                      icon=\"el-icon-edit\"\n                      circle size=\"mini\"\n                      @click=\"handleEdit(scope.row)\"></el-button>\n                  </el-tooltip>\n                </template>\n              </el-table-column>\n            </el-table>\n          </vue-scroll>\n        </div>\n      </el-card>\n    </div>\n    <el-dialog :visible.sync=\"collection_info_dialog_visible\" width=\"400px\" :close-on-click-modal=\"false\">\n      <el-form :model=\"collection_info\" ref=\"collection_info\" label-width=\"80px\">\n        <el-form-item prop=\"collection_name\" label=\"集合名\">\n          <el-input v-model=\"collection_info.collection_name\" style=\"width: 240px\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"description\" label=\"描述\">\n          <el-input v-model=\"collection_info.description\" style=\"width: 240px\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"updateCollection\">保 存</el-button>\n        <el-button @click=\"closeCollectionEdit\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"config_dialog_visible\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"定时任务\">\n          <el-switch v-model=\"collection_info.timing_switch\" active-color=\"#13ce66\"></el-switch>\n          <el-input placeholder=\"请输入cron表达式\"\n                    v-show=\"collection_info.timing_switch\"\n                    v-model=\"collection_info.cron\"\n                    clearable\n                    style=\"width: 240px;margin-left: 20px\">\n            <el-button type=\"primary\"\n                       icon=\"el-icon-time\"\n                       slot=\"append\"\n                       @click=\"timing_dialog_visible = true\"\n                       v-if=\"collection_info.timing_switch\"></el-button>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"微信推送\">\n          <el-radio-group v-model=\"collection_info.push_type\" @change=\"pushListChange\">\n            <el-radio v-for=\"item in push_type_list\" :key=\"item.label\" :label=\"item.label\">{{item.value}}</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"推送列表\">\n          <el-select v-model=\"collection_info.push_list\" multiple filterable :disabled=\"push_list_visible\" placeholder=\"请选择\" style=\"width: 200px\">\n            <el-option v-for=\"item in tester_list\" :key=\"item.creator_code\" :label=\"item.creator_name\" :value=\"item.creator_code\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"updateCollection\">保 存</el-button>\n        <el-button @click=\"config_dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"pocket_dialog_visible\" destroy-on-close width=\"400px\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"模块名\">\n          <el-input v-model=\"pocket_info.pocket_name\"\n                    placeholder=\"请输入名称\" style=\"width: 240px\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"pocketSave\">保 存</el-button>\n        <el-button @click=\"pocket_dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"timing_dialog_visible\"\n               destroy-on-close\n               width=\"800px\"\n               :show-close=\"false\"\n               :close-on-click-modal=\"false\">\n      <lyn-cron v-model=\"collection_info.cron\"></lyn-cron>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"timing_dialog_visible = false\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-drawer :visible.sync=\"drawer_visible\" :with-header=\"false\" size=\"70%\">\n      <http-case-edit v-if=\"drawer_visible\" :case-info=\"case_info\" operation-type=\"2\" @drawer-close=\"drawerClose\"></http-case-edit>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport LynCron from '@/component/lyn/lyn-cron'\nimport Collection from '@/model/autotest/collection'\nimport HttpCase from '@/model/autotest/http-case'\nimport CollectionReport from '@/model/autotest/collection-report'\nimport Category from '@/model/autotest/category'\nimport HttpCaseEdit from '@/component/autotest/http-case-edit'\n\nexport default {\n  components: {\n    LynCron,\n    HttpCaseEdit\n  },\n  data() {\n    return {\n      execute_button_loading: false,\n      collection_id: null,\n      current_pocket_id: null,\n      collection_info: {},\n      push_type_list: [{\n        label: 1,\n        value: '不推送'\n      }, {\n        label: 2,\n        value: '失败时推送'\n      }, {\n        label: 3,\n        value: '总是推送'\n      }],\n      push_list_visible: false,\n      collection_info_dialog_visible: false,\n      config_dialog_visible: false,\n      pocket_dialog_visible: false,\n      timing_dialog_visible: false,\n      drawer_visible: false,\n      pocket_operation_type: 0,\n      search: {\n        count: 10,\n        page: 1,\n        case_name: '',\n        category: '',\n        creator_code: '',\n      },\n      total: 0,\n      creator_list: [],\n      category_list: [],\n      case_list: [],\n      case_info: {},\n      pocket_list: [],\n      // 默认展开的pocketId\n      default_expanded_key: [],\n      pocket_info: {\n        collection_id: null,\n        pocket_name: ''\n      },\n      // 当前选中pocket内，所有case的id的列表\n      current_choose_case_id_list: [],\n      tester_list: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    }\n  },\n  mounted() {\n    this.getCategoryList()\n    this.getCreatorList()\n    this.pageInit()\n  },\n  watch: {\n    $route() {\n      this.pageInit()\n    }\n  },\n  methods: {\n    // 获取系统列表\n    async getCategoryList() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    // 获取创建人列表\n    async getCreatorList() {\n      const res = await HttpCase.getCreatorList()\n      this.creator_list = res\n    },\n    async pageInit() {\n      this.collection_id = this.$route.params.id\n      this.getCollectionDetail()\n      await this.getPocketList()\n      await this.pocketDefaultExpanded()\n      await this.setPocketCaseIdList()\n      await this.refreshTableInfo()\n      await this.getPushList()\n    },\n    // 获取推送人列表（测试人员）\n    async getPushList() {\n      this.tester_list = await HttpCase.getCreatorList()\n    },\n    // 获取集合基础信息详情（不包含case信息）\n    async getCollectionDetail() {\n      this.collection_info = await Collection.getCollectionDetail(this.collection_id)\n      this.push_list_visible = this.collection_info.push_type === 1\n    },\n    // 获取pocket列表\n    async getPocketList() {\n      this.pocket_list = await Collection.getPocketInfo(this.collection_id)\n    },\n    // 初始化时，默认展开第一个pocket\n    pocketDefaultExpanded() {\n      this.current_pocket_id = this.pocket_list[0].id\n      this.default_expanded_key = [this.pocket_list[0].id]\n    },\n    // 获取当前选中pocket的caseList的id集合\n    async setPocketCaseIdList() {\n      this.current_choose_case_id_list = []\n      this.pocket_list.forEach(pocket => {\n        if (pocket.id !== this.current_pocket_id) {\n          return false\n        }\n        pocket.children.forEach(e => {\n          this.current_choose_case_id_list.push(e.business_id)\n        })\n      })\n    },\n    // 刷新table的数据与选中状态\n    async refreshTableInfo() {\n      await this.searchCaseList()\n      await this.refreshCaseChooseType()\n    },\n    // 获取caseList\n    async searchCaseList() {\n      const res = await HttpCase.searchCaseList(this.search)\n      this.case_list = res.items\n      this.total = res.total\n    },\n    // 对caseList中的row的选中状态进行渲染\n    async refreshCaseChooseType() {\n      this.case_list.forEach(row => {\n        if (this.current_choose_case_id_list.indexOf(row.id) > -1) {\n          this.$refs.multipleTable.toggleRowSelection(row, true)\n        }\n      })\n    },\n    handleEdit(row) {\n      this.drawer_visible = true\n      this.case_info = { ...row }\n    },\n    async updateCollection() {\n      const res = await Collection.updateCollection(this.collection_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.collection_info_dialog_visible = false\n        this.config_dialog_visible = false\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    closeCollectionEdit() {\n      this.collection_info_dialog_visible = false\n      this.$refs.collection_info.resetFields()\n    },\n    pushListChange(val) {\n      this.push_list_visible = val === 1\n    },\n    async handleNodeClick(data, node) {\n      if (node.level === 2) {\n        return\n      }\n      const id = node.level === 1 ? data.id : node.parent.data.id\n      this.current_pocket_id = id\n      this.default_expanded_key = [id]\n      this.setPocketCaseIdList()\n      this.getPocketList()\n      await this.refreshTableInfo()\n    },\n    async handleDragEnd(draggingNode, dropNode, dropType) {\n      if (dropType === 'none' || dropType === undefined) {\n        return\n      }\n      const list = [draggingNode.level]\n      let nodes = null\n      if (draggingNode.level === 1) {\n        nodes = dropNode.parent.data\n      } else if (draggingNode.level === 2) {\n        nodes = dropNode.parent.data.children\n      }\n      this.getNodeTree(nodes, draggingNode.data.id, list)\n      await Collection.nodePosition(list)\n    },\n    getNodeTree(nodes, id, list) {\n      if (!nodes) {\n        return\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === id) {\n          list[1] = i - 1 >= 0 ? nodes[i - 1].id : 0\n          list[2] = nodes[i].id\n          list[3] = i + 1 < nodes.length ? nodes[i + 1].id : 0\n          return\n        }\n      }\n    },\n    allowDrop(draggingNode, dropNode, type) {\n      return draggingNode.level === dropNode.level && type !== 'inner'\n    },\n    createNewPocket() {\n      this.pocket_dialog_visible = true\n      this.pocket_operation_type = 1\n      this.pocket_info.pocket_name = ''\n      this.pocket_info.collection_id = this.collection_id\n    },\n    updatePocket(data) {\n      this.pocket_dialog_visible = true\n      this.pocket_operation_type = 2\n      this.pocket_info = {\n        id: data.id,\n        pocket_name: data.name\n      }\n    },\n    async deletePocket(id) {\n      if (this.pocket_list.length <= 1) {\n        this.$message.error('至少保留一个模块')\n        return\n      }\n      this.$confirm('确定要删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      })\n        .then(\n          async () => {\n            const res = await Collection.deletePocket(id)\n            if (res.code < window.MAX_SUCCESS_CODE) {\n              this.$message.success(res.message)\n              this.pageInit()\n            } else {\n              this.$message.error('删除功能异常')\n            }\n          }\n        )\n    },\n    async pocketSave() {\n      let res\n      if (this.pocket_operation_type === 2) {\n        res = await Collection.updatePocket(this.pocket_info)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(res.message)\n          this.pocket_dialog_visible = false\n          this.getPocketList()\n        } else {\n          this.$message.error('服务端异常')\n        }\n      } else if (this.pocket_operation_type === 1) {\n        res = await Collection.createPocket(this.pocket_info)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.pocket_dialog_visible = false\n          this.getPocketList()\n          const id = Number(res.message)\n          this.default_expanded_key = [id]\n          this.current_pocket_id = id\n          this.current_choose_case_id_list = []\n          await this.refreshTableInfo()\n        } else {\n          this.$message.error('服务端异常')\n        }\n      }\n    },\n    async selectAll(val) {\n      const list = []\n      if (val.length === 0) {\n        // 取消全选\n        this.case_list.forEach(async e => {\n          const param = {\n            pocket_id: this.current_pocket_id,\n            case_id: e.id,\n            case_name: e.case_name,\n          }\n          list.push(param)\n          this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(e.id), 1)\n        })\n        await Collection.batchDeleteCase(list)\n      } else {\n        // 全选\n        val.forEach(async e => {\n          if (!this.current_choose_case_id_list.includes(e.id)) {\n            const param = {\n              pocket_id: this.current_pocket_id,\n              case_id: e.id,\n              case_name: e.case_name,\n            }\n            list.push(param)\n            this.current_choose_case_id_list.push(e.id)\n          }\n        })\n        await Collection.batchInsertCase(list)\n      }\n      this.getPocketList()\n      this.default_expanded_key = [this.current_pocket_id]\n    },\n    async rowSelect(selection, row) {\n      // false为反选，true为选中\n      let chooseType = false\n      const { id, case_name } = row\n      selection.forEach(r => {\n        chooseType = r.id === id\n      })\n      const param = {\n        pocket_id: this.current_pocket_id,\n        case_id: id,\n        case_name,\n      }\n      if (chooseType) {\n        await Collection.insertCaseToPocket(param)\n        this.current_choose_case_id_list.push(id)\n      } else {\n        await Collection.deleteCaseFromPocket(param)\n        this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(id), 1)\n      }\n      this.getPocketList()\n    },\n    async deleteCase(data) {\n      this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(data.business_id), 1)\n      const param = {\n        pocket_id: this.current_pocket_id,\n        case_id: data.business_id,\n      }\n      await Collection.deleteCaseFromPocket(param)\n      await this.getPocketList()\n      await this.refreshTableInfo()\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.refreshTableInfo()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.refreshTableInfo()\n    },\n    async doExecute() {\n      this.execute_button_loading = true\n      const reportId = await CollectionReport.execute(this.collection_id)\n      await new Promise(resolve => {\n        setTimeout(() => resolve('down'), 1000)\n      })\n      this.execute_button_loading = false\n      this.$router.push(`/api-test/report-detail/${reportId}`)\n    },\n    drawerClose() {\n      this.drawer_visible = false\n      this.searchCaseList()\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  //noinspection CssUnknownTarget\n  @import \"@/static/css/common.scss\";\n  .body {\n    display: flex;\n\n    .pocket-card {\n      width: 22%;\n      height: 600px;\n      position:relative;\n\n      .run-button {\n        width: 100%;\n        height: 40px;\n        font-size: 120%;\n      }\n\n      .tree-list {\n        height: 520px;\n\n        .custom-tree-node {\n          flex: 1 1 auto;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          font-size: 14px;\n          padding-right: 8px;\n          width: 100%;\n\n          .node-title {\n            width: 0;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            flex: 1 1 auto;\n            padding: 0 5px;\n            overflow: hidden;\n          }\n\n          .node-operate > i {\n            color: #409eff;\n            margin: 0 5px;\n          }\n\n          .children-content {\n            width: 150px;\n            overflow:hidden;\n            text-overflow:ellipsis;\n            white-space:nowrap;\n          }\n\n          .delete-icon {\n            display: none;\n          }\n        }\n\n        .father .child {\n          display: none;\n        }\n\n        .father:hover .child {\n          display: block;\n        }\n\n        .custom-tree-node:hover .delete-icon{\n          display: block;\n        }\n      }\n\n\n    }\n\n    .case-manage-card {\n      width: 78%;\n      height: 600px;\n      margin-left: 5px;\n\n      .row-name {\n        width: 120px\n      }\n\n      .row-category {\n        width: 100px;\n        margin-left: 10px\n      }\n\n      .row-creator {\n        width: 120px;\n        margin-left: 10px;\n\n        .creator-name {\n          float: left;\n        }\n        .creator-code {\n          float: right;\n          color: #8492a6;\n          font-size: 13px;\n        }\n      }\n\n      .case-table {\n        height: 520px;\n        margin-top: 10px;\n        width: 100%;\n\n        .GET {\n          color: #00C292;\n          font-weight: 500;\n        }\n        .POST {\n          color: #409EFF;\n          font-weight: 500;\n        }\n        .PUT {\n          color: #E6A23C;\n          font-weight: 500;\n        }\n        .DELETE {\n          color: #E46A76;\n          font-weight: 500;\n        }\n      }\n    }\n  }\n\n  .el-tree /deep/ .is-expanded {\n    color: #333333;\n    font-weight: bold\n  }\n\n\n</style>\n"]}]}