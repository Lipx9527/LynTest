{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/log/log.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/log/log.vue","mtime":1606834545550},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport log from 'lin/model/log'\nimport { searchLogKeyword } from 'lin/util/search'\nimport LinSearch from '@/component/base/search/lin-search'\nimport LinDatePicker from '@/component/base/date-picker/lin-date-picker'\n\nexport default {\n  components: {\n    LinSearch,\n    LinDatePicker,\n  },\n  data() {\n    return {\n      log: null,\n      value: '',\n      logs: [],\n      users: [],\n      searchUser: '',\n      more: false,\n      loading: false,\n      finished: false,\n      isSearch: false,\n      error: false,\n      searchKeyword: '',\n      searchDate: [],\n      keyword: null,\n      totalCount: 0,\n    }\n  },\n  computed: {\n    ...mapGetters(['permissions', 'user']),\n  },\n  async created() {\n    this.loading = true\n    await this.initPage()\n    this.loading = false\n  },\n  watch: {\n    // 用户搜索\n    searchUser(user) {\n      this.keyword = user\n      if (this.searchKeyword) {\n        this.keyword = `${user} ${this.searchKeyword}`\n      }\n      if (this.searchDate.length) {\n        this.keyword = `${user} ${this.searchKeyword} ${this.searchDate}`\n      }\n      this.searchPage()\n    },\n    // 关键字搜索\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser} ${newVal}`\n        }\n        if (this.searchDate.length) {\n          this.keyword = `${this.searchUser} ${newVal} ${this.searchDate}`\n        }\n      } else {\n        this.keyword = ''\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser}`\n        }\n        if (this.searchDate.length) {\n          this.keyword = `${this.searchUser} ${this.searchDate}`\n        }\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchPage()\n    },\n    // 日期搜索\n    searchDate(newDate) {\n      if (newDate && newDate.length) {\n        this.keyword = `${newDate[0]}至${newDate[1]}`\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser} ${newDate[0]}至${newDate[1]}`\n        }\n        if (this.searchKeyword) {\n          this.keyword = `${this.searchUser} ${this.searchKeyword} ${newDate[0]}至${newDate[1]}`\n        }\n      } else {\n        this.keyword = ''\n        this.isSearch = false\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser}`\n        }\n        if (this.searchKeyword) {\n          this.keyword = `${this.searchUser} ${this.searchKeyword}`\n        }\n        this.$refs.searchDate.clear()\n      }\n      this.searchPage()\n    },\n  },\n  methods: {\n    // 下拉框\n    handleCommand(user) {\n      this.searchUser = user[0] // eslint-disable-line\n    },\n    // 页面初始化\n    async initPage() {\n      try {\n        if (this.user.admin || this.permissions.includes('查询日志记录的用户')) {\n          this.users = await log.getLoggedUsers({})\n        }\n        const res = await log.getLogs({ page: 0 })\n        this.logs = res.items\n      } catch (err) {\n        console.error(err.data)\n      }\n    },\n    // 条件检索\n    async searchPage() {\n      this.totalCount = 0\n      this.logs = []\n      this.loading = true\n      this.finished = false\n      const name = this.searchUser === '全部人员' ? '' : this.searchUser\n      const res = await log.searchLogs({\n        page: 0, // 初始化\n        keyword: this.searchKeyword,\n        name,\n        start: this.searchDate[0],\n        end: this.searchDate[1],\n      })\n      if (res) {\n        let logs = res.items\n        this.totalCount = res.total\n        if (this.searchKeyword) {\n          logs = await searchLogKeyword(this.searchKeyword, logs)\n        }\n        this.logs = logs\n      } else {\n        this.finished = true\n      }\n      this.isSearch = true\n      this.loading = false\n    },\n    // 下一页\n    async nextPage() {\n      this.more = true\n      let res\n      try {\n        if (this.isSearch) {\n          res = await log.moreSearchPage()\n        } else {\n          res = await log.moreLogPage()\n        }\n\n        let moreLogs = res.items\n        if (this.isSearch && this.searchKeyword) {\n          moreLogs = await searchLogKeyword(this.searchKeyword, moreLogs)\n        }\n        this.logs = this.logs.concat(moreLogs)\n\n        this.more = false\n      } catch (error) {\n        console.error('error', error)\n\n        if (error.data.code === 10220) {\n          this.finished = true\n        }\n\n        this.more = false\n      }\n    },\n    searchByUser(user) {\n      this.searchUser = user\n    },\n    onQueryChange(query) {\n      // 处理带空格的情况\n      this.searchKeyword = query.trim()\n    },\n    handleDateChange(date) {\n      this.searchDate = date\n    },\n    // 清空检索\n    async backInit() {\n      this.searchUser = ''\n      this.searchKeyword = ''\n      this.searchDate = []\n      this.keyword = ''\n      this.logs = []\n      this.isSearch = false\n      this.loading = true\n      await this.initPage()\n      this.loading = false\n    },\n  },\n  destroyed() {\n    log.init()\n  },\n}\n",null]}