{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/sql/database-manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/sql/database-manage.vue","mtime":1606834545571},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataBase from '@/model/sql/database'\n\nexport default {\n  data() {\n    return {\n      tableData: [],\n      dialog_visible: false,\n      edit_type: 1,\n      db_info: {},\n      default_db_info: {\n        database_name: '',\n        url: '',\n        username: '',\n        password: '',\n        database_type: 1,\n      },\n      db_type_list: [{\n        label: 'MySQL',\n        value: 1,\n      }, {\n        label: 'Oracle',\n        value: 2,\n      }],\n    }\n  },\n  mounted() {\n    this.getDataBaseList()\n  },\n  methods: {\n    async getDataBaseList() {\n      const res = await DataBase.getDbList()\n      res.forEach(e => {\n        e.db_type = e.database_type === 1 ? 'MySQL' : 'Oracle'\n      })\n      this.tableData = res\n    },\n    createDataBase() {\n      this.db_info = { ...this.default_db_info }\n      this.dialog_visible = true\n      this.edit_type = 1\n    },\n    handleEdit(row) {\n      this.edit_type = 2\n      this.dialog_visible = true\n      this.db_info = { ...row }\n    },\n    async deleteDataBase(id) {\n      const res = await DataBase.deleteDB(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.getDataBaseList()\n      } else {\n        this.$message.error('删除数据库功能异常')\n      }\n    },\n    async saveDataBase() {\n      const res = this.edit_type === 1 ? await DataBase.createDB(this.db_info) : await DataBase.updateDB(this.db_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.dialog_visible = false\n        this.getDataBaseList()\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n  }\n}\n",{"version":3,"sources":["database-manage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"database-manage.vue","sourceRoot":"src/view/sql","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header\"><div class=\"title\">数据库管理</div></div>\n    <el-button type=\"primary\" @click=\"createDataBase\" size=\"small\">新 增</el-button>\n    <br/>\n    <br/>\n    <el-table :data=\"tableData\">\n      <el-table-column prop=\"database_name\" label=\"数据库名\" sortable></el-table-column>\n      <el-table-column prop=\"url\" label=\"数据库地址\" sortable></el-table-column>\n      <el-table-column prop=\"username\" label=\"用户名\" sortable></el-table-column>\n      <el-table-column prop=\"password\" label=\"密码\" sortable></el-table-column>\n      <el-table-column prop=\"db_type\" label=\"类型\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag type=\"success\" disable-transitions>{{scope.row.db_type}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"deleteDataBase(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :visible.sync=\"dialog_visible\" width=\"450px\">\n      <el-form :model=\"db_info\" label-width=\"100px\">\n        <el-form-item label=\"数据库名\">\n          <el-input v-model=\"db_info.database_name\" placeholder=\"xxx库\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"数据库地址\">\n          <el-input v-model=\"db_info.url\" placeholder=\"127.0.0.1\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"db_info.username\" placeholder=\"username\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\">\n          <el-input v-model=\"db_info.password\" placeholder=\"password\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\">\n          <el-select v-model=\"db_info.database_type\">\n            <el-option v-for=\"item in db_type_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"saveDataBase\">保 存</el-button>\n        <el-button @click=\"dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport DataBase from '@/model/sql/database'\n\nexport default {\n  data() {\n    return {\n      tableData: [],\n      dialog_visible: false,\n      edit_type: 1,\n      db_info: {},\n      default_db_info: {\n        database_name: '',\n        url: '',\n        username: '',\n        password: '',\n        database_type: 1,\n      },\n      db_type_list: [{\n        label: 'MySQL',\n        value: 1,\n      }, {\n        label: 'Oracle',\n        value: 2,\n      }],\n    }\n  },\n  mounted() {\n    this.getDataBaseList()\n  },\n  methods: {\n    async getDataBaseList() {\n      const res = await DataBase.getDbList()\n      res.forEach(e => {\n        e.db_type = e.database_type === 1 ? 'MySQL' : 'Oracle'\n      })\n      this.tableData = res\n    },\n    createDataBase() {\n      this.db_info = { ...this.default_db_info }\n      this.dialog_visible = true\n      this.edit_type = 1\n    },\n    handleEdit(row) {\n      this.edit_type = 2\n      this.dialog_visible = true\n      this.db_info = { ...row }\n    },\n    async deleteDataBase(id) {\n      const res = await DataBase.deleteDB(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.getDataBaseList()\n      } else {\n        this.$message.error('删除数据库功能异常')\n      }\n    },\n    async saveDataBase() {\n      const res = this.edit_type === 1 ? await DataBase.createDB(this.db_info) : await DataBase.updateDB(this.db_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.dialog_visible = false\n        this.getDataBaseList()\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n//noinspection CssUnknownTarget\n@import \"@/static/css/common.scss\";\n</style>\n"]}]}