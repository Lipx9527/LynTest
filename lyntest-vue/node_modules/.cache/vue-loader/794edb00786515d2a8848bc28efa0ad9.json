{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/statistical/function/function-statistical.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/statistical/function/function-statistical.vue","mtime":1606834545503},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Manager from '@/model/statistical/manager'\nimport Function from '@/model/statistical/function'\n\nexport default {\n  data() {\n    return {\n      date: '',\n      search: {\n        start_date: '',\n        end_date: '',\n        statistic_type: 1,\n        product_code: '',\n      },\n      radio_list: [{\n        label: '产品线',\n        value: 1,\n      }, {\n        label: '测试',\n        value: 2,\n      }, {\n        label: '开发',\n        value: 3\n      }],\n      pro_is_show: false,\n      product_list: [],\n      histogramData: {},\n      devEfficiencyData: {\n        columns: [],\n        rows: [],\n      },\n      chartSettings: {},\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          type: 'bar',\n          barWidth: 20,\n          label: {\n            position: 'top'\n          }\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter(value) {\n              return value.split('').join('\\n')\n            }\n          },\n        }\n      },\n    }\n  },\n  mounted() {\n    this.functionStatistic(1)\n    this.getProductLineList()\n  },\n  methods: {\n    async getProductLineList() {\n      this.product_list = await Manager.getProductList()\n    },\n    async chooseDate(date) {\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      this.functionStatistic()\n    },\n    async functionStatistic() {\n      const res = await Function.statistic(this.search)\n      if (res.success) {\n        this.histogramData.rows = res.result\n      }\n      this.pro_is_show = this.search.statistic_type === 3\n      if (this.search.statistic_type === 1) {\n        this.histogramData.columns = ['name', 'daily_function_count', 'project_function_count', 'daily_demand_count', 'project_demand_count']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            daily_function_count: '日常功能点',\n            project_function_count: '项目功能点',\n            daily_demand_count: '日常需求数',\n            project_demand_count: '项目需求数',\n            demand: '需求数'\n          },\n          stack: { name: ['daily_function_count', 'project_function_count'], demand: ['daily_demand_count', 'project_demand_count'] },\n          axisSite: { right: ['daily_demand_count', 'project_demand_count'] },\n        }\n      } else if (this.search.statistic_type === 2) {\n        this.histogramData.columns = ['name', 'count']\n        this.chartSettings = {\n          labelMap: { name: '姓名',\n            count: '功能点' }\n        }\n      } else if (this.search.statistic_type === 3) {\n        this.histogramData.columns = ['name', 'count', 'per_mille']\n        this.chartSettings = {\n          axisSite: { right: ['per_mille'] },\n          labelMap: {\n            name: '产品线',\n            count: '功能点',\n            per_mille: '千功能点bug率',\n          }\n        }\n      }\n    },\n  }\n}\n",{"version":3,"sources":["function-statistical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"function-statistical.vue","sourceRoot":"src/component/statistical/function","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"7\">\n        <el-date-picker style=\"width: 100%\"\n                        v-model=\"date\"\n                        type=\"daterange\"\n                        unlink-panels range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\"\n                        value-format=\"yyyy-MM-dd\"\n                        @change=\"chooseDate\">\n        </el-date-picker>\n      </el-col>\n      <el-col :span=\"5.5\">\n        <el-radio-group v-model=\"search.statistic_type\" @change=\"functionStatistic\" style=\"width: 100%\">\n          <el-radio-button v-for=\"item in radio_list\" :label=\"item.value\" :key=\"item.value\">{{item.label}}</el-radio-button>\n        </el-radio-group>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-select v-show=\"pro_is_show\" v-model=\"search.product_code\" placeholder=\"产品线\" style=\"width: 180px\" @change=\"functionStatistic\">\n          <el-option v-for=\"item in product_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"/>\n        </el-select>\n      </el-col>\n    </el-row>\n    <br/>\n    <ve-histogram :data=\"histogramData\" :settings=\"chartSettings\" :extend=\"chartExtend\" width=\"1000px\" height=\"500px\"></ve-histogram>\n  </div>\n</template>\n\n<script>\nimport Manager from '@/model/statistical/manager'\nimport Function from '@/model/statistical/function'\n\nexport default {\n  data() {\n    return {\n      date: '',\n      search: {\n        start_date: '',\n        end_date: '',\n        statistic_type: 1,\n        product_code: '',\n      },\n      radio_list: [{\n        label: '产品线',\n        value: 1,\n      }, {\n        label: '测试',\n        value: 2,\n      }, {\n        label: '开发',\n        value: 3\n      }],\n      pro_is_show: false,\n      product_list: [],\n      histogramData: {},\n      devEfficiencyData: {\n        columns: [],\n        rows: [],\n      },\n      chartSettings: {},\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          type: 'bar',\n          barWidth: 20,\n          label: {\n            position: 'top'\n          }\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter(value) {\n              return value.split('').join('\\n')\n            }\n          },\n        }\n      },\n    }\n  },\n  mounted() {\n    this.functionStatistic(1)\n    this.getProductLineList()\n  },\n  methods: {\n    async getProductLineList() {\n      this.product_list = await Manager.getProductList()\n    },\n    async chooseDate(date) {\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      this.functionStatistic()\n    },\n    async functionStatistic() {\n      const res = await Function.statistic(this.search)\n      if (res.success) {\n        this.histogramData.rows = res.result\n      }\n      this.pro_is_show = this.search.statistic_type === 3\n      if (this.search.statistic_type === 1) {\n        this.histogramData.columns = ['name', 'daily_function_count', 'project_function_count', 'daily_demand_count', 'project_demand_count']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            daily_function_count: '日常功能点',\n            project_function_count: '项目功能点',\n            daily_demand_count: '日常需求数',\n            project_demand_count: '项目需求数',\n            demand: '需求数'\n          },\n          stack: { name: ['daily_function_count', 'project_function_count'], demand: ['daily_demand_count', 'project_demand_count'] },\n          axisSite: { right: ['daily_demand_count', 'project_demand_count'] },\n        }\n      } else if (this.search.statistic_type === 2) {\n        this.histogramData.columns = ['name', 'count']\n        this.chartSettings = {\n          labelMap: { name: '姓名',\n            count: '功能点' }\n        }\n      } else if (this.search.statistic_type === 3) {\n        this.histogramData.columns = ['name', 'count', 'per_mille']\n        this.chartSettings = {\n          axisSite: { right: ['per_mille'] },\n          labelMap: {\n            name: '产品线',\n            count: '功能点',\n            per_mille: '千功能点bug率',\n          }\n        }\n      }\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}