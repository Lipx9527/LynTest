{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/layout/side-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/layout/side-bar.vue","mtime":1606834545497},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport Utils from '@/lin/util/util'\nimport Config from '../../config/index'\n\nexport default {\n  data() {\n    return {\n      sidebar: '',\n      groups: [],\n      showSidebarSearch: Config.showSidebarSearch,\n      showSearchList: false,\n    }\n  },\n  inject: ['eventBus'],\n  props: {\n    isPhone: {\n      type: Boolean,\n      default: false,\n    },\n    isCollapse: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted() {\n    this.eventBus.$on('removeSidebarSearch', () => {\n      this.showSidebarSearch = false\n    })\n    this.eventBus.$on('showSidebarSearch', () => {\n      if (Config.showSidebarSearch) {\n        this.showSidebarSearch = true\n      }\n    })\n  },\n  methods: {\n    filterIcon(icon) {\n      return icon.indexOf('/') !== -1\n    },\n    handleChange(val) {\n      this.groups = []\n      this.sidebar = ''\n      this.showSearchList = false\n      this.$router.push(val)\n    },\n    toSearch() {\n      this.showSearchList = true\n      setTimeout(() => {\n        this.$refs.searchInput.focus()\n      }, 200)\n    },\n    search(val) {\n      this.groups = []\n\n      // 深度遍历配置树, 摘取叶子节点作为路由部分\n      function deepTravel(config, fuc) {\n        if (Array.isArray(config)) {\n          config.forEach(subConfig => {\n            deepTravel(subConfig, fuc)\n          })\n        } else if (config.children) {\n          config.children.forEach(subConfig => {\n            deepTravel(subConfig, fuc)\n          })\n        } else {\n          fuc(config)\n        }\n      }\n\n      deepTravel(this.sideBarList, viewConfig => {\n        // 构造舞台view路由\n        if (viewConfig.title.includes(val)) {\n          const viewRouter = {}\n          viewRouter.path = viewConfig.path\n          viewRouter.title = viewConfig.title\n          viewRouter.key = Math.random()\n          this.groups.push(viewRouter)\n        }\n      })\n    },\n  },\n  computed: {\n    elMenuCollapse() {\n      if (this.isPhone) {\n        return false\n      }\n\n      return this.isCollapse\n    },\n    // 根据当前路由设置激活侧边栏\n    defaultActive() {\n      for (let i = this.stageInfo.length - 1; i >= 0; i -= 1) {\n        if (this.idMap[this.stageInfo[i].name]) {\n          return this.idMap[this.stageInfo[i].name]\n        }\n      }\n      return ''\n    },\n    stageInfo() {\n      return this.$store.getters.getStageInfo(this.$route.name)\n    },\n    // 由于index不支持symbol格式, 因此使用 idMap 进行映射\n    idMap() {\n      const { sideBarList } = this\n      const mapData = {}\n      const deepTravel = (obj, fuc) => {\n        if (Array.isArray(obj)) {\n          obj.forEach(item => {\n            deepTravel(item, fuc)\n          })\n          return\n        }\n        if (obj && obj.children) {\n          fuc(obj)\n          deepTravel(obj.children, fuc)\n          return\n        }\n        if (obj.name) {\n          fuc(obj)\n        }\n      }\n      deepTravel(sideBarList, item => {\n        mapData[item.name] = Utils.getRandomStr()\n      })\n\n      return mapData\n    },\n    imgSrc() {\n      return this.elMenuCollapse === false ? '../../assets/image/left-logo.png' : '../../assets/image/logo.png'\n    },\n    ...mapGetters(['sideBarList']),\n  },\n}\n",null]}