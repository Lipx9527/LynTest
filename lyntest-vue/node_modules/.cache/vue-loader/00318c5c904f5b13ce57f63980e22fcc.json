{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/autotest/http-case-edit.vue?vue&type=template&id=170651f5&scoped=true&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/autotest/http-case-edit.vue","mtime":1608859928730},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-card\",\n    { staticClass: \"edit\" },\n    [\n      _c(\"div\", { staticClass: \"info-row\" }, [\n        _c(\"div\", { staticClass: \"info-cols\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"category-col\" },\n            [\n              _c(\"div\", { staticClass: \"title\" }, [_vm._v(\"分类名称:\")]),\n              _c(\n                \"el-select\",\n                {\n                  staticStyle: { width: \"120px\" },\n                  model: {\n                    value: _vm.case_info.category,\n                    callback: function($$v) {\n                      _vm.$set(_vm.case_info, \"category\", $$v)\n                    },\n                    expression: \"case_info.category\"\n                  }\n                },\n                _vm._l(_vm.category_list, function(item) {\n                  return _c(\"el-option\", {\n                    key: item.category_name,\n                    attrs: {\n                      label: item.category_name,\n                      value: item.category_name\n                    }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"name-col\" },\n            [\n              _c(\"div\", { staticClass: \"title\" }, [_vm._v(\"接口名称:\")]),\n              _c(\"el-input\", {\n                staticStyle: { width: \"calc(100% - 80px)\" },\n                model: {\n                  value: _vm.case_info.case_name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.case_info, \"case_name\", $$v)\n                  },\n                  expression: \"case_info.case_name\"\n                }\n              })\n            ],\n            1\n          )\n        ]),\n        _c(\n          \"div\",\n          [\n            _c(\n              \"el-button\",\n              { attrs: { type: \"success\" }, on: { click: _vm.caseExecute } },\n              [_vm._v(\"请求 \"), _c(\"i\", { staticClass: \"el-icon-s-promotion\" })]\n            ),\n            _c(\n              \"el-button\",\n              { attrs: { type: \"primary\" }, on: { click: _vm.saveCase } },\n              [\n                _vm._v(_vm._s(_vm.operationType === 2 ? \"更新\" : \"保存\") + \" \"),\n                _c(\"i\", { staticClass: \"el-icon-download\" })\n              ]\n            )\n          ],\n          1\n        )\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"info-row\" },\n        [\n          _c(\"div\", { staticClass: \"title\" }, [_vm._v(\"接口地址:\")]),\n          _c(\n            \"el-input\",\n            {\n              staticStyle: { width: \"calc(100% - 80px)\" },\n              model: {\n                value: _vm.case_info.api_url,\n                callback: function($$v) {\n                  _vm.$set(_vm.case_info, \"api_url\", $$v)\n                },\n                expression: \"case_info.api_url\"\n              }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  staticStyle: { width: \"90px\" },\n                  attrs: { slot: \"prepend\" },\n                  slot: \"prepend\",\n                  model: {\n                    value: _vm.case_info.api_method,\n                    callback: function($$v) {\n                      _vm.$set(_vm.case_info, \"api_method\", $$v)\n                    },\n                    expression: \"case_info.api_method\"\n                  }\n                },\n                _vm._l(_vm.config.method_list, function(item) {\n                  return _c(\"el-option\", {\n                    key: item,\n                    attrs: { label: item, value: item }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tabs\",\n        { staticClass: \"request\", attrs: { type: \"border-card\" } },\n        [\n          _c(\n            \"el-tab-pane\",\n            { attrs: { label: \"请求体\" } },\n            [\n              _c(\n                \"el-radio-group\",\n                {\n                  staticStyle: { \"margin-bottom\": \"10px\" },\n                  model: {\n                    value: _vm.case_info.body_type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.case_info, \"body_type\", $$v)\n                    },\n                    expression: \"case_info.body_type\"\n                  }\n                },\n                [\n                  _c(\"el-radio\", { attrs: { label: 1 } }, [_vm._v(\"json\")]),\n                  _c(\"el-radio\", { attrs: { label: 2 } }, [_vm._v(\"form\")])\n                ],\n                1\n              ),\n              _c(\"el-input\", {\n                staticClass: \"request-body\",\n                attrs: {\n                  type: \"textarea\",\n                  autosize: { minRows: 5, maxRows: 5 },\n                  resize: \"none\"\n                },\n                model: {\n                  value: _vm.case_info.body_value,\n                  callback: function($$v) {\n                    _vm.$set(_vm.case_info, \"body_value\", $$v)\n                  },\n                  expression: \"case_info.body_value\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"el-tab-pane\", { attrs: { label: \"请求头\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"request-param\" },\n              [\n                _c(\n                  \"vue-scroll\",\n                  _vm._l(_vm.case_info.header_form, function(item, index) {\n                    return _c(\n                      \"div\",\n                      { key: index, staticClass: \"kv-row\" },\n                      [\n                        _c(\n                          \"el-row\",\n                          {\n                            attrs: {\n                              type: \"flex\",\n                              gutter: 20,\n                              justify: \"space-between\",\n                              align: \"middle\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-checkbox\" },\n                              [\n                                !_vm.eleIsDisable(\n                                  index,\n                                  _vm.case_info.header_form\n                                )\n                                  ? _c(\"el-checkbox\", {\n                                      model: {\n                                        value: item.enable,\n                                        callback: function($$v) {\n                                          _vm.$set(item, \"enable\", $$v)\n                                        },\n                                        expression: \"item.enable\"\n                                      }\n                                    })\n                                  : _vm._e()\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    size: \"small\",\n                                    placeholder: \"键\",\n                                    \"show-word-limit\": \"\"\n                                  },\n                                  on: { change: _vm.headerChange },\n                                  model: {\n                                    value: item.header_key,\n                                    callback: function($$v) {\n                                      _vm.$set(item, \"header_key\", $$v)\n                                    },\n                                    expression: \"item.header_key\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    size: \"small\",\n                                    placeholder: \"值\",\n                                    \"show-word-limit\": \"\"\n                                  },\n                                  on: { change: _vm.headerChange },\n                                  model: {\n                                    value: item.header_value,\n                                    callback: function($$v) {\n                                      _vm.$set(item, \"header_value\", $$v)\n                                    },\n                                    expression: \"item.header_value\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-delete\" },\n                              [\n                                _c(\"el-button\", {\n                                  staticClass: \"el-icon-delete-solid\",\n                                  attrs: {\n                                    size: \"mini\",\n                                    circle: \"\",\n                                    disabled: _vm.eleIsDisable(\n                                      index,\n                                      _vm.case_info.header_form\n                                    )\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.deleteRow(\n                                        index,\n                                        _vm.case_info.header_form\n                                      )\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  }),\n                  0\n                )\n              ],\n              1\n            )\n          ]),\n          _c(\"el-tab-pane\", { attrs: { label: \"变量\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"request-param\" },\n              [\n                _c(\n                  \"vue-scroll\",\n                  _vm._l(_vm.case_info.variable_list, function(item, index) {\n                    return _c(\n                      \"div\",\n                      { key: index, staticClass: \"kv-row\" },\n                      [\n                        _c(\n                          \"el-row\",\n                          {\n                            attrs: {\n                              type: \"flex\",\n                              gutter: 20,\n                              justify: \"space-between\",\n                              align: \"middle\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-checkbox\" },\n                              [\n                                !_vm.eleIsDisable(\n                                  index,\n                                  _vm.case_info.variable_list\n                                )\n                                  ? _c(\"el-checkbox\", {\n                                      model: {\n                                        value: item.enable,\n                                        callback: function($$v) {\n                                          _vm.$set(item, \"enable\", $$v)\n                                        },\n                                        expression: \"item.enable\"\n                                      }\n                                    })\n                                  : _vm._e()\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-select\" },\n                              [\n                                _c(\n                                  \"el-select\",\n                                  {\n                                    attrs: {\n                                      placeholder: \"请选择取值方式\",\n                                      size: \"small\"\n                                    },\n                                    on: { change: _vm.variableChange },\n                                    model: {\n                                      value: item.extract_method,\n                                      callback: function($$v) {\n                                        _vm.$set(item, \"extract_method\", $$v)\n                                      },\n                                      expression: \"item.extract_method\"\n                                    }\n                                  },\n                                  _vm._l(_vm.config.extract_type_list, function(\n                                    item\n                                  ) {\n                                    return _c(\"el-option\", {\n                                      key: item.value,\n                                      attrs: {\n                                        label: item.label,\n                                        value: item.value\n                                      }\n                                    })\n                                  }),\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    size: \"small\",\n                                    placeholder: \"提取路径\"\n                                  },\n                                  on: { change: _vm.variableChange },\n                                  model: {\n                                    value: item.extract_rule,\n                                    callback: function($$v) {\n                                      _vm.$set(item, \"extract_rule\", $$v)\n                                    },\n                                    expression: \"item.extract_rule\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              [\n                                _c(\n                                  \"el-tooltip\",\n                                  {\n                                    staticClass: \"item\",\n                                    attrs: {\n                                      effect: \"dark\",\n                                      content:\n                                        \"为保持变量名规范，请输入大写、下划线，类似于VARIABLE_TYPE,引用时使用${VARIABLE_TYPE}\",\n                                      enterable: false,\n                                      placement: \"top-end\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"el-input\", {\n                                      attrs: {\n                                        size: \"small\",\n                                        placeholder: \"变量名\"\n                                      },\n                                      on: { change: _vm.variableChange },\n                                      model: {\n                                        value: item.variable_name,\n                                        callback: function($$v) {\n                                          _vm.$set(item, \"variable_name\", $$v)\n                                        },\n                                        expression: \"item.variable_name\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-delete\" },\n                              [\n                                _c(\"el-button\", {\n                                  staticClass: \"el-icon-delete-solid\",\n                                  attrs: {\n                                    size: \"mini\",\n                                    circle: \"\",\n                                    disabled: _vm.eleIsDisable(\n                                      index,\n                                      _vm.case_info.variable_list\n                                    )\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.deleteRow(\n                                        index,\n                                        _vm.case_info.variable_list\n                                      )\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  }),\n                  0\n                )\n              ],\n              1\n            )\n          ]),\n          _c(\"el-tab-pane\", { attrs: { label: \"断言\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"request-param\" },\n              [\n                _c(\n                  \"vue-scroll\",\n                  _vm._l(_vm.case_info.expected_list, function(item, index) {\n                    return _c(\n                      \"div\",\n                      { key: index, staticClass: \"kv-row\" },\n                      [\n                        _c(\n                          \"el-row\",\n                          {\n                            attrs: {\n                              type: \"flex\",\n                              gutter: 20,\n                              justify: \"space-between\",\n                              align: \"middle\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-checkbox\" },\n                              [\n                                !_vm.eleIsDisable(\n                                  index,\n                                  _vm.case_info.expected_list\n                                )\n                                  ? _c(\"el-checkbox\", {\n                                      model: {\n                                        value: item.enable,\n                                        callback: function($$v) {\n                                          _vm.$set(item, \"enable\", $$v)\n                                        },\n                                        expression: \"item.enable\"\n                                      }\n                                    })\n                                  : _vm._e()\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-select\" },\n                              [\n                                _c(\n                                  \"el-select\",\n                                  {\n                                    attrs: {\n                                      placeholder: \"请选择取值方式\",\n                                      size: \"small\"\n                                    },\n                                    on: { change: _vm.expectedChange },\n                                    model: {\n                                      value: item.extract_method,\n                                      callback: function($$v) {\n                                        _vm.$set(item, \"extract_method\", $$v)\n                                      },\n                                      expression: \"item.extract_method\"\n                                    }\n                                  },\n                                  _vm._l(_vm.config.extract_type_list, function(\n                                    item\n                                  ) {\n                                    return _c(\"el-option\", {\n                                      key: item.value,\n                                      attrs: {\n                                        label: item.label,\n                                        value: item.value\n                                      }\n                                    })\n                                  }),\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    size: \"small\",\n                                    placeholder: \"提取路径/规则\"\n                                  },\n                                  on: { change: _vm.expectedChange },\n                                  model: {\n                                    value: item.extract_rule,\n                                    callback: function($$v) {\n                                      _vm.$set(item, \"extract_rule\", $$v)\n                                    },\n                                    expression: \"item.extract_rule\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-select\" },\n                              [\n                                _c(\n                                  \"el-select\",\n                                  {\n                                    attrs: {\n                                      placeholder: \"校验方式\",\n                                      size: \"small\"\n                                    },\n                                    on: { change: _vm.expectedChange },\n                                    model: {\n                                      value: item.compare_type,\n                                      callback: function($$v) {\n                                        _vm.$set(item, \"compare_type\", $$v)\n                                      },\n                                      expression: \"item.compare_type\"\n                                    }\n                                  },\n                                  _vm._l(\n                                    _vm.config.expected_type_list,\n                                    function(type) {\n                                      return _c(\"el-option\", {\n                                        key: type.value,\n                                        attrs: {\n                                          label: type.label,\n                                          value: type.value\n                                        }\n                                      })\n                                    }\n                                  ),\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    size: \"small\",\n                                    placeholder: \"预期值\",\n                                    disabled: item.compare_type === 3\n                                  },\n                                  on: { change: _vm.expectedChange },\n                                  model: {\n                                    value: item.expected_value,\n                                    callback: function($$v) {\n                                      _vm.$set(item, \"expected_value\", $$v)\n                                    },\n                                    expression: \"item.expected_value\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-col\",\n                              { staticClass: \"kv-delete\" },\n                              [\n                                _c(\"el-button\", {\n                                  staticClass: \"el-icon-delete-solid\",\n                                  attrs: {\n                                    size: \"mini\",\n                                    circle: \"\",\n                                    disabled: _vm.eleIsDisable(\n                                      index,\n                                      _vm.case_info.expected_list\n                                    )\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.deleteRow(\n                                        index,\n                                        _vm.case_info.expected_list\n                                      )\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  }),\n                  0\n                )\n              ],\n              1\n            )\n          ]),\n          _c(\n            \"el-tab-pane\",\n            { attrs: { label: \"描述\" } },\n            [\n              _c(\"el-input\", {\n                staticClass: \"request-body\",\n                attrs: {\n                  type: \"textarea\",\n                  autosize: { minRows: 6, maxRows: 6 },\n                  resize: \"none\"\n                },\n                model: {\n                  value: _vm.case_info.description,\n                  callback: function($$v) {\n                    _vm.$set(_vm.case_info, \"description\", $$v)\n                  },\n                  expression: \"case_info.description\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"div\", { staticClass: \"response\" }, [\n        _c(\"div\", { staticClass: \"response-header\" }, [\n          _c(\"div\", { staticClass: \"response-title\" }, [_vm._v(\"Response\")]),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.has_result,\n                  expression: \"has_result\"\n                }\n              ],\n              staticClass: \"response-info-list\"\n            },\n            [\n              _vm.result_is_json\n                ? _c(\n                    \"el-popover\",\n                    {\n                      attrs: {\n                        placement: \"left\",\n                        width: \"450\",\n                        trigger: \"hover\"\n                      }\n                    },\n                    [\n                      _c(\"assertions-detail\", {\n                        attrs: { result: _vm.result.expected_res }\n                      }),\n                      _c(\"i\", {\n                        staticClass: \"el-icon-view\",\n                        staticStyle: { transform: \"translateX(-10px)\" },\n                        attrs: { slot: \"reference\" },\n                        slot: \"reference\"\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\"response-status\", {\n                attrs: {\n                  \"status-code\": _vm.result.status_code,\n                  message: _vm.result.message,\n                  \"response-time\": _vm.result.response_time\n                }\n              })\n            ],\n            1\n          )\n        ]),\n        !_vm.has_result\n          ? _c(\"div\", { staticStyle: { height: \"calc(100% - 40px)\" } }, [\n              _c(\n                \"div\",\n                { staticClass: \"response-default-body\" },\n                [\n                  _c(\"l-icon\", {\n                    attrs: {\n                      name: \"file\",\n                      color: \"#ccc\",\n                      height: \"3.2em\",\n                      width: \"3.2em\"\n                    }\n                  }),\n                  _c(\"div\", { staticClass: \"default-content\" }, [\n                    _vm._v(\"Hit Send to get a response\")\n                  ])\n                ],\n                1\n              )\n            ])\n          : _c(\n              \"div\",\n              { staticClass: \"response-body\" },\n              [\n                _vm.result_json_path\n                  ? _c(\n                      \"div\",\n                      {\n                        staticClass: \"response-body-path\",\n                        on: { click: _vm.copyPath }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n        \" + _vm._s(_vm.result_json_path) + \" \"\n                        ),\n                        _c(\"i\", { staticClass: \"el-icon-copy-document\" })\n                      ]\n                    )\n                  : _vm._e(),\n                _c(\"vue-scroll\", [\n                  _vm.result_is_json\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"body-text-is-json\" },\n                        [\n                          _c(\"vue-json-pretty\", {\n                            attrs: {\n                              path: \"$\",\n                              data: _vm.result.response_text\n                            },\n                            on: { click: _vm.resultTextClick }\n                          })\n                        ],\n                        1\n                      )\n                    : _c(\"div\", { staticClass: \"body-text-not-json\" }, [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(_vm.result.response_text) +\n                            \"\\n        \"\n                        )\n                      ])\n                ])\n              ],\n              1\n            )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}