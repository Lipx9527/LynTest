{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/http-case-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/http-case-list.vue","mtime":1608022219000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HttpCase from '@/model/autotest/http-case'\nimport HttpCaseEdit from '@/component/autotest/http-case-edit'\nimport Category from '@/model/autotest/category'\n\nexport default {\n  components: {\n    HttpCaseEdit,\n  },\n  data() {\n    return {\n      operation_type: 0,\n      search: {\n        case_name: '',\n        category: '',\n        creator_code: '',\n        page: 1,\n        count: 10,\n      },\n      creator_list: [],\n      category_list: [],\n      edit_dialog_visible: false,\n      case_info: {},\n      total: null,\n      table: {\n        deleteConfirmDialogVisible: false,\n        multipleSelection: [],\n        ids: [],\n      },\n      table_data: [],\n      drawer_visible: false,\n    }\n  },\n  mounted() {\n    this.getCategoryList()\n    this.getCreatorList()\n    this.searchCaseList()\n  },\n  methods: {\n    // 获取系统列表\n    async getCategoryList() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    // 获取创建人列表\n    async getCreatorList() {\n      const res = await HttpCase.getCreatorList()\n      this.creator_list = res\n    },\n    // 搜索符合条件的所有testCase\n    async searchCaseList() {\n      const res = await HttpCase.searchCaseList(this.search)\n      this.table_data = res.items\n      this.total = res.total\n    },\n    // 创建case\n    createCase() {\n      this.case_info = { ...this.default_case_info }\n      this.drawer_visible = true\n      this.operation_type = 1\n    },\n    async saveCase() {\n      const res = await HttpCase.createCase(this.case_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.searchCaseList()\n      } else {\n        this.$message.error(res.message)\n      }\n    },\n    confirmDeleteCase() {\n      if (this.table.multipleSelection.length > 0) {\n        this.table.deleteConfirmDialogVisible = true\n      } else {\n        this.$message.warning('请选择至少一条case！')\n      }\n    },\n    async deleteCase() {\n      this.table.ids = []\n      this.table.multipleSelection.forEach(e => {\n        this.table.ids.push(e.id)\n      })\n      const res = await HttpCase.deleteCase(this.table.ids)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.table.deleteConfirmDialogVisible = false\n        this.searchCaseList()\n      } else {\n        this.$message.error(res.message)\n      }\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.searchCaseList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.searchCaseList()\n    },\n    // 选中的case\n    tableSelectionChange(value) {\n      this.table.multipleSelection = value\n    },\n    handleEdit(row) {\n      this.drawer_visible = true\n      this.operation_type = 2\n      this.case_info = { ...row }\n    },\n    handleCopy(row) {\n      this.drawer_visible = true\n      this.operation_type = 3\n      this.case_info = { ...row }\n    },\n    drawerClose() {\n      this.drawer_visible = false\n      this.searchCaseList()\n    }\n  },\n}\n",{"version":3,"sources":["http-case-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"http-case-list.vue","sourceRoot":"src/view/api-test","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div>\n    <!--筛选框-->\n    <el-card style=\"margin-bottom: 5px;margin-top: 5px\">\n      <el-input v-model=\"search.case_name\"\n                placeholder=\"接口名称\"\n                style=\"width: 150px\"\n                @change=\"searchCaseList\" />\n      <el-select v-model=\"search.category\"\n                 placeholder=\"系 统\"\n                 style=\"width: 150px;margin-left: 10px\"\n                 @change=\"searchCaseList\"\n                 clearable\n                 filterable>\n        <el-option v-for=\"item in category_list\"\n                   :key=\"item.category_name\"\n                   :label=\"item.category_name\"\n                   :value=\"item.category_name\"/>\n      </el-select>\n      <el-select v-model=\"search.creator_code\"\n                 placeholder=\"创建人\"\n                 style=\"width: 150px;margin-left: 10px\"\n                 @change=\"searchCaseList\"\n                 clearable\n                 filterable>\n        <el-option v-for=\"item in creator_list\"\n                   :key=\"item.creator_code\"\n                   :label=\"item.creator_name\"\n                   :value=\"item.creator_code\">\n          <span style=\"float: left\">{{ item.creator_name }}</span>\n          <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.creator_code }}</span>\n        </el-option>\n      </el-select>\n    </el-card>\n    <!--form表单-->\n    <el-card>\n      <!--操作栏-->\n      <el-row>\n        <el-button type=\"primary\" size=\"small\" @click=\"createCase\">新 增</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"confirmDeleteCase\">删 除</el-button>\n        <el-pagination background\n                       @size-change=\"handleSizeChange\"\n                       @current-change=\"handleCurrentChange\"\n                       :current-page=\"search.page\"\n                       :page-size=\"search.count\"\n                       :page-sizes=\"[10, 20, 50, 100]\"\n                       :total=\"total\" layout=\"total, sizes, prev, pager, next\" style=\"float: right\">\n        </el-pagination>\n        <el-dialog :visible.sync=\"table.deleteConfirmDialogVisible\" width=\"400px\">\n          <span>确认删除？</span>\n          <span slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click=\"table.deleteConfirmDialogVisible = false\">取 消</el-button>\n              <el-button type=\"primary\" @click=\"deleteCase\">确 定</el-button>\n            </span>\n        </el-dialog>\n      </el-row>\n      <br/>\n      <!--case数据表单-->\n      <el-row>\n        <el-table ref=\"multipleTable\" :data=\"table_data\" tooltip-effect=\"dark\" @selection-change=\"tableSelectionChange\" stripe>\n          <el-table-column type=\"selection\" width=\"35\" fixed/>\n          <el-table-column prop=\"case_name\" label=\"接口名称\" min-width=\"200\" fixed></el-table-column>\n          <el-table-column prop=\"api_method\" min-width=\"100\" label=\"请求方式\">\n            <template v-slot:default=\"scope\">\n              <div :class=\"scope.row.api_method\">{{scope.row.api_method}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"接口路径\" prop=\"api_url\" :show-overflow-tooltip=\"true\" min-width=\"440\"></el-table-column>\n          <el-table-column prop=\"category\" label=\"系 统\" min-width=\"100\" sortable/>\n          <el-table-column prop=\"creator_name\" label=\"创建人\" width=\"120\"/>\n          <el-table-column label=\"备注\">\n            <template v-slot:default=\"scope\">\n              <el-tooltip effect=\"dark\" placement=\"top-start\" v-if=\"scope.row.description\">\n                <div slot=\"content\">{{scope.row.description}}</div>\n                <l-icon name=\"read\" color=\"#409EFF\" height=\"1.6em\" width=\"1.6em\"></l-icon>\n              </el-tooltip>\n              <l-icon name=\"read\" color=\"#ccc\" height=\"1.6em\" width=\"1.6em\" v-else></l-icon>\n            </template>\n          </el-table-column>\n          <el-table-column\n            align=\"center\"\n            fixed=\"right\"\n            label=\"操作\">\n            <template v-slot:default=\"scope\">\n              <el-tooltip content=\"编辑\"\n                          placement=\"bottom\"\n                          :enterable=\"false\"\n                          effect=\"dark\">\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  circle size=\"mini\"\n                  @click=\"handleEdit(scope.row)\"></el-button>\n              </el-tooltip>\n              <el-tooltip content=\"复制\"\n                          placement=\"bottom\"\n                          :enterable=\"false\"\n                          effect=\"dark\">\n                <el-button\n                  type=\"warning\"\n                  icon=\"el-icon-document-copy\"\n                  circle size=\"mini\"\n                  @click=\"handleCopy(scope.row)\"></el-button>\n              </el-tooltip>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-row>\n    </el-card>\n    <!--case编辑弹出层-->\n    <el-drawer :visible.sync=\"drawer_visible\" :with-header=\"false\" size=\"70%\">\n      <http-case-edit v-if=\"drawer_visible\" :case-info=\"case_info\" :operation-type=\"operation_type\" @drawer-close=\"drawerClose\"></http-case-edit>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport HttpCase from '@/model/autotest/http-case'\nimport HttpCaseEdit from '@/component/autotest/http-case-edit'\nimport Category from '@/model/autotest/category'\n\nexport default {\n  components: {\n    HttpCaseEdit,\n  },\n  data() {\n    return {\n      operation_type: 0,\n      search: {\n        case_name: '',\n        category: '',\n        creator_code: '',\n        page: 1,\n        count: 10,\n      },\n      creator_list: [],\n      category_list: [],\n      edit_dialog_visible: false,\n      case_info: {},\n      total: null,\n      table: {\n        deleteConfirmDialogVisible: false,\n        multipleSelection: [],\n        ids: [],\n      },\n      table_data: [],\n      drawer_visible: false,\n    }\n  },\n  mounted() {\n    this.getCategoryList()\n    this.getCreatorList()\n    this.searchCaseList()\n  },\n  methods: {\n    // 获取系统列表\n    async getCategoryList() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    // 获取创建人列表\n    async getCreatorList() {\n      const res = await HttpCase.getCreatorList()\n      this.creator_list = res\n    },\n    // 搜索符合条件的所有testCase\n    async searchCaseList() {\n      const res = await HttpCase.searchCaseList(this.search)\n      this.table_data = res.items\n      this.total = res.total\n    },\n    // 创建case\n    createCase() {\n      this.case_info = { ...this.default_case_info }\n      this.drawer_visible = true\n      this.operation_type = 1\n    },\n    async saveCase() {\n      const res = await HttpCase.createCase(this.case_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.searchCaseList()\n      } else {\n        this.$message.error(res.message)\n      }\n    },\n    confirmDeleteCase() {\n      if (this.table.multipleSelection.length > 0) {\n        this.table.deleteConfirmDialogVisible = true\n      } else {\n        this.$message.warning('请选择至少一条case！')\n      }\n    },\n    async deleteCase() {\n      this.table.ids = []\n      this.table.multipleSelection.forEach(e => {\n        this.table.ids.push(e.id)\n      })\n      const res = await HttpCase.deleteCase(this.table.ids)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.table.deleteConfirmDialogVisible = false\n        this.searchCaseList()\n      } else {\n        this.$message.error(res.message)\n      }\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.searchCaseList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.searchCaseList()\n    },\n    // 选中的case\n    tableSelectionChange(value) {\n      this.table.multipleSelection = value\n    },\n    handleEdit(row) {\n      this.drawer_visible = true\n      this.operation_type = 2\n      this.case_info = { ...row }\n    },\n    handleCopy(row) {\n      this.drawer_visible = true\n      this.operation_type = 3\n      this.case_info = { ...row }\n    },\n    drawerClose() {\n      this.drawer_visible = false\n      this.searchCaseList()\n    }\n  },\n}\n</script>\n\n<style scoped>\n  .GET {\n    color: #00C292;\n    font-weight: 500;\n  }\n  .POST {\n    color: #409EFF;\n    font-weight: 500;\n  }\n  .PUT {\n    color: #E6A23C;\n    font-weight: 500;\n  }\n  .DELETE {\n    color: #E46A76;\n    font-weight: 500;\n  }\n</style>\n"]}]}