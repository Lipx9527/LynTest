{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/base/preview/preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/base/preview/preview.vue","mtime":1606834545511},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// photoswipe接口文档 http://photoswipe.com/documentation/api.html\n\nimport { Loading } from 'element-ui'\nimport 'photoswipe/dist/photoswipe.css'\nimport 'photoswipe/dist/default-skin/default-skin.css'\nimport PhotoSwipe from 'photoswipe/dist/photoswipe'\nimport PhotoSwipeUIDefault from 'photoswipe/dist/photoswipe-ui-default'\n/** 生成随机字符串 */\nfunction createId() {\n  return Math.random()\n    .toString(36)\n    .substring(2)\n}\nexport default {\n  name: 'PreviewImage',\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    imageIndex: {\n      type: Number,\n      default: 0,\n    },\n    options: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      radom: createId(),\n      slides: this.data || [],\n      gallery: null,\n    }\n  },\n  watch: {\n    data(newVal) {\n      if (Array.isArray(newVal)) {\n        this.slides = Object.assign([], newVal)\n        if (newVal.length > 0) {\n          this.$nextTick(() => {\n            this.initPhotoSwipe()\n          })\n        }\n      }\n    },\n  },\n  mounted() {\n    if (this.slides.length > 0) {\n      this.$nextTick(() => {\n        this.initPhotoSwipe()\n      })\n    }\n  },\n  methods: {\n    /* eslint-disable */\n    async initPhotoSwipe() {\n      const that = this\n      const defaultOptions = {\n        fullscreenEl: true,\n        shareEl: false,\n        arrowEl: true,\n        preloaderEl: true,\n        history: false,\n        loop: false,\n        bgOpacity: 0.85,\n        showHideOpacity: true,\n        errorMsg: '<div class=\"pswp__error-msg\">图片加载失败</div>',\n      }\n      let { options, imageIndex } = this\n      options = options || {}\n      options = Object.assign(defaultOptions, options, {\n        index: imageIndex,\n      })\n      const loadingInstance = Loading.service()\n      const galleryElement = this.$refs.myGallery\n      this.radom = createId()\n      let pswpElement = this.$refs.pswpWrap\n      const items = await this.transThumbnailElements()\n      let photoSwipeOptions = {\n        galleryUID: this.radom,\n        getThumbBoundsFn: function(index) {\n          let thumbnail = items[index].el\n          let pageYScroll = window.pageYOffset || document.documentElement.scrollTop\n          let rect = thumbnail.getBoundingClientRect()\n          return {\n            x: rect.left,\n            y: rect.top + pageYScroll,\n            w: rect.width,\n          }\n        },\n        ...options,\n      }\n      this.gallery = new PhotoSwipe(pswpElement, PhotoSwipeUIDefault, items, photoSwipeOptions)\n      this.gallery.init()\n      loadingInstance.close()\n      // Gallery starts closing\n      this.gallery.listen('close', () => {\n        if (this.gallery) {\n          this.gallery.close()\n          this.gallery = null\n          this.slides = []\n        }\n        that.$emit('close')\n      })\n    },\n    async getWH(elem) {\n      return new Promise((resolve, reject) => {\n        if (typeof elem.naturalWidth === 'undefined') {\n          // IE 6/7/8\n          let img = new window.Image()\n          img.src = elem.getAttribute('src')\n          img.onload = function() {\n            resolve({\n              w: this.width,\n              h: this.height,\n            })\n          }\n          img.onerror = function() {\n            reject({\n              w: 0,\n              h: 0,\n            })\n          }\n        } else {\n          if (elem.naturalWidth > 0) {\n            resolve({\n              w: elem.naturalWidth,\n              h: elem.naturalHeight,\n            })\n          } else {\n            elem.onload = function() {\n              resolve({\n                w: this.naturalWidth,\n                h: this.naturalHeight,\n              })\n            }\n          }\n        }\n      })\n    },\n    async transThumbnailElements() {\n      const galleryElement = this.$refs.myGallery\n      const items = []\n      const previewElements = galleryElement.querySelectorAll('img[preview]')\n\n      for (let i = 0, l = previewElements.length; i < l; i++) {\n        let elem = previewElements[i]\n        let rw = 0\n        let rh = 0\n        const wh = await this.getWH(elem)\n        rw = wh.w\n        rh = wh.h\n\n        items.push({\n          el: elem,\n          src: elem.getAttribute('src'),\n          w: rw,\n          h: rh,\n        })\n      }\n      return items\n    },\n    destroy() {\n      // 销毁\n      if (this.gallery) {\n        this.gallery.close()\n        this.gallery = null\n      }\n    },\n  },\n  beforeDestroy() {\n    this.destroy()\n  },\n}\n",null]}