{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/track/case/case-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/track/case/case-list.vue","mtime":1607682215000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LynSearch from '@/component/lyn/lyn-search'\nimport SelectMenu from '@/component/common/select-menu'\nimport NodeTree from '@/component/common/node-tree'\nimport Project from '@/model/track/project'\nimport Node from '@/model/track/node'\nimport TestCase from '@/model/track/case'\n\nexport default {\n  name: 'case-list',\n  components: {\n    SelectMenu,\n    NodeTree,\n    LynSearch\n  },\n  data() {\n    return {\n      search: {\n        case_name: '',\n        count: 10,\n        page: 1,\n      },\n      total: 0,\n      result: {},\n      projects: [],\n      currentProject: null,\n      treeNodes: [],\n      selectNodeIds: [],\n      selectParentNodes: [],\n      selectNode: {},\n      caseList: [],\n      operationType: null,\n      editDialogVisible: false,\n      caseInfo: {},\n      defaultCaseInfo: {\n        name: '',\n        type: '',\n        priority: '',\n        steps: [{ num: 1, result: '', steps: '', description: '' }]\n      },\n      typeList: ['功能测试', '性能测试', '接口测试', '冒烟测试', '回归测试', '其它'],\n      priorityList: [{ text: 'P1', value: 'P1' },\n        { text: 'P2', value: 'P2' },\n        { text: 'P3', value: 'P3' },\n        { text: 'P4', value: 'P4' }],\n      reviewStatusList: [{ text: '未评审', value: 'Prepare' },\n        { text: '通过', value: 'Pass' },\n        { text: '未通过', value: 'UnPass' }],\n    }\n  },\n  mounted() {\n    this.pageInit()\n  },\n  methods: {\n    async pageInit() {\n      await this.getProjects()\n      await this.getNodeTree()\n      await this.refreshTable()\n    },\n    async getProjects() {\n      const res = await Project.getNewProject(20)\n      this.projects = res.items\n      this.setCurrentProject(res.items[0])\n    },\n    async getNodeTree() {\n      this.treeNodes = await Node.getNodeByProjectId(this.currentProject.id)\n    },\n    changeProject(project) {\n      this.setCurrentProject(project)\n      this.refreshTable()\n    },\n    nodeChange(nodeIds, pNodes) {\n      this.selectNodeIds = nodeIds\n      this.selectParentNodes = pNodes\n      this.refreshTable()\n    },\n    bachHome() {\n      this.selectNodeIds = []\n      this.selectParentNodes = []\n      this.selectNode = {}\n      this.refreshTable()\n    },\n    handleCreate() {\n      this.editDialogVisible = true\n      this.caseInfo = { ...this.defaultCaseInfo }\n      this.operationType = 1\n    },\n    handleEdit(row) {\n      this.editDialogVisible = true\n      this.caseInfo = { ...row }\n      this.operationType = 2\n    },\n    handleCopy(row) {\n      this.editDialogVisible = true\n      this.caseInfo = { ...row }\n      this.operationType = 1\n    },\n    handleDelete(id) {\n      this.$confirm('确定要删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      })\n        .then(\n          async () => {\n            const res = await TestCase.deleteCase(id)\n            if (res.code < window.MAX_SUCCESS_CODE) {\n              this.$message.success(res.message)\n              this.refreshTable()\n            } else {\n              this.$message.error('删除功能异常')\n            }\n          }\n        )\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.refreshTable()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.refreshTable()\n    },\n    priorityFilter(value, row) {\n      return row.priority === value\n    },\n    getPriorityStyle(val) {\n      if (val === 'P1' || val === 'P2') {\n        return 'danger'\n      }\n      if (val === 'P3') {\n        return 'warning'\n      }\n      if (val === 'P4') {\n        return 'success'\n      }\n    },\n    reviewStatusFilter(value, row) {\n      return row.review_status === value\n    },\n    async refreshTable() {\n      this.search.node_ids = this.selectNodeIds\n      this.search.project_id = this.currentProject.id\n      const res = await TestCase.getCaseList(this.search)\n      res.items.forEach(e => {\n        e.steps = JSON.parse(e.steps)\n      })\n      this.caseList = res.items\n      this.total = res.total\n    },\n    setCurrentProject(project) {\n      if (project) {\n        this.currentProject = project\n      }\n      this.refresh()\n    },\n    refresh() {\n      this.selectNodeIds = []\n      this.selectParentNodes = []\n      this.selectNode = {}\n      this.getNodeTree()\n    },\n    handleAddStep(index, data) {\n      const step = {}\n      step.num = data.num + 1\n      step.desc = ''\n      step.result = ''\n      this.caseInfo.steps.forEach(s => {\n        if (s.num > data.num) {\n          s.num++\n        }\n      })\n      this.caseInfo.steps.splice(index + 1, 0, step)\n    },\n    handleCopyStep(index, data) {\n      const step = {}\n      step.num = data.num + 1\n      step.desc = data.desc\n      step.result = data.result\n      this.caseInfo.steps.forEach(s => {\n        if (s.num > data.num) {\n          s.num++\n        }\n      })\n      this.caseInfo.steps.splice(index + 1, 0, step)\n    },\n    handleDeleteStep(index, data) {\n      this.caseInfo.steps.splice(index, 1)\n      this.caseInfo.steps.forEach(step => {\n        if (step.num > data.num) {\n          step.num--\n        }\n      })\n    },\n    async saveCase() {\n      const param = { ...this.caseInfo }\n      const nodeId = this.selectNodeIds[0]\n      param.steps = JSON.stringify(this.caseInfo.steps)\n      if (!param.node_id) {\n        param.node_id = nodeId\n      }\n      param.project_id = this.currentProject.id\n      const res = this.operationType === 1 ? await TestCase.createCase(param) : await TestCase.updateCase(param)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(res.message)\n        this.editDialogVisible = false\n        this.refreshTable()\n      } else {\n        this.$message.error('服务端异常')\n      }\n    }\n  }\n}\n",null]}