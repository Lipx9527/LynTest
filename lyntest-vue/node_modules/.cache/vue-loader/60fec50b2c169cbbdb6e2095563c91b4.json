{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/autotest/response-status.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/autotest/response-status.vue","mtime":1607754565000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'response-status',\n  props: {\n    statusCode: {\n      type: Number\n    },\n    responseTime: {\n      type: Number\n    },\n    message: {\n      type: String\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    getStatusCss(val) {\n      if (!val) {\n        return\n      }\n      if (String(val).startsWith('2')) {\n        return 'success'\n      }\n      if (String(val).startsWith('3')) {\n        return 'warning'\n      }\n      return 'error'\n    },\n    getTimeCss(val) {\n      if (!val) {\n        return\n      }\n      if (val <= 2000) {\n        return 'success'\n      }\n      if (val > 2000 && val <= 5000) {\n        return 'warning'\n      }\n      return 'error'\n    }\n  }\n}\n",{"version":3,"sources":["response-status.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"response-status.vue","sourceRoot":"src/component/autotest","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">Status:</div>\n    <div :class=\"getStatusCss(statusCode)\">{{statusCode}} {{message}}</div>\n    <div class=\"title\">Time:</div>\n    <div :class=\"getTimeCss(responseTime)\">{{responseTime}} ms</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'response-status',\n  props: {\n    statusCode: {\n      type: Number\n    },\n    responseTime: {\n      type: Number\n    },\n    message: {\n      type: String\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    getStatusCss(val) {\n      if (!val) {\n        return\n      }\n      if (String(val).startsWith('2')) {\n        return 'success'\n      }\n      if (String(val).startsWith('3')) {\n        return 'warning'\n      }\n      return 'error'\n    },\n    getTimeCss(val) {\n      if (!val) {\n        return\n      }\n      if (val <= 2000) {\n        return 'success'\n      }\n      if (val > 2000 && val <= 5000) {\n        return 'warning'\n      }\n      return 'error'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  display: flex;\n  align-items: center;\n\n  .title {\n    font-size: 12px;\n    color: #909399;\n    margin-right: 10px;\n  }\n\n  .success {\n    display: flex;\n    font-size: 12px;\n    margin-right: 10px;\n    color: #0ec23b;\n  }\n\n  .warning {\n    display: flex;\n    font-size: 12px;\n    margin-right: 10px;\n    color: #E6A23C;\n  }\n\n  .error {\n    display: flex;\n    font-size: 12px;\n    margin-right: 10px;\n    color: #c20215;\n  }\n}\n</style>\n"]}]}