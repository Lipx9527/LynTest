{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/statistical/bug.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/statistical/bug.vue","mtime":1606834545553},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Bug from '@/model/statistical/bug'\nimport Manager from '@/model/statistical/manager'\n\nexport default {\n  data() {\n    return {\n      date1: [],\n      statistical: {\n        start_date: '',\n        end_date: '',\n        statistic_type: '1',\n        product_code: '',\n      },\n      total: 0,\n      date2: [],\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1,\n      },\n      pro_is_show: false,\n      chartData: {\n        columns: ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient'],\n        rows: []\n      },\n      chartSettings: {\n        labelMap: {\n          name: '产品线',\n          bug_count: 'bug个数',\n          prd_project_coefficient: '项目bug系数',\n          prd_daily_coefficient: '日常bug系数'\n        },\n        stack: { name: ['prd_project_coefficient', 'prd_daily_coefficient'] },\n      },\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          barWidth: 20,\n          label: {\n            position: 'top'\n          }\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter(value) {\n              return value.split('').join('\\n')\n            }\n          },\n        }\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            //  dateCountForMonth是用以获取上月天数的变量\n            const dateCountForMonth = new Date()\n            dateCountForMonth.setMonth(dateCountForMonth.getMonth())\n            dateCountForMonth.setDate(0)\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * dateCountForMonth.getDate())\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      bug_level_list: [{ value: 1 }, { value: 2 }, { value: 3 }, { value: 4 }],\n      tester_list: [],\n      dev_list: [],\n      product_line_list: [],\n      dialog_visible: false,\n      active_name: 'add',\n      dialog: {\n        create_date: '',\n        bug_id: 'DEFECT-',\n        bug_level: 1,\n        tester_code: '',\n        dev_code: '',\n        bug_type: '',\n        bug_loc: '',\n        bug_scenario: '',\n      },\n      limit_num: 1, // 上传excell时，同时允许上传的最大数\n      file_list: [], // excel文件列表\n      edit_dialog_visible: false,\n      bug_info: {},\n      bug_coefficient: 0,\n      tableData: [],\n      bug_locList: ['前端', '后端'],\n      bug_scenarioList: ['正向业务场景', '正向边界值', 'UI显示', '异常边界值', '异常非空校验',\n        '异常反向业务场景', '历史遗留', '需求编写不全', '新功能影响老功能'],\n    }\n  },\n  mounted() {\n    this.doStatistical()\n    this.getBugList()\n    this.getDevList()\n    this.getTesterList()\n    this.getProductLineList()\n  },\n  methods: {\n    chooseStatisticType(type) {\n      this.statistical.statistic_type = type\n      if (type === '1') {\n        this.pro_is_show = false\n        this.chartData.columns = ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            prd_project_coefficient: '项目bug系数',\n            prd_daily_coefficient: '日常bug系数'\n          },\n          stack: { name: ['prd_project_coefficient', 'prd_daily_coefficient'] },\n        }\n        this.doStatistical()\n      } else if (type === '2') {\n        this.pro_is_show = true\n        this.chartData.rows = []\n        this.chartData.columns = ['name', 'bug_count', 'bug_coefficient']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            bug_coefficient: 'bug系数',\n          },\n        }\n      }\n    },\n    async getTesterList() {\n      this.tester_list = await Manager.getTesterList()\n    },\n    async getDevList() {\n      this.dev_list = await Manager.getDevList()\n    },\n    // 获取产品线列表\n    async getProductLineList() {\n      this.product_line_list = await Manager.getProductList()\n    },\n    async chooseDate1(date) {\n      if (date === null) {\n        this.statistical.start_date = ''\n        this.statistical.end_date = ''\n      } else {\n        [this.statistical.start_date, this.statistical.end_date] = date\n      }\n      await this.doStatistical()\n    },\n    async chooseDate2(date) {\n      this.search.page = 1\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      await this.getBugList()\n    },\n    async doStatistical() {\n      const res = await Bug.bugStatistical(this.statistical)\n      if (res.success) {\n        this.chartData.rows = res.result\n      } else {\n        this.$message.error(res.msg)\n      }\n    },\n    // 查询bug列表\n    async getBugList() {\n      const res = await Bug.getBugList(this.search)\n      this.bug_coefficient = await Bug.getBugCoefficient(this.search)\n      this.tableData = res.items\n      this.total = res.total\n    },\n    // 手动新增bug\n    async createNewBug() {\n      const res = await Bug.createBug(this.dialog)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.dialog_visible = false\n        this.getBugList()\n      } else {\n        this.$message.error(`${res.message}`)\n      }\n    },\n    // 编辑bug\n    handleEdit(row) {\n      this.edit_dialog_visible = true\n      this.bug_info = { ...row }\n    },\n    async modifyBug() {\n      const res = await Bug.updateBug(this.bug_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.edit_dialog_visible = false\n        this.getBugList()\n      } else {\n        this.$message.error('修改bug功能异常')\n      }\n    },\n    async deleteBug(id) {\n      const res = await Bug.deleteBug(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.getBugList()\n      } else {\n        this.$message.error('删除bug功能异常')\n      }\n    },\n    // 文件超出个数限制时的钩子\n    exceedFile(files, fileList) {\n      this.$message.warning(`只能选择 ${this.limit_num} 个文件，当前共选择了 ${files.length + fileList.length} 个`)\n    },\n    // 文件状态改变时的钩子\n    fileChange(file) {\n      this.file_list.push(file.raw)\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile(file) {\n      const extension = file.name.substring(file.name.lastIndexOf('.') + 1)\n      const size = file.size / 1024 / 1024\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件')\n      }\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M')\n      }\n    },\n    deleteFile(file) {\n      this.file_list.pop(file)\n    },\n    uploadFile() {\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件')\n      } else {\n        const form = new FormData()\n        form.append('file', this.file_list[0])\n        this.$axios({\n          method: 'post',\n          url: '/statistical/bug/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(\n          res => {\n            if (res.success === true) {\n              this.file_list = []\n              this.$message.success(res.result)\n              this.dialog_visible = false\n              this.getBugList()\n            } else if (res.success === false) {\n              this.$message.error(res.msg)\n            }\n          }\n        )\n      }\n    },\n    exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/bug/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(\n        res => {\n          const link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = URL.createObjectURL(new Blob([res]))\n          link.setAttribute('download', 'bug信息.xlsx')\n          document.body.appendChild(link)\n          link.click()\n          URL.revokeObjectURL(link.href)\n          document.body.removeChild(link)\n        }\n      )\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.getBugList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.getBugList()\n    },\n\n  }\n}\n",{"version":3,"sources":["bug.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0OA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"bug.vue","sourceRoot":"src/view/statistical","sourcesContent":["<template>\n  <el-tabs type=\"border-card\">\n    <el-tab-pane label=\"bug统计\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"7\">\n          <el-date-picker v-model=\"date1\" type=\"daterange\" align=\"right\" unlink-panels\n                          range-separator=\"至\"\n                          start-placeholder=\"开始日期\"\n                          end-placeholder=\"结束日期\"\n                          :picker-options=\"pickerOptions\"\n                          value-format=\"yyyy-MM-dd\"\n                          @change=\"chooseDate1\"\n                          style=\"width: 100%\">\n          </el-date-picker>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-radio-group v-model=\"statistical.statistic_type\" @change=\"chooseStatisticType\" style=\"width: 100%\">\n            <el-radio-button label=\"1\">产品线</el-radio-button>\n            <el-radio-button label=\"2\">开发</el-radio-button>\n          </el-radio-group>\n        </el-col>\n        <el-col :span=\"3\">\n          <el-select v-show=\"pro_is_show\" v-model=\"statistical.product_code\" placeholder=\"产品线\" style=\"width: 180px;transform: translateY(2px);\" @change=\"doStatistical\">\n            <el-option v-for=\"item in product_line_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"/>\n          </el-select>\n        </el-col>\n      </el-row>\n      <br/>\n      <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\" width=\"800px\" height=\"500px\"></ve-histogram>\n    </el-tab-pane>\n    <el-tab-pane label=\"数据管理\">\n      <el-card>\n        <el-row>\n          <el-date-picker v-model=\"date2\" type=\"daterange\" align=\"right\" unlink-panels\n                          range-separator=\"至\"\n                          start-placeholder=\"开始日期\"\n                          end-placeholder=\"结束日期\"\n                          :picker-options=\"pickerOptions\"\n                          value-format=\"yyyy-MM-dd\"\n                          @change=\"chooseDate2\">\n          </el-date-picker>\n          <el-select  v-model=\"search.tester_code\" clearable filterable placeholder=\"提出人\" @change=\"getBugList\" style=\"width: 120px\">\n            <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n              <span style=\"float: left\">{{ item.tester_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_code }}</span>\n            </el-option>\n          </el-select>\n          <el-select v-model=\"search.dev_code\" clearable filterable placeholder=\"开发\" @change=\"getBugList\" style=\"width: 120px\">\n            <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n              <span style=\"float: left\">{{ item.dev_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{item.dev_code}}</span>\n            </el-option>\n          </el-select>\n          <el-select v-model=\"search.product_code\" clearable placeholder=\"产品线\" @change=\"getBugList\" style=\"width: 150px\">\n            <el-option v-for=\"item in product_line_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"></el-option>\n          </el-select>\n        </el-row>\n        <br/>\n        <el-row>\n          <span style=\"font-size: 14px;color: #666666\">当前查询结果缺陷系数为: {{bug_coefficient}}，共计 {{ total }} 条bug</span>\n        </el-row>\n      </el-card>\n      <br/>\n      <el-card>\n        <el-row>\n          <el-button type=\"primary\" @click=\"dialog_visible = true\" size=\"small\">新 增</el-button>\n          <el-button type=\"primary\" @click=\"exportExcel\" size=\"small\">导出Excel</el-button>\n          <el-pagination background\n                         @size-change=\"handleSizeChange\"\n                         @current-change=\"handleCurrentChange\"\n                         :current-page=\"search.page\"\n                         :page-size=\"search.count\"\n                         :page-sizes=\"[10, 20, 50, 100]\"\n                         :total=\"total\"\n                         layout=\"sizes, prev, pager, next\" style=\"float: right\"/>\n        </el-row>\n        <el-dialog :visible.sync=\"dialog_visible\" width=\"500px\">\n          <el-tabs v-model=\"active_name\" type=\"border-card\">\n            <el-tab-pane label=\"手动添加\" name=\"add\">\n              <el-form :model=\"dialog\" size=\"small\" label-width=\"100px\">\n                <el-form-item label=\"选择日期\">\n                  <el-date-picker v-model=\"dialog.create_date\" type=\"date\" placeholder=\"选择日期\" style=\"width: 200px\" value-format=\"yyyy-MM-dd\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"缺陷编号\">\n                  <el-input v-model=\"dialog.bug_id\" style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"缺陷等级\">\n                  <el-radio-group v-model=\"dialog.bug_level\">\n                    <el-radio-button v-for=\"item in bug_level_list\" :key=\"item.value\" :label=\"item.value\">{{item.value}}</el-radio-button>\n                  </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"提出人\">\n                  <el-select v-model=\"dialog.tester_code\" clearable filterable placeholder=\"提出人\" style=\"width: 200px\">\n                    <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n                      <span style=\"float: left\">{{ item.tester_name }}</span>\n                      <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_code }}</span>\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"开发\">\n                  <el-select v-model=\"dialog.dev_code\" clearable filterable placeholder=\"开发\" style=\"width: 200px\">\n                    <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n                      <span style=\"float: left\">{{ item.dev_name }}</span>\n                      <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.dev_code }}</span>\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"bug分类\">\n                  <el-select v-model=\"dialog.bug_type\" style=\"width: 200px\">\n                    <el-option v-for=\"item in ['日常','项目']\" :key=\"item\" :label=\"item\" :value=\"item\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"bug端\">\n                  <el-select v-model=\"dialog.bug_loc\" style=\"width: 200px\">\n                    <el-option v-for=\"item in this.bug_locList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"bug场景\">\n                  <el-select v-model=\"dialog.bug_scenario\" style=\"width: 200px\">\n                    <el-option v-for=\"item in this.bug_scenarioList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <br/>\n                <el-row>\n                  <el-col :offset=\"12\">\n                    <el-button type=\"primary\" @click=\"createNewBug\">保 存</el-button>\n                    <el-button @click=\"dialog_visible = false\">取 消</el-button>\n                  </el-col>\n                </el-row>\n              </el-form>\n            </el-tab-pane>\n            <el-tab-pane label=\"导入excel\" name=\"excel\">\n              <el-upload drag\n                         :limit=limit_num\n                         :auto-upload=\"false\"\n                         accept=\".xlsx\"\n                         action=\"\"\n                         :before-upload=\"beforeUploadFile\"\n                         :on-remove=\"deleteFile\"\n                         :on-change=\"fileChange\"\n                         :on-exceed=\"exceedFile\"\n                         :file-list=\"file_list\">\n                <i class=\"el-icon-upload\"></i>\n                <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传xlsx文件，且不超过10M</div>\n              </el-upload>\n              <br/>\n              <el-button size=\"small\" type=\"primary\" @click=\"uploadFile\">立即上传</el-button>\n              <el-button size=\"small\" @click=\"dialog_visible = false, file_list=[]\">取消</el-button>\n            </el-tab-pane>\n          </el-tabs>\n        </el-dialog>\n        <el-table :data=\"tableData\">\n          <el-table-column prop=\"create_date\" width=\"120\" label=\"时间\" sortable></el-table-column>\n          <el-table-column prop=\"bug_id\" label=\"缺陷编号\" width=\"150\" sortable></el-table-column>\n          <el-table-column prop=\"bug_level\" label=\"缺陷等级\" width=\"100\" sortable></el-table-column>\n          <el-table-column prop=\"tester_name\" label=\"提出人\" width=\"120\" sortable></el-table-column>\n          <el-table-column prop=\"dev_name\" label=\"开发负责人\" width=\"120\" sortable></el-table-column>\n          <el-table-column prop=\"product_line\" label=\"产品线\"  width=\"150\" sortable></el-table-column>\n          <el-table-column prop=\"bug_type\" label=\"类型\" sortable></el-table-column>\n          <el-table-column prop=\"bug_loc\" label=\"BUG端\"  width=\"100\" sortable></el-table-column>\n          <el-table-column prop=\"bug_scenario\" label=\"BUG场景\" width=\"150\" sortable></el-table-column>\n          <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n              <el-button size=\"mini\" v-permission=\"{ permission: 'Bug删除', type: 'disabled'}\" type=\"danger\" @click=\"deleteBug(scope.row.id)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-dialog :visible.sync=\"edit_dialog_visible\" width=\"500px\">\n          <el-form :model=\"bug_info\" label-width=\"100px\">\n            <el-form-item label=\"选择日期\">\n              <el-date-picker v-model=\"bug_info.create_date\" type=\"date\" placeholder=\"选择日期\" style=\"width: 200px\" value-format=\"yyyy-MM-dd\"></el-date-picker>\n            </el-form-item>\n            <el-form-item label=\"缺陷编号\">\n              <el-input v-model=\"bug_info.bug_id\" style=\"width: 200px\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"缺陷等级\">\n              <el-radio-group v-model=\"bug_info.bug_level\">\n                <el-radio-button v-for=\"item in bug_level_list\" :key=\"item.value\" :label=\"item.value\">{{item.value}}</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"提出人\">\n              <el-select v-model=\"bug_info.tester_code\" clearable filterable placeholder=\"提出人\" style=\"width: 200px\">\n                <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n                  <span style=\"float: left\">{{ item.tester_code }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_name }}</span>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"开发\">\n              <el-select v-model=\"bug_info.dev_code\" clearable filterable placeholder=\"开发\" style=\"width: 200px\">\n                <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n                  <span style=\"float: left\">{{ item.dev_name }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.dev_code }}</span>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"bug分类\">\n              <el-select v-model=\"bug_info.bug_type\" style=\"width: 200px\">\n                <el-option v-for=\"item in ['日常','项目']\" :key=\"item\" :label=\"item\" :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"bug端\">\n              <el-select v-model=\"bug_info.bug_loc\" style=\"width: 200px\">\n                <el-option v-for=\"item in this.bug_locList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"bug场景\">\n              <el-select v-model=\"bug_info.bug_scenario\" style=\"width: 200px\">\n                <el-option v-for=\"item in this.bug_scenarioList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <br/>\n            <el-row>\n              <el-col :offset=\"12\">\n                <el-button type=\"primary\" @click=\"modifyBug\">修改</el-button>\n                <el-button @click=\"edit_dialog_visible = false\">取 消</el-button>\n              </el-col>\n            </el-row>\n          </el-form>\n        </el-dialog>\n      </el-card>\n    </el-tab-pane>\n  </el-tabs>\n</template>\n\n<script>\nimport Bug from '@/model/statistical/bug'\nimport Manager from '@/model/statistical/manager'\n\nexport default {\n  data() {\n    return {\n      date1: [],\n      statistical: {\n        start_date: '',\n        end_date: '',\n        statistic_type: '1',\n        product_code: '',\n      },\n      total: 0,\n      date2: [],\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1,\n      },\n      pro_is_show: false,\n      chartData: {\n        columns: ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient'],\n        rows: []\n      },\n      chartSettings: {\n        labelMap: {\n          name: '产品线',\n          bug_count: 'bug个数',\n          prd_project_coefficient: '项目bug系数',\n          prd_daily_coefficient: '日常bug系数'\n        },\n        stack: { name: ['prd_project_coefficient', 'prd_daily_coefficient'] },\n      },\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          barWidth: 20,\n          label: {\n            position: 'top'\n          }\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter(value) {\n              return value.split('').join('\\n')\n            }\n          },\n        }\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            //  dateCountForMonth是用以获取上月天数的变量\n            const dateCountForMonth = new Date()\n            dateCountForMonth.setMonth(dateCountForMonth.getMonth())\n            dateCountForMonth.setDate(0)\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * dateCountForMonth.getDate())\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      bug_level_list: [{ value: 1 }, { value: 2 }, { value: 3 }, { value: 4 }],\n      tester_list: [],\n      dev_list: [],\n      product_line_list: [],\n      dialog_visible: false,\n      active_name: 'add',\n      dialog: {\n        create_date: '',\n        bug_id: 'DEFECT-',\n        bug_level: 1,\n        tester_code: '',\n        dev_code: '',\n        bug_type: '',\n        bug_loc: '',\n        bug_scenario: '',\n      },\n      limit_num: 1, // 上传excell时，同时允许上传的最大数\n      file_list: [], // excel文件列表\n      edit_dialog_visible: false,\n      bug_info: {},\n      bug_coefficient: 0,\n      tableData: [],\n      bug_locList: ['前端', '后端'],\n      bug_scenarioList: ['正向业务场景', '正向边界值', 'UI显示', '异常边界值', '异常非空校验',\n        '异常反向业务场景', '历史遗留', '需求编写不全', '新功能影响老功能'],\n    }\n  },\n  mounted() {\n    this.doStatistical()\n    this.getBugList()\n    this.getDevList()\n    this.getTesterList()\n    this.getProductLineList()\n  },\n  methods: {\n    chooseStatisticType(type) {\n      this.statistical.statistic_type = type\n      if (type === '1') {\n        this.pro_is_show = false\n        this.chartData.columns = ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            prd_project_coefficient: '项目bug系数',\n            prd_daily_coefficient: '日常bug系数'\n          },\n          stack: { name: ['prd_project_coefficient', 'prd_daily_coefficient'] },\n        }\n        this.doStatistical()\n      } else if (type === '2') {\n        this.pro_is_show = true\n        this.chartData.rows = []\n        this.chartData.columns = ['name', 'bug_count', 'bug_coefficient']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            bug_coefficient: 'bug系数',\n          },\n        }\n      }\n    },\n    async getTesterList() {\n      this.tester_list = await Manager.getTesterList()\n    },\n    async getDevList() {\n      this.dev_list = await Manager.getDevList()\n    },\n    // 获取产品线列表\n    async getProductLineList() {\n      this.product_line_list = await Manager.getProductList()\n    },\n    async chooseDate1(date) {\n      if (date === null) {\n        this.statistical.start_date = ''\n        this.statistical.end_date = ''\n      } else {\n        [this.statistical.start_date, this.statistical.end_date] = date\n      }\n      await this.doStatistical()\n    },\n    async chooseDate2(date) {\n      this.search.page = 1\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      await this.getBugList()\n    },\n    async doStatistical() {\n      const res = await Bug.bugStatistical(this.statistical)\n      if (res.success) {\n        this.chartData.rows = res.result\n      } else {\n        this.$message.error(res.msg)\n      }\n    },\n    // 查询bug列表\n    async getBugList() {\n      const res = await Bug.getBugList(this.search)\n      this.bug_coefficient = await Bug.getBugCoefficient(this.search)\n      this.tableData = res.items\n      this.total = res.total\n    },\n    // 手动新增bug\n    async createNewBug() {\n      const res = await Bug.createBug(this.dialog)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.dialog_visible = false\n        this.getBugList()\n      } else {\n        this.$message.error(`${res.message}`)\n      }\n    },\n    // 编辑bug\n    handleEdit(row) {\n      this.edit_dialog_visible = true\n      this.bug_info = { ...row }\n    },\n    async modifyBug() {\n      const res = await Bug.updateBug(this.bug_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.edit_dialog_visible = false\n        this.getBugList()\n      } else {\n        this.$message.error('修改bug功能异常')\n      }\n    },\n    async deleteBug(id) {\n      const res = await Bug.deleteBug(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.getBugList()\n      } else {\n        this.$message.error('删除bug功能异常')\n      }\n    },\n    // 文件超出个数限制时的钩子\n    exceedFile(files, fileList) {\n      this.$message.warning(`只能选择 ${this.limit_num} 个文件，当前共选择了 ${files.length + fileList.length} 个`)\n    },\n    // 文件状态改变时的钩子\n    fileChange(file) {\n      this.file_list.push(file.raw)\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile(file) {\n      const extension = file.name.substring(file.name.lastIndexOf('.') + 1)\n      const size = file.size / 1024 / 1024\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件')\n      }\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M')\n      }\n    },\n    deleteFile(file) {\n      this.file_list.pop(file)\n    },\n    uploadFile() {\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件')\n      } else {\n        const form = new FormData()\n        form.append('file', this.file_list[0])\n        this.$axios({\n          method: 'post',\n          url: '/statistical/bug/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(\n          res => {\n            if (res.success === true) {\n              this.file_list = []\n              this.$message.success(res.result)\n              this.dialog_visible = false\n              this.getBugList()\n            } else if (res.success === false) {\n              this.$message.error(res.msg)\n            }\n          }\n        )\n      }\n    },\n    exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/bug/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(\n        res => {\n          const link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = URL.createObjectURL(new Blob([res]))\n          link.setAttribute('download', 'bug信息.xlsx')\n          document.body.appendChild(link)\n          link.click()\n          URL.revokeObjectURL(link.href)\n          document.body.removeChild(link)\n        }\n      )\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.getBugList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.getBugList()\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}