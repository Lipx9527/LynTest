{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/report-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/report-detail.vue","mtime":1608715591245},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CollectionReport from '@/model/autotest/collection-report'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport VariableDetail from '@/component/autotest/variable-detail'\nimport ReadOnlyContent from '@/component/autotest/read-only-content'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  components: {\n    AssertionsDetail,\n    ReadOnlyContent,\n    ResponseStatus,\n    VariableDetail,\n  },\n  data() {\n    return {\n      report_id: null,\n      collection_id: null,\n      report_loading: true,\n      total_count: 0,\n      percentage: 0,\n      sort_switch: false,\n      base_result_list: [],\n      result_list: [],\n      case_detail: {},\n      case_choose: false,\n      chartSettings: {\n        radius: [65, 45],\n        hoverAnimation: false,\n        label: { show: false }\n      },\n      chartExtend: {\n        graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '45%',\n          style: {\n            text: 0,\n            textAlign: 'center',\n            fill: '#000',\n            fontSize: 28,\n          }\n        }, {\n          type: 'text',\n          left: 'center',\n          top: '55%',\n          style: {\n            text: '请求',\n            textAlign: 'center',\n            fill: '#999999',\n            fontSize: 16,\n          }\n        }],\n        color: ['#00C292', '#E46A76']\n      },\n      chartData: {\n        columns: ['type', 'count'],\n        rows: [\n          { type: '成功', count: 0 },\n          { type: '失败', count: 0 }\n        ]\n      },\n      result_css: {\n        status_code_type: 'success',\n        time_type: 'success',\n      },\n    }\n  },\n  watch: {\n    total_count(val) {\n      this.chartExtend.graphic[0].style.text = val\n    },\n    $route() {\n      this.pageInit()\n    }\n  },\n  mounted() {\n    this.pageInit()\n  },\n  destroyed() {\n    if (this.websocket) {\n      this.websocket.close()\n    }\n  },\n  methods: {\n    async pageInit() {\n      this.report_id = this.$route.params.id\n      const [collection_id] = this.report_id.split('_')\n      this.collection_id = collection_id\n      if (!await this.getReportDetail()) {\n        this.initWebSocket()\n      }\n    },\n    async getReportDetail() {\n      const res = await CollectionReport.getReportDetail(this.report_id)\n      if (!res) {\n        return false\n      }\n      this.report_loading = false\n      this.dataInit(res)\n      return true\n    },\n    dataInit(res) {\n      const { pass_count, error_count, result } = res\n      this.total_count = pass_count + error_count\n      this.chartData.rows[0].count = pass_count\n      this.chartData.rows[1].count = error_count\n      this.base_result_list = result.slice()\n      this.result_list = result.slice()\n      this.dataSort()\n    },\n    dataSort() {\n      if (this.sort_switch) {\n        this.result_list = this.base_result_list.slice()\n      } else {\n        this.result_list.sort((a, b) => a.expected_is_pass - b.expected_is_pass)\n      }\n    },\n    initWebSocket() {\n      const uri = process.env.VUE_APP_SOCKET_URL\n      this.websocket = new WebSocket(uri)\n      this.websocket.onmessage = this.websocketOnMessage\n      this.websocket.onopen = this.websocketOnOpen\n      this.websocket.onerror = this.websocketOnError\n      this.websocket.onclose = this.websocketClose\n    },\n    websocketOnOpen() {\n      console.log('建立连接')\n    },\n    websocketOnError() { // 连接建立失败重连\n      this.initWebSocket()\n    },\n    async websocketOnMessage(e) {\n      const [type, collection_id, percentage] = e.data.split('_')\n      if (type !== 'collection') {\n        return\n      }\n      if (collection_id !== this.collection_id) {\n        return\n      }\n      this.percentage = Number(percentage)\n      if (Number(percentage) === 100) {\n        this.websocket.close()\n        await new Promise(resolve => {\n          setTimeout(() => resolve('done!'), 1000)\n        })\n        await this.getReportDetail()\n      }\n    },\n    websocketSend(data) { // 数据发送\n      this.websocket.send(data)\n    },\n    websocketClose(e) { // 关闭\n      console.log('断开连接', e)\n    },\n    getCaseDetail(caseInfo) {\n      this.case_choose = true\n      this.result_list.forEach(e => {\n        e.is_choose = false\n      })\n      caseInfo.is_choose = true\n      this.case_detail = caseInfo\n    }\n  }\n}\n",null]}