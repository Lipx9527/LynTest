{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/layout/user.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/layout/user.vue","mtime":1606834545493},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapGetters } from 'vuex'\nimport Vue from 'vue'\nimport Croppa from 'vue-croppa'\nimport User from '@/lin/model/user'\nimport 'vue-croppa/dist/vue-croppa.css'\nimport defaultAvatar from '@/assets/image/user/user.png'\n\nVue.use(Croppa)\n\nconst width = 150\nconst height = 150\n\nexport default {\n  name: 'user',\n  components: {},\n  data() {\n    const oldPassword = (rule, value, callback) => {\n      // eslint-disable-line\n      if (!value) {\n        return callback(new Error('原始密码不能为空'))\n      }\n      callback()\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'))\n      } else {\n        if (this.form.checkPassword !== '') {\n          this.$refs.form.validateField('confirm_password')\n        }\n        callback()\n      }\n    }\n    const validatePassword2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.form.new_password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      username: null,\n      dialogFormVisible: false,\n      usernameChanged: false,\n      groupName: null,\n      form: {\n        old_password: '',\n        new_password: '',\n        confirm_password: '',\n      },\n      rules: {\n        old_password: [{ validator: oldPassword, trigger: 'blur', required: true }],\n        new_password: [{ validator: validatePassword, trigger: 'blur', required: true }],\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\n      },\n      cropRule: {\n        width,\n        height,\n      },\n      imgRule: {\n        minWidth: width,\n        minHeight: height,\n      },\n      cropVisible: false,\n      cropImg: '',\n      croppa: {},\n      imgInfo: null,\n      quality: 1,\n      defaultAvatar,\n    }\n  },\n  computed: {\n    ...mapGetters(['user']),\n  },\n  watch: {\n    cropVisible(val) {\n      if (!val) {\n        this.$refs.croppa.remove()\n        this.cropImg = ''\n        this.imgInfo = null\n      }\n    },\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    ...mapActions(['loginOut', 'setUserAndState']),\n    fileChange(evt) {\n      if (evt.target.files.length !== 1) {\n        return\n      }\n      const imgFile = evt.target.files[0]\n      // 验证文件大小是否符合要求, 不大于 5M\n      if (imgFile.size > 1024 * 1024 * 5) {\n        this.$message.error('文件过大超过5M')\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n        return\n      }\n\n      // 验证图像是否符合要求\n      const imgSrc = window.URL.createObjectURL(imgFile)\n      const image = new Image()\n      image.src = imgSrc\n      image.onload = () => {\n        const w = image.width\n        const h = image.height\n        if (w < 50) {\n          this.$message.error('图像宽度过小, 请选择大于50px的图像')\n          // 清空输入框\n          this.clearFileInput(this.$refs.avatarInput)\n          return\n        }\n        if (h < 50) {\n          this.$message.error('图像高度过小, 请选择大于50px的图像')\n          // 清空输入框\n          this.clearFileInput(this.$refs.avatarInput)\n          return\n        }\n        // 验证通过, 打开裁剪框\n        this.cropImg = imgSrc\n        this.cropVisible = true\n        if (this.$refs.croppa) {\n          this.$refs.croppa.refresh()\n        }\n      }\n      image.onerror = () => {\n        this.$message.error('获取本地图片出现错误, 请重试')\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n      }\n    },\n    async handleCrop() {\n      // 获取裁剪数据\n      const blob = await this.$refs.croppa.promisedBlob('image/jpeg', 0.8)\n      // 构造为文件对象\n      const file = new File([blob], 'avatar.jpg', {\n        type: 'image/jpeg',\n      })\n\n      return this.$axios({\n        method: 'post',\n        url: '/cms/file',\n        data: {\n          file,\n        },\n      }).then(res => {\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n        if (!Array.isArray(res) || res.length !== 1) {\n          this.$message.error('头像上传失败, 请重试')\n          return false\n        }\n        // TODO: 错误码处理\n        // if (res.code === 10110) {\n        //   throw new Error('文件体积过大')\n        // }\n        return this.$axios({\n          method: 'put',\n          url: '/cms/user',\n          data: {\n            avatar: res[0].path,\n          },\n        })\n          .then(putRes => {\n            // eslint-disable-line\n            if (putRes.code < window.MAX_SUCCESS_CODE) {\n              this.$message({\n                type: 'success',\n                message: '更新头像成功',\n              })\n              this.cropVisible = false\n              // 触发重新获取用户信息\n              return User.getInformation()\n            }\n            return Promise.reject(new Error('更新头像失败'))\n          })\n          .then(infoRes => {\n            // eslint-disable-line\n            // 尝试获取当前用户信息\n            const user = infoRes\n            this.setUserAndState(user)\n          })\n      })\n    },\n    changeUsername() {\n      this.usernameChanged = true\n      setTimeout(() => {\n        this.$refs.input.focus()\n      }, 200)\n    },\n    async blur() {\n      if (this.username) {\n        const { user } = this.$store.state\n        if (this.username !== user.username && this.username !== '佚名') {\n          this.$axios({\n            method: 'put',\n            url: '/cms/user',\n            data: {\n              username: this.username,\n            },\n            showBackend: true,\n          })\n            .then(res => {\n              if (res.code < window.MAX_SUCCESS_CODE) {\n                this.$message({\n                  type: 'success',\n                  message: '更新姓名成功',\n                })\n                // 触发重新获取用户信息\n                return User.getInformation()\n              }\n            })\n            .then(res => {\n              // eslint-disable-line\n              this.setUserAndState(res)\n              this.username = res.username\n            })\n        }\n      }\n      this.usernameChanged = false\n    },\n    init() {\n      const { user } = this.$store.state\n      this.username = user ? user.username : '未登录'\n      this.groupName = user.groupName ? user.groupName : '超级管理员'\n      this.username = user && user.username ? user.username : '佚名'\n    },\n    goToCenter() {\n      this.$router.push('/center')\n    },\n    // 弹框 右上角 X\n    handleClose(done) {\n      this.dialogFormVisible = false\n      done()\n    },\n    outLogin() {\n      window.location.reload(true)\n      this.loginOut()\n    },\n    submitForm(formName) {\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\n        this.dialogFormVisible = false\n        return\n      }\n      if (this.form.old_password === this.form.new_password) {\n        this.$message.error('新密码不能与原始密码一样')\n        return\n      }\n      this.$refs[formName].validate(async valid => {\n        // eslint-disable-line\n        if (valid) {\n          const res = await User.updatePassword(this.form)\n          if (res.code < window.MAX_SUCCESS_CODE) {\n            this.$message.success(`${res.message}`)\n            this.resetForm(formName)\n            this.dialogFormVisible = false\n            setTimeout(() => {\n              this.loginOut()\n              const { origin } = window.location\n              window.location.href = origin\n            }, 1000)\n          }\n        } else {\n          console.log('error submit!!')\n          this.$message.error('请填写正确的信息')\n          return false\n        }\n      })\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    clearFileInput(ele) {\n      // eslint-disable-next-line\n      ele.value = ''\n    },\n  },\n}\n",null]}