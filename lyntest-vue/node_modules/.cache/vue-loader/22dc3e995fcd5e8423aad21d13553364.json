{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/pressure-test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/pressure-test.vue","mtime":1608716943629},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Pressure from '@/model/autotest/pressure'\nimport HttpCaseChoose from '@/component/autotest/http-case-choose.vue'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport VariableDetail from '@/component/autotest/variable-detail'\nimport ReadOnlyContent from '@/component/autotest/read-only-content'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  name: 'batch-execute',\n  components: {\n    HttpCaseChoose,\n    AssertionsDetail,\n    VariableDetail,\n    ReadOnlyContent,\n    ResponseStatus\n  },\n  data() {\n    return {\n      websocket: null,\n      loading: false,\n      total_count: 0,\n      case_info: {},\n      dialog_visible: false,\n      param: {\n        threads: 1,\n        times: 1,\n        case_id: null,\n      },\n      report_id: null,\n      report_list: [],\n      result_list: [],\n      table_data: [],\n      case_choose: false,\n      case_detail: {},\n      chartSettings: {\n        radius: [65, 45],\n        hoverAnimation: false,\n        label: { show: false }\n      },\n      chartExtend: {\n        graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '45%',\n          style: {\n            text: 0,\n            textAlign: 'center',\n            fill: '#000',\n            fontSize: 28,\n          }\n        }, {\n          type: 'text',\n          left: 'center',\n          top: '55%',\n          style: {\n            text: '请求',\n            textAlign: 'center',\n            fill: '#999999',\n            fontSize: 16,\n          }\n        }],\n        color: ['#00C292', '#E46A76']\n      },\n      chartData: {\n        columns: ['type', 'count'],\n        rows: [\n          { type: '成功', count: 0 },\n          { type: '失败', count: 0 }\n        ]\n      },\n    }\n  },\n  destroyed() {\n    // 关闭链接\n    if (this.websocket) {\n      this.websocket.close()\n    }\n  },\n  watch: {\n    total_count(val) {\n      this.chartExtend.graphic[0].style.text = val\n    },\n  },\n  methods: {\n    initWebSocket() {\n      const baseUri = process.env.VUE_APP_BASE_URL\n      const uri = `${baseUri.replace('http', 'ws')}ws/message`\n      this.websocket = new WebSocket(uri)\n      this.websocket.onmessage = this.websocketOnMessage\n      this.websocket.onopen = this.websocketOnOpen\n      this.websocket.onerror = this.websocketOnError\n      this.websocket.onclose = this.websocketClose\n    },\n    websocketOnOpen() {\n      console.log('建立websocket连接')\n    },\n    websocketOnError() { // 连接建立失败重连\n      this.initWebSocket()\n    },\n    async websocketOnMessage(e) { // 数据接收\n      console.log(e.data)\n      const [type, id] = e.data.split('_')\n      if (type !== 'pressure') {\n        return\n      }\n      if (Number(id) !== this.param.case_id) {\n        return\n      }\n      this.websocket.close()\n      this.loading = false\n      await this.getReportDetail()\n    },\n    websocketSend(data) { // 数据发送\n      this.websocket.send(data)\n    },\n    websocketClose(e) { // 关闭\n      console.log('断开连接', e)\n      this.loading = false\n    },\n    async doExecute() {\n      this.loading = true\n      this.initWebSocket()\n      this.report_id = await Pressure.execute(this.param)\n    },\n    async dialogClose() {\n      this.dialog_visible = false\n      this.param.case_id = this.case_info.id\n      await this.getReportList()\n      await this.getReportDetail()\n    },\n    async getReportList() {\n      const res = await Pressure.getReportIdList(this.param.case_id)\n      this.report_list = res\n      if (res.length === 0) {\n        return\n      }\n      const firstId = res[0]\n      this.report_id = firstId\n    },\n    async getReportDetail() {\n      if (this.report_id === null) {\n        return\n      }\n      const res = await Pressure.getReportDetail(this.report_id)\n      this.dataInit(res)\n    },\n    dataInit(res) {\n      this.table_data = []\n      const { pass_count, error_count, result } = res\n      this.table_data.push(res)\n      this.total_count = pass_count + error_count\n      this.chartExtend.graphic[0].style.text = pass_count + error_count\n      res.count = this.total_count\n      this.chartData.rows[0].count = pass_count\n      this.chartData.rows[1].count = error_count\n      this.result_list = result.slice()\n    },\n    getCaseDetail(caseInfo) {\n      this.case_choose = true\n      this.result_list.forEach(e => {\n        e.is_choose = false\n      })\n      caseInfo.is_choose = true\n      this.case_detail = caseInfo\n    }\n  }\n}\n",{"version":3,"sources":["pressure-test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pressure-test.vue","sourceRoot":"src/view/api-test","sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"info\">\n      <el-form :inline=\"true\" :model=\"param\" class=\"demo-form-inline\">\n        <el-form-item>\n          <el-button @click=\"dialog_visible = true\" type=\"primary\">Case选择</el-button>\n        </el-form-item>\n        <el-form-item label=\"线程数\" class=\"label\">\n          <el-input-number v-model=\"param.threads\" :min=\"1\" :max=\"100\"></el-input-number>\n        </el-form-item>\n        <el-form-item label=\"执行次数\" class=\"label\">\n          <el-input-number v-model=\"param.times\" :min=\"1\" :max=\"20\"></el-input-number>\n        </el-form-item>\n        <el-form-item class=\"label\">\n          <el-button type=\"success\"\n                     class=\"run-button\"\n                     @click=\"doExecute\"\n                     :disabled=\"!case_info.case_name || loading\">\n            执 行\n            <i v-if=\"loading\" class=\"el-icon-loading\"></i>\n            <i v-else class=\"el-icon-video-play\"></i>\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    <el-card class=\"result\">\n      <div class=\"case-choose\" v-show=\"case_info.case_name\">\n        <span class=\"title\">{{case_info.case_name}}</span>\n        <el-select v-model=\"report_id\" placeholder=\"历史报告\" size=\"small\" @change=\"getReportDetail\">\n          <el-option v-for=\"id in report_list\" :key=\"id\" :value=\"id\" :label=\"id\"></el-option>\n        </el-select>\n      </div>\n      <div class=\"case-info\" v-if=\"loading\" v-loading=\"loading\"></div>\n      <div class=\"case-info\" v-show=\"report_id && !loading\">\n        <div class=\"statistical\">\n          <el-card class=\"ring-card\">\n            <div>\n              <ve-ring :data=\"chartData\"\n                       :settings=\"chartSettings\"\n                       :extend=\"chartExtend\" class=\"ring\">\n              </ve-ring>\n            </div>\n          </el-card>\n          <el-card class=\"case-list\">\n            <div style=\"height: 260px\">\n              <vue-scroll>\n                <div v-for=\"item in result_list\"\n                     :class=\"{'case-title-normal': !item.is_choose, 'case-title-choose':item.is_choose}\"\n                     :key=\"item.index\"\n                     @click=\"getCaseDetail(item)\">\n                  <i class=\"el-icon-success icon\" v-if=\"item.expected_is_pass\" style=\"color: #00C292\"></i>\n                  <i class=\"el-icon-error icon\" v-else-if=\"!item.expected_is_pass\" style=\"color: #E46A76\"></i>\n                  <span class=\"title\">\n              {{item.case_name}}\n              </span>\n                </div>\n              </vue-scroll>\n            </div>\n          </el-card>\n        </div>\n        <div class=\"case-detail\">\n          <el-card class=\"table\">\n            <el-table :data=\"table_data\">\n              <el-table-column prop=\"count\" label=\"请求数\"></el-table-column>\n              <el-table-column prop=\"average\" label=\"平均\"></el-table-column>\n              <el-table-column prop=\"median\" label=\"中位数\"></el-table-column>\n              <el-table-column prop=\"ninety\" label=\"90%\"></el-table-column>\n              <el-table-column prop=\"ninety_five\" label=\"95%\"></el-table-column>\n              <el-table-column prop=\"ninety_nine\" label=\"99%\"></el-table-column>\n              <el-table-column prop=\"min\" label=\"最小\"></el-table-column>\n              <el-table-column prop=\"max\" label=\"最大\"></el-table-column>\n            </el-table>\n          </el-card>\n          <el-card class=\"detail\">\n            <div v-show=\"case_choose\" style=\"height: 280px\">\n              <vue-scroll>\n                <div class=\"header\">\n                  <div class=\"title\">\n                    {{case_detail.case_name}}\n                  </div>\n                  <response-status v-if=\"case_detail.status_code\"\n                                   :status-code=\"case_detail.status_code\"\n                                   :message=\"case_detail.message\"\n                                   :response-time=\"case_detail.response_time\"/>\n                </div>\n                <assertions-detail :result=\"case_detail.expected_res\"\n                                   class=\"table\"\n                                   v-if=\"case_choose && case_detail.expected_res.length !== 0\">\n                </assertions-detail>\n                <variable-detail :result=\"case_detail.variable_list\"\n                                 class=\"table\"\n                                 v-if=\"case_choose && case_detail.variable_list.length !== 0\">\n                </variable-detail>\n                <read-only-content title=\"URL\" :content=\"case_detail.url\"></read-only-content>\n                <read-only-content title=\"Request\" :content=\"case_detail.request_text\"></read-only-content>\n                <read-only-content title=\"Response\" :content=\"case_detail.response_text\"></read-only-content>\n              </vue-scroll>\n            </div>\n          </el-card>\n        </div>\n      </div>\n    </el-card>\n    <el-dialog :visible.sync=\"dialog_visible\" :show-close=\"false\" width=\"70%\">\n      <http-case-choose v-model=\"case_info\" @dialogClose=\"dialogClose\"></http-case-choose>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Pressure from '@/model/autotest/pressure'\nimport HttpCaseChoose from '@/component/autotest/http-case-choose.vue'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport VariableDetail from '@/component/autotest/variable-detail'\nimport ReadOnlyContent from '@/component/autotest/read-only-content'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  name: 'batch-execute',\n  components: {\n    HttpCaseChoose,\n    AssertionsDetail,\n    VariableDetail,\n    ReadOnlyContent,\n    ResponseStatus\n  },\n  data() {\n    return {\n      websocket: null,\n      loading: false,\n      total_count: 0,\n      case_info: {},\n      dialog_visible: false,\n      param: {\n        threads: 1,\n        times: 1,\n        case_id: null,\n      },\n      report_id: null,\n      report_list: [],\n      result_list: [],\n      table_data: [],\n      case_choose: false,\n      case_detail: {},\n      chartSettings: {\n        radius: [65, 45],\n        hoverAnimation: false,\n        label: { show: false }\n      },\n      chartExtend: {\n        graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '45%',\n          style: {\n            text: 0,\n            textAlign: 'center',\n            fill: '#000',\n            fontSize: 28,\n          }\n        }, {\n          type: 'text',\n          left: 'center',\n          top: '55%',\n          style: {\n            text: '请求',\n            textAlign: 'center',\n            fill: '#999999',\n            fontSize: 16,\n          }\n        }],\n        color: ['#00C292', '#E46A76']\n      },\n      chartData: {\n        columns: ['type', 'count'],\n        rows: [\n          { type: '成功', count: 0 },\n          { type: '失败', count: 0 }\n        ]\n      },\n    }\n  },\n  destroyed() {\n    // 关闭链接\n    if (this.websocket) {\n      this.websocket.close()\n    }\n  },\n  watch: {\n    total_count(val) {\n      this.chartExtend.graphic[0].style.text = val\n    },\n  },\n  methods: {\n    initWebSocket() {\n      const baseUri = process.env.VUE_APP_BASE_URL\n      const uri = `${baseUri.replace('http', 'ws')}ws/message`\n      this.websocket = new WebSocket(uri)\n      this.websocket.onmessage = this.websocketOnMessage\n      this.websocket.onopen = this.websocketOnOpen\n      this.websocket.onerror = this.websocketOnError\n      this.websocket.onclose = this.websocketClose\n    },\n    websocketOnOpen() {\n      console.log('建立websocket连接')\n    },\n    websocketOnError() { // 连接建立失败重连\n      this.initWebSocket()\n    },\n    async websocketOnMessage(e) { // 数据接收\n      console.log(e.data)\n      const [type, id] = e.data.split('_')\n      if (type !== 'pressure') {\n        return\n      }\n      if (Number(id) !== this.param.case_id) {\n        return\n      }\n      this.websocket.close()\n      this.loading = false\n      await this.getReportDetail()\n    },\n    websocketSend(data) { // 数据发送\n      this.websocket.send(data)\n    },\n    websocketClose(e) { // 关闭\n      console.log('断开连接', e)\n      this.loading = false\n    },\n    async doExecute() {\n      this.loading = true\n      this.initWebSocket()\n      this.report_id = await Pressure.execute(this.param)\n    },\n    async dialogClose() {\n      this.dialog_visible = false\n      this.param.case_id = this.case_info.id\n      await this.getReportList()\n      await this.getReportDetail()\n    },\n    async getReportList() {\n      const res = await Pressure.getReportIdList(this.param.case_id)\n      this.report_list = res\n      if (res.length === 0) {\n        return\n      }\n      const firstId = res[0]\n      this.report_id = firstId\n    },\n    async getReportDetail() {\n      if (this.report_id === null) {\n        return\n      }\n      const res = await Pressure.getReportDetail(this.report_id)\n      this.dataInit(res)\n    },\n    dataInit(res) {\n      this.table_data = []\n      const { pass_count, error_count, result } = res\n      this.table_data.push(res)\n      this.total_count = pass_count + error_count\n      this.chartExtend.graphic[0].style.text = pass_count + error_count\n      res.count = this.total_count\n      this.chartData.rows[0].count = pass_count\n      this.chartData.rows[1].count = error_count\n      this.result_list = result.slice()\n    },\n    getCaseDetail(caseInfo) {\n      this.case_choose = true\n      this.result_list.forEach(e => {\n        e.is_choose = false\n      })\n      caseInfo.is_choose = true\n      this.case_detail = caseInfo\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .container {\n    padding: 6px;\n\n    .info {\n      height: 80px;\n\n      .label {\n        margin-left: 10px\n      }\n\n      .run-button {\n        width: 100%;\n        height: 40px;\n        font-size: 120%;\n      }\n    }\n\n    .result {\n      min-height: 600px;\n      margin-top: 6px;\n      display: flex;\n      flex-direction: column;\n\n      .case-choose {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 5px;\n\n        .title {\n          color: $parent-title-color;\n          font-size: 1.1em;\n          font-weight: 500;\n        }\n      }\n\n      .case-info {\n        display: flex;\n\n        .statistical {\n          display: flex;\n          flex-direction: column;\n          width: 40%;\n\n          .ring-card {\n            height: 240px;\n\n            .ring {\n              transform: translateY(-90px);\n            }\n          }\n\n          .case-list {\n            margin-top: 10px;\n            height: 300px;\n\n            .case-title {\n              height: 30px;\n              width: 98%;\n              border:1px solid #b3d8ff;\n              margin-bottom: 6px;\n              display: flex;\n              align-items: center;\n\n              .icon {\n                margin-left: 10px;\n              }\n\n              .title {\n                margin-left: 10px;\n              }\n            }\n\n            .case-title-normal {\n              @extend .case-title;\n              color: #409EFF;\n              background: #ecf5ff;\n            }\n\n            .case-title-normal:hover {\n              border: 1px solid #409EFF;\n            }\n\n            .case-title-choose{\n              @extend .case-title;\n              color: #ecf5ff;\n              background: #409EFF;\n            }\n          }\n        }\n\n        .case-detail {\n          margin-left: 10px;\n          width: 60%;\n          height: 600px;\n\n          .table {\n            height: 200px;\n          }\n\n          .detail {\n            margin-top: 10px;\n            height: 340px;\n\n            .header {\n              display: flex;\n              align-items: flex-end;\n              justify-content: space-between;\n\n              .title {\n                color: $parent-title-color;\n                font-size: 20px;\n                font-weight: 500;\n              }\n            }\n\n            .table {\n              margin-top: 10px;\n              height: 100%;\n            }\n\n            .response-text {\n              margin-top: 10px;\n              word-wrap: break-word;\n              word-break: normal;\n            }\n          }\n\n        }\n      }\n\n    }\n  }\n\n</style>\n"]}]}