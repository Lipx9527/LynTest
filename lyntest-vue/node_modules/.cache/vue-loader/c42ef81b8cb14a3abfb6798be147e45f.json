{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/mock/mock-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/mock/mock-list.vue","mtime":1608862962611},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { codemirror } from 'vue-codemirror'\nimport Mock from '@/model/mock'\nimport LynSearch from '@/component/lyn/lyn-search'\n// require css\n/* eslint-disable */\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/javascript/javascript.js'\nimport 'codemirror/theme/cobalt.css'\n\nexport default {\n  components: {\n    codemirror,\n    LynSearch\n  },\n  data() {\n    return {\n      search: {\n        path: '',\n        count: 10,\n        page: 1,\n      },\n      total: 0,\n      operation_type: 0,\n      mock_list: [],\n      mock_info: {},\n      default_mock_info: {\n        path: '',\n        method: 'POST',\n        description: '',\n      },\n      drawer_visible: false,\n      drawer_title: false,\n      method_list: ['POST', 'GET', 'PUT', 'DELETE'],\n      req_active_tab: 'request_body',\n      res_active_tab: 'response_body',\n      codemirror_options: {\n        tabSize: 4,\n        mode: 'text/javascript',\n        theme: 'cobalt',\n        lineNumbers: true,\n        line: true,\n      },\n    }\n  },\n  mounted() {\n    this.searchMockApiList()\n  },\n  methods: {\n    async searchMockApiList() {\n      const res = await Mock.searchMockList(this.search)\n      this.mock_list = res.items\n      this.total = res.total\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.searchMockApiList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.searchMockApiList()\n    },\n    createMockApi() {\n      this.drawer_visible = true\n      this.operation_type = 1\n      this.mock_info = { ...this.default_mock_info }\n    },\n    async saveMockApi() {\n      const res = this.operation_type === 1 ? await Mock.createMock(this.mock_info) : await Mock.updateMock(this.mock_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(res.message)\n        this.drawer_visible = false\n        this.searchMockApiList()\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    handleEdit(row) {\n      this.drawer_visible = true\n      this.operation_type = 2\n      this.mock_info = { ...row }\n    },\n    async handleDelete(id) {\n      const res = await Mock.deleteMock(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(res.message)\n        this.searchMockApiList()\n      } else {\n        this.$message.error('删除功能异常')\n      }\n    },\n    handleCopy(value) {\n      const input = document.createElement('input')\n      input.value = `${process.env.VUE_APP_BASE_URL}/mock/dynamic${value}`\n      document.body.appendChild(input)\n      input.select()\n      document.execCommand('Copy')\n      document.body.removeChild(input)\n      this.$message.success('已复制路径至剪贴板')\n    }\n  }\n}\n",null]}