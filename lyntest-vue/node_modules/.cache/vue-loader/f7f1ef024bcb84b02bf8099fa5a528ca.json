{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/autotest/http-case-edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/autotest/http-case-edit.vue","mtime":1608859928730},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueJsonPretty from 'vue-json-pretty'\nimport Category from '@/model/autotest/category'\nimport HttpCase from '@/model/autotest/http-case'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  props: {\n    operationType: {\n      type: Number\n    },\n    caseInfo: {\n      type: Object\n    }\n  },\n  components: {\n    VueJsonPretty,\n    AssertionsDetail,\n    ResponseStatus,\n  },\n  data() {\n    return {\n      case_info: {},\n      category_list: [],\n      default_case_info: {\n        category: '',\n        case_name: '',\n        api_url: 'http://',\n        api_port: null,\n        api_method: 'POST',\n        api_path: '',\n        description: '',\n        header_form: [{\n          enable: true,\n        }],\n        body_type: 1,\n        body_value: null,\n        variable_list: [{\n          enable: true,\n        }],\n        expected_list: [{\n          enable: true,\n        }],\n      },\n      config: {\n        method_list: ['POST', 'GET', 'PUT', 'DELETE'],\n        extract_type_list: [{\n          label: 'JsonPath提取',\n          value: 1,\n        }, {\n          label: '正则表达式提取',\n          value: 2,\n        }],\n        expected_type_list: [{\n          label: 'equals',\n          value: 1,\n        }, {\n          label: 'contains',\n          value: 2,\n        }, {\n          label: 'not empty or null',\n          value: 3,\n        }]\n      },\n      has_result: false, // 是否进行了请求\n      result: {},\n      result_css: {\n        status_code_type: 'success',\n        time_type: 'success',\n      },\n      result_is_json: false, // 返回body是否为json\n      result_json_path: '',\n    }\n  },\n  mounted() {\n    this.getCaseInfo()\n    this.getCategoryInfo()\n  },\n  methods: {\n    async getCategoryInfo() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    getCaseInfo() {\n      this.case_info = this.operationType === 1 ? { ...this.default_case_info } : { ...this.caseInfo }\n    },\n    async caseExecute() {\n      const res = await HttpCase.execute(this.case_info)\n      this.result = res\n      // 如果返回结果为json，则进行格式美化，并展示copy按钮；不为json则直接显示文本内容\n      if (this.isJson(res.response_text)) {\n        this.result.response_text = JSON.parse(res.response_text)\n        this.result_is_json = true\n      }\n      this.has_result = true\n    },\n    async saveCase() {\n      const res = this.operationType === 2 ? await HttpCase.updateCase(this.case_info) : await HttpCase.createCase(this.case_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('drawer-close')\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    eleIsDisable(index, data) {\n      return data.length - 1 === index\n    },\n    deleteRow(index, data) {\n      data.splice(index, 1)\n    },\n    headerChange() {\n      let isNeedCreate = true\n      this.case_info.header_form.forEach(item => {\n        if (!item.header_key && !item.header_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.header_form.push({ enable: true, header_key: '', header_value: '' })\n      }\n    },\n    variableChange() {\n      let isNeedCreate = true\n      this.case_info.variable_list.forEach(item => {\n        if (!item.extract_method && !item.extract_rule && !item.variable_name) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.variable_list.push({ enable: true, extract_method: '', extract_rule: '', variable_name: '' })\n      }\n    },\n    expectedChange() {\n      let isNeedCreate = true\n      this.case_info.expected_list.forEach(item => {\n        if (!item.extract_method && !item.extract_rule && !item.compare_type && !item.expected_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.expected_list.push({ enable: true, extract_method: '', extract_rule: '', compare_type: '', expected_value: '' })\n      }\n    },\n    // 点击json的key，获取jsonpath和data\n    resultTextClick(path) {\n      this.result_json_path = path\n    },\n    // 复制jsonPath\n    copyPath() {\n      const input = document.createElement('input')\n      input.value = this.result_json_path\n      document.body.appendChild(input)\n      input.select()\n      document.execCommand('Copy')\n      document.body.removeChild(input)\n      this.$message.success('复制成功')\n    },\n    isJson(str) {\n      if (typeof str !== 'string') {\n        return false\n      }\n      try {\n        const obj = JSON.parse(str)\n        return !!(typeof obj === 'object' && obj)\n      } catch (e) {\n        return false\n      }\n    }\n  }\n}\n",{"version":3,"sources":["http-case-edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8LA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"http-case-edit.vue","sourceRoot":"src/component/autotest","sourcesContent":["<template>\n  <el-card class=\"edit\">\n    <div class=\"info-row\">\n      <div class=\"info-cols\">\n        <div class=\"category-col\">\n          <div class=\"title\">分类名称:</div>\n          <el-select v-model=\"case_info.category\" style=\"width: 120px\">\n            <el-option v-for=\"item in category_list\"\n                       :key=\"item.category_name\"\n                       :label=\"item.category_name\"\n                       :value=\"item.category_name\"/>\n          </el-select>\n        </div>\n        <div class=\"name-col\">\n          <div class=\"title\">接口名称:</div>\n          <el-input v-model=\"case_info.case_name\" style=\"width: calc(100% - 80px)\"></el-input>\n        </div>\n      </div>\n      <div>\n        <el-button type=\"success\" @click=\"caseExecute\">请求 <i class=\"el-icon-s-promotion\"></i></el-button>\n        <el-button type=\"primary\" @click=\"saveCase\">{{operationType === 2? '更新': '保存'}} <i class=\"el-icon-download\"></i></el-button>\n      </div>\n    </div>\n    <div class=\"info-row\">\n      <div class=\"title\">接口地址:</div>\n      <el-input style=\"width: calc(100% - 80px)\" v-model=\"case_info.api_url\">\n        <el-select style=\"width: 90px\" v-model=\"case_info.api_method\" slot=\"prepend\">\n          <el-option v-for=\"item in config.method_list\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n        </el-select>\n      </el-input>\n    </div>\n    <el-tabs type=\"border-card\" class=\"request\">\n      <el-tab-pane label=\"请求体\">\n        <el-radio-group v-model=\"case_info.body_type\" style=\"margin-bottom: 10px\">\n          <el-radio :label=\"1\">json</el-radio>\n          <el-radio :label=\"2\">form</el-radio>\n        </el-radio-group>\n        <el-input type=\"textarea\"\n                  :autosize=\"{ minRows: 5, maxRows: 5}\"\n                  class=\"request-body\"\n                  v-model=\"case_info.body_value\" resize=\"none\"/>\n      </el-tab-pane>\n      <el-tab-pane label=\"请求头\">\n        <div class=\"request-param\">\n          <vue-scroll>\n            <div v-for=\"(item,index) in case_info.header_form\" :key=\"index\" class=\"kv-row\">\n              <el-row type=\"flex\" :gutter=\"20\" justify=\"space-between\" align=\"middle\">\n                <el-col class=\"kv-checkbox\">\n                  <el-checkbox v-if=\"!eleIsDisable(index, case_info.header_form)\" v-model=\"item.enable\" />\n                </el-col>\n                <el-col>\n                  <el-input v-model=\"item.header_key\" size=\"small\"\n                            placeholder=\"键\"\n                            @change=\"headerChange\" show-word-limit/>\n                </el-col>\n                <el-col>\n                  <el-input v-model=\"item.header_value\" size=\"small\"\n                            @change=\"headerChange\"\n                            placeholder=\"值\" show-word-limit/>\n                </el-col>\n                <el-col class=\"kv-delete\">\n                  <el-button size=\"mini\" class=\"el-icon-delete-solid\"\n                             circle\n                             @click=\"deleteRow(index, case_info.header_form)\"\n                             :disabled=\"eleIsDisable(index, case_info.header_form)\"/>\n                </el-col>\n              </el-row>\n            </div>\n          </vue-scroll>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"变量\">\n        <div class=\"request-param\">\n          <vue-scroll>\n            <div v-for=\"(item,index) in case_info.variable_list\" :key=\"index\" class=\"kv-row\">\n              <el-row type=\"flex\" :gutter=\"20\" justify=\"space-between\" align=\"middle\">\n                <el-col class=\"kv-checkbox\">\n                  <el-checkbox v-if=\"!eleIsDisable(index, case_info.variable_list)\" v-model=\"item.enable\" />\n                </el-col>\n                <el-col class=\"kv-select\">\n                  <el-select v-model=\"item.extract_method\" placeholder=\"请选择取值方式\" size=\"small\" @change=\"variableChange\">\n                    <el-option v-for=\"item in config.extract_type_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n                  </el-select>\n                </el-col>\n                <el-col>\n                  <el-input size=\"small\" v-model=\"item.extract_rule\" placeholder=\"提取路径\" @change=\"variableChange\"></el-input>\n                </el-col>\n                <el-col>\n                  <el-tooltip class=\"item\" effect=\"dark\"\n                              content=\"为保持变量名规范，请输入大写、下划线，类似于VARIABLE_TYPE,引用时使用${VARIABLE_TYPE}\"\n                              :enterable=\"false\"\n                              placement=\"top-end\">\n                    <el-input size=\"small\" v-model=\"item.variable_name\" placeholder=\"变量名\" @change=\"variableChange\"></el-input>\n                  </el-tooltip>\n                </el-col>\n                <el-col class=\"kv-delete\">\n                  <el-button size=\"mini\" class=\"el-icon-delete-solid\"\n                             circle\n                             @click=\"deleteRow(index, case_info.variable_list)\"\n                             :disabled=\"eleIsDisable(index, case_info.variable_list)\"/>\n                </el-col>\n              </el-row>\n            </div>\n          </vue-scroll>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"断言\">\n        <div class=\"request-param\">\n          <vue-scroll>\n            <div v-for=\"(item,index) in case_info.expected_list\" :key=\"index\" class=\"kv-row\">\n              <el-row type=\"flex\" :gutter=\"20\" justify=\"space-between\" align=\"middle\">\n                <el-col class=\"kv-checkbox\">\n                  <el-checkbox v-if=\"!eleIsDisable(index, case_info.expected_list)\" v-model=\"item.enable\" />\n                </el-col>\n                <el-col class=\"kv-select\">\n                  <el-select v-model=\"item.extract_method\" placeholder=\"请选择取值方式\" size=\"small\" @change=\"expectedChange\">\n                    <el-option v-for=\"item in config.extract_type_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n                  </el-select>\n                </el-col>\n                <el-col>\n                  <el-input size=\"small\" v-model=\"item.extract_rule\" placeholder=\"提取路径/规则\" @change=\"expectedChange\"></el-input>\n                </el-col>\n                <el-col class=\"kv-select\">\n                  <el-select v-model=\"item.compare_type\" placeholder=\"校验方式\" size=\"small\" @change=\"expectedChange\">\n                    <el-option v-for=\"type in config.expected_type_list\" :key=\"type.value\" :label=\"type.label\" :value=\"type.value\"/>\n                  </el-select>\n                </el-col>\n                <el-col>\n                  <el-input size=\"small\" v-model=\"item.expected_value\" placeholder=\"预期值\" @change=\"expectedChange\" :disabled=\"item.compare_type === 3\"></el-input>\n                </el-col>\n                <el-col class=\"kv-delete\">\n                  <el-button size=\"mini\" class=\"el-icon-delete-solid\"\n                             circle\n                             @click=\"deleteRow(index, case_info.expected_list)\"\n                             :disabled=\"eleIsDisable(index, case_info.expected_list)\"/>\n                </el-col>\n              </el-row>\n            </div>\n          </vue-scroll>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"描述\">\n        <el-input type=\"textarea\"\n                  :autosize=\"{ minRows: 6, maxRows: 6}\"\n                  class=\"request-body\"\n                  v-model=\"case_info.description\" resize=\"none\"/>\n      </el-tab-pane>\n    </el-tabs>\n    <div class=\"response\">\n      <div class=\"response-header\">\n        <div class=\"response-title\">Response</div>\n        <div class=\"response-info-list\" v-show=\"has_result\">\n          <el-popover\n            placement=\"left\"\n            width=\"450\"\n            trigger=\"hover\" v-if=\"result_is_json\">\n            <assertions-detail :result=\"result.expected_res\"></assertions-detail>\n            <i slot=\"reference\" class=\"el-icon-view\" style=\"transform: translateX(-10px)\"></i>\n          </el-popover>\n          <response-status :status-code=\"result.status_code\" :message=\"result.message\" :response-time=\"result.response_time\"/>\n        </div>\n      </div>\n      <div v-if=\"!has_result\" style=\"height: calc(100% - 40px)\">\n          <div class=\"response-default-body\">\n            <l-icon name=\"file\" color=\"#ccc\" height=\"3.2em\" width=\"3.2em\"></l-icon>\n            <div class=\"default-content\">Hit Send to get a response</div>\n          </div>\n      </div>\n      <div v-else class=\"response-body\">\n        <div class=\"response-body-path\" @click=\"copyPath\" v-if=\"result_json_path\">\n          {{result_json_path}} <i class=\"el-icon-copy-document\"></i>\n        </div>\n        <vue-scroll>\n          <div class=\"body-text-is-json\" v-if=\"result_is_json\">\n            <vue-json-pretty\n              path=\"$\"\n              :data=\"result.response_text\"\n              @click=\"resultTextClick\">\n            </vue-json-pretty>\n          </div>\n          <div v-else class=\"body-text-not-json\">\n            {{result.response_text}}\n          </div>\n        </vue-scroll>\n      </div>\n    </div>\n  </el-card>\n</template>\n\n<script>\nimport VueJsonPretty from 'vue-json-pretty'\nimport Category from '@/model/autotest/category'\nimport HttpCase from '@/model/autotest/http-case'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  props: {\n    operationType: {\n      type: Number\n    },\n    caseInfo: {\n      type: Object\n    }\n  },\n  components: {\n    VueJsonPretty,\n    AssertionsDetail,\n    ResponseStatus,\n  },\n  data() {\n    return {\n      case_info: {},\n      category_list: [],\n      default_case_info: {\n        category: '',\n        case_name: '',\n        api_url: 'http://',\n        api_port: null,\n        api_method: 'POST',\n        api_path: '',\n        description: '',\n        header_form: [{\n          enable: true,\n        }],\n        body_type: 1,\n        body_value: null,\n        variable_list: [{\n          enable: true,\n        }],\n        expected_list: [{\n          enable: true,\n        }],\n      },\n      config: {\n        method_list: ['POST', 'GET', 'PUT', 'DELETE'],\n        extract_type_list: [{\n          label: 'JsonPath提取',\n          value: 1,\n        }, {\n          label: '正则表达式提取',\n          value: 2,\n        }],\n        expected_type_list: [{\n          label: 'equals',\n          value: 1,\n        }, {\n          label: 'contains',\n          value: 2,\n        }, {\n          label: 'not empty or null',\n          value: 3,\n        }]\n      },\n      has_result: false, // 是否进行了请求\n      result: {},\n      result_css: {\n        status_code_type: 'success',\n        time_type: 'success',\n      },\n      result_is_json: false, // 返回body是否为json\n      result_json_path: '',\n    }\n  },\n  mounted() {\n    this.getCaseInfo()\n    this.getCategoryInfo()\n  },\n  methods: {\n    async getCategoryInfo() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    getCaseInfo() {\n      this.case_info = this.operationType === 1 ? { ...this.default_case_info } : { ...this.caseInfo }\n    },\n    async caseExecute() {\n      const res = await HttpCase.execute(this.case_info)\n      this.result = res\n      // 如果返回结果为json，则进行格式美化，并展示copy按钮；不为json则直接显示文本内容\n      if (this.isJson(res.response_text)) {\n        this.result.response_text = JSON.parse(res.response_text)\n        this.result_is_json = true\n      }\n      this.has_result = true\n    },\n    async saveCase() {\n      const res = this.operationType === 2 ? await HttpCase.updateCase(this.case_info) : await HttpCase.createCase(this.case_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('drawer-close')\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    eleIsDisable(index, data) {\n      return data.length - 1 === index\n    },\n    deleteRow(index, data) {\n      data.splice(index, 1)\n    },\n    headerChange() {\n      let isNeedCreate = true\n      this.case_info.header_form.forEach(item => {\n        if (!item.header_key && !item.header_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.header_form.push({ enable: true, header_key: '', header_value: '' })\n      }\n    },\n    variableChange() {\n      let isNeedCreate = true\n      this.case_info.variable_list.forEach(item => {\n        if (!item.extract_method && !item.extract_rule && !item.variable_name) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.variable_list.push({ enable: true, extract_method: '', extract_rule: '', variable_name: '' })\n      }\n    },\n    expectedChange() {\n      let isNeedCreate = true\n      this.case_info.expected_list.forEach(item => {\n        if (!item.extract_method && !item.extract_rule && !item.compare_type && !item.expected_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.expected_list.push({ enable: true, extract_method: '', extract_rule: '', compare_type: '', expected_value: '' })\n      }\n    },\n    // 点击json的key，获取jsonpath和data\n    resultTextClick(path) {\n      this.result_json_path = path\n    },\n    // 复制jsonPath\n    copyPath() {\n      const input = document.createElement('input')\n      input.value = this.result_json_path\n      document.body.appendChild(input)\n      input.select()\n      document.execCommand('Copy')\n      document.body.removeChild(input)\n      this.$message.success('复制成功')\n    },\n    isJson(str) {\n      if (typeof str !== 'string') {\n        return false\n      }\n      try {\n        const obj = JSON.parse(str)\n        return !!(typeof obj === 'object' && obj)\n      } catch (e) {\n        return false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .edit {\n    padding: 5px;\n\n    .info-row {\n      margin-bottom: 20px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      .info-cols {\n        display: flex;\n        align-items: center;\n      }\n\n      .title {\n        color: #333333;\n        font-weight: 500;\n        font-size: 14px;\n        width: 80px;\n      }\n\n      .category-col {\n        display: flex;\n        align-items: center;\n        margin-right: 20px;\n      }\n\n      .name-col {\n        display: flex;\n        align-items: center;\n        width: 400px;\n      }\n\n      .url-col {\n        display: flex;\n        align-items: center;\n      }\n    }\n\n    .request {\n      height: 210px;\n\n      .request-param {\n        height: 140px;\n        transform: translateY(-10px);\n\n        .kv-row {\n          margin-top: 10px;\n\n          .kv-checkbox {\n            width: 20px;\n            margin-right: 10px;\n          }\n\n          .kv-delete {\n            width: 60px;\n            margin-right: 10px;\n          }\n\n          .kv-select {\n            width: 500px;\n          }\n        }\n      }\n\n      .request-body {\n        width: 100%;\n        height: 100%;\n      }\n\n    }\n    .response {\n      height: 360px;\n      background-color: #FFFFFF;\n      border: 1px solid #dfe2e8;\n      box-shadow: 1px 3px 5px #DCDFE6;\n\n      .response-header {\n        background-color: #F6F7FA;\n        height: 40px;\n        display: flex;\n        justify-content:space-between;\n        align-items: center;\n        border-bottom: 1px solid #dfe2e8;\n\n        .response-title {\n          font-size: 15px;\n          color: #909399;\n          margin-left: 10px;\n        }\n\n        .response-info-list {\n          display: flex;\n          align-items: center;\n        }\n      }\n\n      .response-default-body {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        .default-content {\n          color: #909399;\n          margin-top: 10px;\n        }\n      }\n\n      .response-body {\n        height: calc(100% - 40px);\n        position: relative;\n\n        .response-body-path {\n          position: absolute;\n          width: auto;\n          top: 10px;\n          right: 20px;\n          color: #909399;\n          z-index: 999;\n        }\n\n        .body-text-is-json {\n          word-wrap: break-word;\n          margin: 10px 15px 10px 10px;\n        }\n\n        .body-text-not-json {\n          word-wrap: break-word;\n          margin: 10px 15px 10px 10px;\n          color: #909399;\n        }\n      }\n    }\n  }\n</style>\n"]}]}