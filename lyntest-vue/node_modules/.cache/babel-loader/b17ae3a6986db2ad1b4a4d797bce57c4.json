{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/notify/emitter.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/component/notify/emitter.js","mtime":1606834545488},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* eslint-disable*/\nvar Emitter =\n/*#__PURE__*/\nfunction () {\n  function Emitter() {\n    _classCallCheck(this, Emitter);\n\n    this.listeners = new Map();\n  }\n\n  _createClass(Emitter, [{\n    key: \"addListener\",\n    value: function addListener(label, callback, vm) {\n      if (typeof callback === 'function') {\n        this.listeners.has(label) || this.listeners.set(label, []);\n        this.listeners.get(label).push({\n          callback: callback,\n          vm: vm\n        });\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(label, callback, vm) {\n      var listeners = this.listeners.get(label);\n      var index;\n\n      if (listeners && listeners.length) {\n        index = listeners.reduce(function (i, listener, index) {\n          if (typeof listener.callback === 'function' && listener.callback === callback && listener.vm === vm) {\n            i = index;\n          }\n\n          return i;\n        }, -1);\n\n        if (index > -1) {\n          listeners.splice(index, 1);\n          this.listeners.set(label, listeners);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(label) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var listeners = this.listeners.get(label);\n\n      if (listeners && listeners.length) {\n        listeners.forEach(function (listener) {\n          var _listener$callback;\n\n          (_listener$callback = listener.callback).call.apply(_listener$callback, [listener.vm].concat(args));\n        });\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return Emitter;\n}();\n\nexport default new Emitter();",null]}