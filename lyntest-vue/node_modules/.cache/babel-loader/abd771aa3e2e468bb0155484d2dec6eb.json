{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/router/index.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/router/index.js","mtime":1606834545599},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from './route';\nimport store from '../store';\nimport appConfig from '@/config/index';\nimport Util from '@/lin/util/util';\nVue.use(Router); // 判断是否需要登录访问, 配置位于 config 文件夹\n\nvar _isLoginRequired = function isLoginRequired(routeName) {\n  // 首次执行时缓存配置\n  var notLoginRoute = appConfig.notLoginRoute;\n  var notLoginMark = {}; // 构建标记对象\n\n  if (Array.isArray(notLoginRoute)) {\n    for (var i = 0; i < notLoginRoute.length; i += 1) {\n      notLoginMark[notLoginRoute[i].toString()] = true;\n    }\n  }\n\n  notLoginRoute = null; // 释放内存\n  // 重写初始化函数\n\n  _isLoginRequired = function isLoginRequired(name) {\n    if (!name) {\n      return true;\n    } // 处理 Symbol 类型\n\n\n    var target = _typeof(name) === 'symbol' ? name.description : name;\n    return !notLoginMark[target];\n  };\n\n  return _isLoginRequired(routeName);\n};\n\nvar router = new Router({\n  // mode: 'history',\n  scrollBehavior: function scrollBehavior() {\n    return {\n      y: 0\n    };\n  },\n  base: process.env.BASE_URL,\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  // 登录验证\n  if (_isLoginRequired(to.name) && !store.state.logined) {\n    next({\n      path: '/login'\n    });\n    return;\n  } // TODO: tab 模式重复点击验证\n  // 权限验证\n\n\n  if (store && store.state && store.getters) {\n    var _store$getters = store.getters,\n        permissions = _store$getters.permissions,\n        user = _store$getters.user;\n\n    if (to.path !== '/center' && !Util.hasPermission(permissions, to.meta, user)) {\n      Vue.prototype.$notify({\n        title: '无权限',\n        dangerouslyUseHTMLString: true,\n        message: '<strong class=\"my-notify\">您无此页面的权限哟</strong>'\n      });\n      next({\n        path: '/center'\n      });\n      return;\n    }\n  } // 路由发生变化重新计时\n\n\n  Vue.prototype.$_lin_jump(); // 路由发生变化修改页面title\n\n  if (to.meta.title) {\n    document.title = to.meta.title;\n  }\n\n  next();\n});\nexport default router;",{"version":3,"sources":["/Users/lyn/Desktop/lyntest/lyntest-vue/src/router/index.js"],"names":["Vue","Router","routes","store","appConfig","Util","use","isLoginRequired","routeName","notLoginRoute","notLoginMark","Array","isArray","i","length","toString","name","target","description","router","scrollBehavior","y","base","process","env","BASE_URL","beforeEach","to","from","next","state","logined","path","getters","permissions","user","hasPermission","meta","prototype","$notify","title","dangerouslyUseHTMLString","message","$_lin_jump","document"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport routes from './route'\nimport store from '../store'\nimport appConfig from '@/config/index'\nimport Util from '@/lin/util/util'\n\nVue.use(Router)\n\n// 判断是否需要登录访问, 配置位于 config 文件夹\nlet isLoginRequired = routeName => {\n  // 首次执行时缓存配置\n  let { notLoginRoute } = appConfig\n  const notLoginMark = {}\n\n  // 构建标记对象\n  if (Array.isArray(notLoginRoute)) {\n    for (let i = 0; i < notLoginRoute.length; i += 1) {\n      notLoginMark[notLoginRoute[i].toString()] = true\n    }\n  }\n\n  notLoginRoute = null // 释放内存\n\n  // 重写初始化函数\n  isLoginRequired = name => {\n    if (!name) {\n      return true\n    }\n    // 处理 Symbol 类型\n    const target = typeof name === 'symbol' ? name.description : name\n    return !notLoginMark[target]\n  }\n\n  return isLoginRequired(routeName)\n}\n\nconst router = new Router({\n  // mode: 'history',\n  scrollBehavior: () => ({\n    y: 0,\n  }),\n  base: process.env.BASE_URL,\n  routes,\n})\n\nrouter.beforeEach((to, from, next) => {\n  // 登录验证\n  if (isLoginRequired(to.name) && !store.state.logined) {\n    next({ path: '/login' })\n    return\n  }\n\n  // TODO: tab 模式重复点击验证\n\n  // 权限验证\n  if (store && store.state && store.getters) {\n    const { permissions, user } = store.getters\n    if (to.path !== '/center' && !Util.hasPermission(permissions, to.meta, user)) {\n      Vue.prototype.$notify({\n        title: '无权限',\n        dangerouslyUseHTMLString: true,\n        message: '<strong class=\"my-notify\">您无此页面的权限哟</strong>',\n      })\n      next({ path: '/center' })\n      return\n    }\n  }\n\n  // 路由发生变化重新计时\n  Vue.prototype.$_lin_jump()\n\n  // 路由发生变化修改页面title\n  if (to.meta.title) {\n    document.title = to.meta.title\n  }\n\n  next()\n})\n\nexport default router\n"]}]}