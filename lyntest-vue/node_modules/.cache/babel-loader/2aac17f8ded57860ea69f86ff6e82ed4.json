{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/track/case/case-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/track/case/case-list.vue","mtime":1607682215000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LynSearch from '@/component/lyn/lyn-search';\nimport SelectMenu from '@/component/common/select-menu';\nimport NodeTree from '@/component/common/node-tree';\nimport Project from '@/model/track/project';\nimport Node from '@/model/track/node';\nimport TestCase from '@/model/track/case';\nexport default {\n  name: 'case-list',\n  components: {\n    SelectMenu: SelectMenu,\n    NodeTree: NodeTree,\n    LynSearch: LynSearch\n  },\n  data: function data() {\n    return {\n      search: {\n        case_name: '',\n        count: 10,\n        page: 1\n      },\n      total: 0,\n      result: {},\n      projects: [],\n      currentProject: null,\n      treeNodes: [],\n      selectNodeIds: [],\n      selectParentNodes: [],\n      selectNode: {},\n      caseList: [],\n      operationType: null,\n      editDialogVisible: false,\n      caseInfo: {},\n      defaultCaseInfo: {\n        name: '',\n        type: '',\n        priority: '',\n        steps: [{\n          num: 1,\n          result: '',\n          steps: '',\n          description: ''\n        }]\n      },\n      typeList: ['功能测试', '性能测试', '接口测试', '冒烟测试', '回归测试', '其它'],\n      priorityList: [{\n        text: 'P1',\n        value: 'P1'\n      }, {\n        text: 'P2',\n        value: 'P2'\n      }, {\n        text: 'P3',\n        value: 'P3'\n      }, {\n        text: 'P4',\n        value: 'P4'\n      }],\n      reviewStatusList: [{\n        text: '未评审',\n        value: 'Prepare'\n      }, {\n        text: '通过',\n        value: 'Pass'\n      }, {\n        text: '未通过',\n        value: 'UnPass'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.pageInit();\n  },\n  methods: {\n    pageInit: function () {\n      var _pageInit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getProjects();\n\n              case 2:\n                _context.next = 4;\n                return this.getNodeTree();\n\n              case 4:\n                _context.next = 6;\n                return this.refreshTable();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function pageInit() {\n        return _pageInit.apply(this, arguments);\n      }\n\n      return pageInit;\n    }(),\n    getProjects: function () {\n      var _getProjects = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Project.getNewProject(20);\n\n              case 2:\n                res = _context2.sent;\n                this.projects = res.items;\n                this.setCurrentProject(res.items[0]);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getProjects() {\n        return _getProjects.apply(this, arguments);\n      }\n\n      return getProjects;\n    }(),\n    getNodeTree: function () {\n      var _getNodeTree = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Node.getNodeByProjectId(this.currentProject.id);\n\n              case 2:\n                this.treeNodes = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getNodeTree() {\n        return _getNodeTree.apply(this, arguments);\n      }\n\n      return getNodeTree;\n    }(),\n    changeProject: function changeProject(project) {\n      this.setCurrentProject(project);\n      this.refreshTable();\n    },\n    nodeChange: function nodeChange(nodeIds, pNodes) {\n      this.selectNodeIds = nodeIds;\n      this.selectParentNodes = pNodes;\n      this.refreshTable();\n    },\n    bachHome: function bachHome() {\n      this.selectNodeIds = [];\n      this.selectParentNodes = [];\n      this.selectNode = {};\n      this.refreshTable();\n    },\n    handleCreate: function handleCreate() {\n      this.editDialogVisible = true;\n      this.caseInfo = _objectSpread({}, this.defaultCaseInfo);\n      this.operationType = 1;\n    },\n    handleEdit: function handleEdit(row) {\n      this.editDialogVisible = true;\n      this.caseInfo = _objectSpread({}, row);\n      this.operationType = 2;\n    },\n    handleCopy: function handleCopy(row) {\n      this.editDialogVisible = true;\n      this.caseInfo = _objectSpread({}, row);\n      this.operationType = 1;\n    },\n    handleDelete: function handleDelete(id) {\n      var _this = this;\n\n      this.$confirm('确定要删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return TestCase.deleteCase(id);\n\n              case 2:\n                res = _context4.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  _this.$message.success(res.message);\n\n                  _this.refreshTable();\n                } else {\n                  _this.$message.error('删除功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })));\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.refreshTable();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.refreshTable();\n    },\n    priorityFilter: function priorityFilter(value, row) {\n      return row.priority === value;\n    },\n    getPriorityStyle: function getPriorityStyle(val) {\n      if (val === 'P1' || val === 'P2') {\n        return 'danger';\n      }\n\n      if (val === 'P3') {\n        return 'warning';\n      }\n\n      if (val === 'P4') {\n        return 'success';\n      }\n    },\n    reviewStatusFilter: function reviewStatusFilter(value, row) {\n      return row.review_status === value;\n    },\n    refreshTable: function () {\n      var _refreshTable = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.search.node_ids = this.selectNodeIds;\n                this.search.project_id = this.currentProject.id;\n                _context5.next = 4;\n                return TestCase.getCaseList(this.search);\n\n              case 4:\n                res = _context5.sent;\n                res.items.forEach(function (e) {\n                  e.steps = JSON.parse(e.steps);\n                });\n                this.caseList = res.items;\n                this.total = res.total;\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function refreshTable() {\n        return _refreshTable.apply(this, arguments);\n      }\n\n      return refreshTable;\n    }(),\n    setCurrentProject: function setCurrentProject(project) {\n      if (project) {\n        this.currentProject = project;\n      }\n\n      this.refresh();\n    },\n    refresh: function refresh() {\n      this.selectNodeIds = [];\n      this.selectParentNodes = [];\n      this.selectNode = {};\n      this.getNodeTree();\n    },\n    handleAddStep: function handleAddStep(index, data) {\n      var step = {};\n      step.num = data.num + 1;\n      step.desc = '';\n      step.result = '';\n      this.caseInfo.steps.forEach(function (s) {\n        if (s.num > data.num) {\n          s.num++;\n        }\n      });\n      this.caseInfo.steps.splice(index + 1, 0, step);\n    },\n    handleCopyStep: function handleCopyStep(index, data) {\n      var step = {};\n      step.num = data.num + 1;\n      step.desc = data.desc;\n      step.result = data.result;\n      this.caseInfo.steps.forEach(function (s) {\n        if (s.num > data.num) {\n          s.num++;\n        }\n      });\n      this.caseInfo.steps.splice(index + 1, 0, step);\n    },\n    handleDeleteStep: function handleDeleteStep(index, data) {\n      this.caseInfo.steps.splice(index, 1);\n      this.caseInfo.steps.forEach(function (step) {\n        if (step.num > data.num) {\n          step.num--;\n        }\n      });\n    },\n    saveCase: function () {\n      var _saveCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var param, nodeId, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                param = _objectSpread({}, this.caseInfo);\n                nodeId = this.selectNodeIds[0];\n                param.steps = JSON.stringify(this.caseInfo.steps);\n\n                if (!param.node_id) {\n                  param.node_id = nodeId;\n                }\n\n                param.project_id = this.currentProject.id;\n\n                if (!(this.operationType === 1)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                _context6.next = 8;\n                return TestCase.createCase(param);\n\n              case 8:\n                _context6.t0 = _context6.sent;\n                _context6.next = 14;\n                break;\n\n              case 11:\n                _context6.next = 13;\n                return TestCase.updateCase(param);\n\n              case 13:\n                _context6.t0 = _context6.sent;\n\n              case 14:\n                res = _context6.t0;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.editDialogVisible = false;\n                  this.refreshTable();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function saveCase() {\n        return _saveCase.apply(this, arguments);\n      }\n\n      return saveCase;\n    }()\n  }\n};",null]}