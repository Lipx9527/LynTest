{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/http-case-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/http-case-list.vue","mtime":1608859958693},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HttpCase from '@/model/autotest/http-case';\nimport HttpCaseEdit from '@/component/autotest/http-case-edit';\nimport Category from '@/model/autotest/category';\nexport default {\n  components: {\n    HttpCaseEdit: HttpCaseEdit\n  },\n  data: function data() {\n    return {\n      operation_type: 0,\n      search: {\n        case_name: '',\n        category: '',\n        creator_code: '',\n        page: 1,\n        count: 10\n      },\n      creator_list: [],\n      category_list: [],\n      edit_dialog_visible: false,\n      case_info: {},\n      total: null,\n      table: {\n        deleteConfirmDialogVisible: false,\n        multipleSelection: [],\n        ids: []\n      },\n      table_data: [],\n      drawer_visible: false\n    };\n  },\n  mounted: function mounted() {\n    this.getCategoryList();\n    this.getCreatorList();\n    this.searchCaseList();\n  },\n  methods: {\n    // 获取分类列表\n    getCategoryList: function () {\n      var _getCategoryList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Category.getCategoryList();\n\n              case 2:\n                res = _context.sent;\n                this.category_list = res;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCategoryList() {\n        return _getCategoryList.apply(this, arguments);\n      }\n\n      return getCategoryList;\n    }(),\n    // 获取创建人列表\n    getCreatorList: function () {\n      var _getCreatorList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return HttpCase.getCreatorList();\n\n              case 2:\n                res = _context2.sent;\n                this.creator_list = res;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCreatorList() {\n        return _getCreatorList.apply(this, arguments);\n      }\n\n      return getCreatorList;\n    }(),\n    // 搜索符合条件的所有testCase\n    searchCaseList: function () {\n      var _searchCaseList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return HttpCase.searchCaseList(this.search);\n\n              case 2:\n                res = _context3.sent;\n                this.table_data = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchCaseList() {\n        return _searchCaseList.apply(this, arguments);\n      }\n\n      return searchCaseList;\n    }(),\n    // 创建case\n    createCase: function createCase() {\n      this.case_info = _objectSpread({}, this.default_case_info);\n      this.drawer_visible = true;\n      this.operation_type = 1;\n    },\n    saveCase: function () {\n      var _saveCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return HttpCase.createCase(this.case_info);\n\n              case 2:\n                res = _context4.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.searchCaseList();\n                } else {\n                  this.$message.error(res.message);\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function saveCase() {\n        return _saveCase.apply(this, arguments);\n      }\n\n      return saveCase;\n    }(),\n    confirmDeleteCase: function confirmDeleteCase() {\n      if (this.table.multipleSelection.length > 0) {\n        this.table.deleteConfirmDialogVisible = true;\n      } else {\n        this.$message.warning('请选择至少一条case！');\n      }\n    },\n    deleteCase: function () {\n      var _deleteCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.table.ids = [];\n                this.table.multipleSelection.forEach(function (e) {\n                  _this.table.ids.push(e.id);\n                });\n                _context5.next = 4;\n                return HttpCase.deleteCase(this.table.ids);\n\n              case 4:\n                res = _context5.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.table.deleteConfirmDialogVisible = false;\n                  this.searchCaseList();\n                } else {\n                  this.$message.error(res.message);\n                }\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteCase() {\n        return _deleteCase.apply(this, arguments);\n      }\n\n      return deleteCase;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.searchCaseList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.searchCaseList();\n    },\n    // 选中的case\n    tableSelectionChange: function tableSelectionChange(value) {\n      this.table.multipleSelection = value;\n    },\n    handleEdit: function handleEdit(row) {\n      this.drawer_visible = true;\n      this.operation_type = 2;\n      this.case_info = _objectSpread({}, row);\n    },\n    handleCopy: function handleCopy(row) {\n      this.drawer_visible = true;\n      this.operation_type = 3;\n      this.case_info = _objectSpread({}, row);\n    },\n    drawerClose: function drawerClose() {\n      this.drawer_visible = false;\n      this.searchCaseList();\n    }\n  }\n};",null]}