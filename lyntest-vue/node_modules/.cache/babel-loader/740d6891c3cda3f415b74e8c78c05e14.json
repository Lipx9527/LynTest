{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/statistical/bug.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/statistical/bug.vue","mtime":1606834545553},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Bug from '@/model/statistical/bug';\nimport Manager from '@/model/statistical/manager';\nexport default {\n  data: function data() {\n    return {\n      date1: [],\n      statistical: {\n        start_date: '',\n        end_date: '',\n        statistic_type: '1',\n        product_code: ''\n      },\n      total: 0,\n      date2: [],\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1\n      },\n      pro_is_show: false,\n      chartData: {\n        columns: ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient'],\n        rows: []\n      },\n      chartSettings: {\n        labelMap: {\n          name: '产品线',\n          bug_count: 'bug个数',\n          prd_project_coefficient: '项目bug系数',\n          prd_daily_coefficient: '日常bug系数'\n        },\n        stack: {\n          name: ['prd_project_coefficient', 'prd_daily_coefficient']\n        }\n      },\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          barWidth: 20,\n          label: {\n            position: 'top'\n          }\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter: function formatter(value) {\n              return value.split('').join('\\n');\n            }\n          }\n        }\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date(); //  dateCountForMonth是用以获取上月天数的变量\n\n            var dateCountForMonth = new Date();\n            dateCountForMonth.setMonth(dateCountForMonth.getMonth());\n            dateCountForMonth.setDate(0);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * dateCountForMonth.getDate());\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近90天',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      bug_level_list: [{\n        value: 1\n      }, {\n        value: 2\n      }, {\n        value: 3\n      }, {\n        value: 4\n      }],\n      tester_list: [],\n      dev_list: [],\n      product_line_list: [],\n      dialog_visible: false,\n      active_name: 'add',\n      dialog: {\n        create_date: '',\n        bug_id: 'DEFECT-',\n        bug_level: 1,\n        tester_code: '',\n        dev_code: '',\n        bug_type: '',\n        bug_loc: '',\n        bug_scenario: ''\n      },\n      limit_num: 1,\n      // 上传excell时，同时允许上传的最大数\n      file_list: [],\n      // excel文件列表\n      edit_dialog_visible: false,\n      bug_info: {},\n      bug_coefficient: 0,\n      tableData: [],\n      bug_locList: ['前端', '后端'],\n      bug_scenarioList: ['正向业务场景', '正向边界值', 'UI显示', '异常边界值', '异常非空校验', '异常反向业务场景', '历史遗留', '需求编写不全', '新功能影响老功能']\n    };\n  },\n  mounted: function mounted() {\n    this.doStatistical();\n    this.getBugList();\n    this.getDevList();\n    this.getTesterList();\n    this.getProductLineList();\n  },\n  methods: {\n    chooseStatisticType: function chooseStatisticType(type) {\n      this.statistical.statistic_type = type;\n\n      if (type === '1') {\n        this.pro_is_show = false;\n        this.chartData.columns = ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient'];\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            prd_project_coefficient: '项目bug系数',\n            prd_daily_coefficient: '日常bug系数'\n          },\n          stack: {\n            name: ['prd_project_coefficient', 'prd_daily_coefficient']\n          }\n        };\n        this.doStatistical();\n      } else if (type === '2') {\n        this.pro_is_show = true;\n        this.chartData.rows = [];\n        this.chartData.columns = ['name', 'bug_count', 'bug_coefficient'];\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            bug_coefficient: 'bug系数'\n          }\n        };\n      }\n    },\n    getTesterList: function () {\n      var _getTesterList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Manager.getTesterList();\n\n              case 2:\n                this.tester_list = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getTesterList() {\n        return _getTesterList.apply(this, arguments);\n      }\n\n      return getTesterList;\n    }(),\n    getDevList: function () {\n      var _getDevList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Manager.getDevList();\n\n              case 2:\n                this.dev_list = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getDevList() {\n        return _getDevList.apply(this, arguments);\n      }\n\n      return getDevList;\n    }(),\n    // 获取产品线列表\n    getProductLineList: function () {\n      var _getProductLineList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Manager.getProductList();\n\n              case 2:\n                this.product_line_list = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getProductLineList() {\n        return _getProductLineList.apply(this, arguments);\n      }\n\n      return getProductLineList;\n    }(),\n    chooseDate1: function () {\n      var _chooseDate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(date) {\n        var _date;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (date === null) {\n                  this.statistical.start_date = '';\n                  this.statistical.end_date = '';\n                } else {\n                  _date = _slicedToArray(date, 2);\n                  this.statistical.start_date = _date[0];\n                  this.statistical.end_date = _date[1];\n                }\n\n                _context4.next = 3;\n                return this.doStatistical();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function chooseDate1(_x) {\n        return _chooseDate.apply(this, arguments);\n      }\n\n      return chooseDate1;\n    }(),\n    chooseDate2: function () {\n      var _chooseDate2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(date) {\n        var _date2;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.search.page = 1;\n\n                if (date === null) {\n                  this.search.start_date = '';\n                  this.search.end_date = '';\n                } else {\n                  _date2 = _slicedToArray(date, 2);\n                  this.search.start_date = _date2[0];\n                  this.search.end_date = _date2[1];\n                }\n\n                _context5.next = 4;\n                return this.getBugList();\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function chooseDate2(_x2) {\n        return _chooseDate2.apply(this, arguments);\n      }\n\n      return chooseDate2;\n    }(),\n    doStatistical: function () {\n      var _doStatistical = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Bug.bugStatistical(this.statistical);\n\n              case 2:\n                res = _context6.sent;\n\n                if (res.success) {\n                  this.chartData.rows = res.result;\n                } else {\n                  this.$message.error(res.msg);\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function doStatistical() {\n        return _doStatistical.apply(this, arguments);\n      }\n\n      return doStatistical;\n    }(),\n    // 查询bug列表\n    getBugList: function () {\n      var _getBugList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Bug.getBugList(this.search);\n\n              case 2:\n                res = _context7.sent;\n                _context7.next = 5;\n                return Bug.getBugCoefficient(this.search);\n\n              case 5:\n                this.bug_coefficient = _context7.sent;\n                this.tableData = res.items;\n                this.total = res.total;\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getBugList() {\n        return _getBugList.apply(this, arguments);\n      }\n\n      return getBugList;\n    }(),\n    // 手动新增bug\n    createNewBug: function () {\n      var _createNewBug = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Bug.createBug(this.dialog);\n\n              case 2:\n                res = _context8.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.dialog_visible = false;\n                  this.getBugList();\n                } else {\n                  this.$message.error(\"\".concat(res.message));\n                }\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function createNewBug() {\n        return _createNewBug.apply(this, arguments);\n      }\n\n      return createNewBug;\n    }(),\n    // 编辑bug\n    handleEdit: function handleEdit(row) {\n      this.edit_dialog_visible = true;\n      this.bug_info = _objectSpread({}, row);\n    },\n    modifyBug: function () {\n      var _modifyBug = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return Bug.updateBug(this.bug_info);\n\n              case 2:\n                res = _context9.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.edit_dialog_visible = false;\n                  this.getBugList();\n                } else {\n                  this.$message.error('修改bug功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function modifyBug() {\n        return _modifyBug.apply(this, arguments);\n      }\n\n      return modifyBug;\n    }(),\n    deleteBug: function () {\n      var _deleteBug = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return Bug.deleteBug(id);\n\n              case 2:\n                res = _context10.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.getBugList();\n                } else {\n                  this.$message.error('删除bug功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function deleteBug(_x3) {\n        return _deleteBug.apply(this, arguments);\n      }\n\n      return deleteBug;\n    }(),\n    // 文件超出个数限制时的钩子\n    exceedFile: function exceedFile(files, fileList) {\n      this.$message.warning(\"\\u53EA\\u80FD\\u9009\\u62E9 \".concat(this.limit_num, \" \\u4E2A\\u6587\\u4EF6\\uFF0C\\u5F53\\u524D\\u5171\\u9009\\u62E9\\u4E86 \").concat(files.length + fileList.length, \" \\u4E2A\"));\n    },\n    // 文件状态改变时的钩子\n    fileChange: function fileChange(file) {\n      this.file_list.push(file.raw);\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile: function beforeUploadFile(file) {\n      var extension = file.name.substring(file.name.lastIndexOf('.') + 1);\n      var size = file.size / 1024 / 1024;\n\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件');\n      }\n\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M');\n      }\n    },\n    deleteFile: function deleteFile(file) {\n      this.file_list.pop(file);\n    },\n    uploadFile: function uploadFile() {\n      var _this = this;\n\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件');\n      } else {\n        var form = new FormData();\n        form.append('file', this.file_list[0]);\n        this.$axios({\n          method: 'post',\n          url: '/statistical/bug/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(function (res) {\n          if (res.success === true) {\n            _this.file_list = [];\n\n            _this.$message.success(res.result);\n\n            _this.dialog_visible = false;\n\n            _this.getBugList();\n          } else if (res.success === false) {\n            _this.$message.error(res.msg);\n          }\n        });\n      }\n    },\n    exportExcel: function exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/bug/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(function (res) {\n        var link = document.createElement('a');\n        link.style.display = 'none';\n        link.href = URL.createObjectURL(new Blob([res]));\n        link.setAttribute('download', 'bug信息.xlsx');\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.getBugList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.getBugList();\n    }\n  }\n};",{"version":3,"sources":["bug.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-tabs type=\"border-card\">\n    <el-tab-pane label=\"bug统计\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"7\">\n          <el-date-picker v-model=\"date1\" type=\"daterange\" align=\"right\" unlink-panels\n                          range-separator=\"至\"\n                          start-placeholder=\"开始日期\"\n                          end-placeholder=\"结束日期\"\n                          :picker-options=\"pickerOptions\"\n                          value-format=\"yyyy-MM-dd\"\n                          @change=\"chooseDate1\"\n                          style=\"width: 100%\">\n          </el-date-picker>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-radio-group v-model=\"statistical.statistic_type\" @change=\"chooseStatisticType\" style=\"width: 100%\">\n            <el-radio-button label=\"1\">产品线</el-radio-button>\n            <el-radio-button label=\"2\">开发</el-radio-button>\n          </el-radio-group>\n        </el-col>\n        <el-col :span=\"3\">\n          <el-select v-show=\"pro_is_show\" v-model=\"statistical.product_code\" placeholder=\"产品线\" style=\"width: 180px;transform: translateY(2px);\" @change=\"doStatistical\">\n            <el-option v-for=\"item in product_line_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"/>\n          </el-select>\n        </el-col>\n      </el-row>\n      <br/>\n      <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\" width=\"800px\" height=\"500px\"></ve-histogram>\n    </el-tab-pane>\n    <el-tab-pane label=\"数据管理\">\n      <el-card>\n        <el-row>\n          <el-date-picker v-model=\"date2\" type=\"daterange\" align=\"right\" unlink-panels\n                          range-separator=\"至\"\n                          start-placeholder=\"开始日期\"\n                          end-placeholder=\"结束日期\"\n                          :picker-options=\"pickerOptions\"\n                          value-format=\"yyyy-MM-dd\"\n                          @change=\"chooseDate2\">\n          </el-date-picker>\n          <el-select  v-model=\"search.tester_code\" clearable filterable placeholder=\"提出人\" @change=\"getBugList\" style=\"width: 120px\">\n            <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n              <span style=\"float: left\">{{ item.tester_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_code }}</span>\n            </el-option>\n          </el-select>\n          <el-select v-model=\"search.dev_code\" clearable filterable placeholder=\"开发\" @change=\"getBugList\" style=\"width: 120px\">\n            <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n              <span style=\"float: left\">{{ item.dev_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{item.dev_code}}</span>\n            </el-option>\n          </el-select>\n          <el-select v-model=\"search.product_code\" clearable placeholder=\"产品线\" @change=\"getBugList\" style=\"width: 150px\">\n            <el-option v-for=\"item in product_line_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"></el-option>\n          </el-select>\n        </el-row>\n        <br/>\n        <el-row>\n          <span style=\"font-size: 14px;color: #666666\">当前查询结果缺陷系数为: {{bug_coefficient}}，共计 {{ total }} 条bug</span>\n        </el-row>\n      </el-card>\n      <br/>\n      <el-card>\n        <el-row>\n          <el-button type=\"primary\" @click=\"dialog_visible = true\" size=\"small\">新 增</el-button>\n          <el-button type=\"primary\" @click=\"exportExcel\" size=\"small\">导出Excel</el-button>\n          <el-pagination background\n                         @size-change=\"handleSizeChange\"\n                         @current-change=\"handleCurrentChange\"\n                         :current-page=\"search.page\"\n                         :page-size=\"search.count\"\n                         :page-sizes=\"[10, 20, 50, 100]\"\n                         :total=\"total\"\n                         layout=\"sizes, prev, pager, next\" style=\"float: right\"/>\n        </el-row>\n        <el-dialog :visible.sync=\"dialog_visible\" width=\"500px\">\n          <el-tabs v-model=\"active_name\" type=\"border-card\">\n            <el-tab-pane label=\"手动添加\" name=\"add\">\n              <el-form :model=\"dialog\" size=\"small\" label-width=\"100px\">\n                <el-form-item label=\"选择日期\">\n                  <el-date-picker v-model=\"dialog.create_date\" type=\"date\" placeholder=\"选择日期\" style=\"width: 200px\" value-format=\"yyyy-MM-dd\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"缺陷编号\">\n                  <el-input v-model=\"dialog.bug_id\" style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"缺陷等级\">\n                  <el-radio-group v-model=\"dialog.bug_level\">\n                    <el-radio-button v-for=\"item in bug_level_list\" :key=\"item.value\" :label=\"item.value\">{{item.value}}</el-radio-button>\n                  </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"提出人\">\n                  <el-select v-model=\"dialog.tester_code\" clearable filterable placeholder=\"提出人\" style=\"width: 200px\">\n                    <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n                      <span style=\"float: left\">{{ item.tester_name }}</span>\n                      <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_code }}</span>\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"开发\">\n                  <el-select v-model=\"dialog.dev_code\" clearable filterable placeholder=\"开发\" style=\"width: 200px\">\n                    <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n                      <span style=\"float: left\">{{ item.dev_name }}</span>\n                      <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.dev_code }}</span>\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"bug分类\">\n                  <el-select v-model=\"dialog.bug_type\" style=\"width: 200px\">\n                    <el-option v-for=\"item in ['日常','项目']\" :key=\"item\" :label=\"item\" :value=\"item\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"bug端\">\n                  <el-select v-model=\"dialog.bug_loc\" style=\"width: 200px\">\n                    <el-option v-for=\"item in this.bug_locList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"bug场景\">\n                  <el-select v-model=\"dialog.bug_scenario\" style=\"width: 200px\">\n                    <el-option v-for=\"item in this.bug_scenarioList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n                <br/>\n                <el-row>\n                  <el-col :offset=\"12\">\n                    <el-button type=\"primary\" @click=\"createNewBug\">保 存</el-button>\n                    <el-button @click=\"dialog_visible = false\">取 消</el-button>\n                  </el-col>\n                </el-row>\n              </el-form>\n            </el-tab-pane>\n            <el-tab-pane label=\"导入excel\" name=\"excel\">\n              <el-upload drag\n                         :limit=limit_num\n                         :auto-upload=\"false\"\n                         accept=\".xlsx\"\n                         action=\"\"\n                         :before-upload=\"beforeUploadFile\"\n                         :on-remove=\"deleteFile\"\n                         :on-change=\"fileChange\"\n                         :on-exceed=\"exceedFile\"\n                         :file-list=\"file_list\">\n                <i class=\"el-icon-upload\"></i>\n                <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传xlsx文件，且不超过10M</div>\n              </el-upload>\n              <br/>\n              <el-button size=\"small\" type=\"primary\" @click=\"uploadFile\">立即上传</el-button>\n              <el-button size=\"small\" @click=\"dialog_visible = false, file_list=[]\">取消</el-button>\n            </el-tab-pane>\n          </el-tabs>\n        </el-dialog>\n        <el-table :data=\"tableData\">\n          <el-table-column prop=\"create_date\" width=\"120\" label=\"时间\" sortable></el-table-column>\n          <el-table-column prop=\"bug_id\" label=\"缺陷编号\" width=\"150\" sortable></el-table-column>\n          <el-table-column prop=\"bug_level\" label=\"缺陷等级\" width=\"100\" sortable></el-table-column>\n          <el-table-column prop=\"tester_name\" label=\"提出人\" width=\"120\" sortable></el-table-column>\n          <el-table-column prop=\"dev_name\" label=\"开发负责人\" width=\"120\" sortable></el-table-column>\n          <el-table-column prop=\"product_line\" label=\"产品线\"  width=\"150\" sortable></el-table-column>\n          <el-table-column prop=\"bug_type\" label=\"类型\" sortable></el-table-column>\n          <el-table-column prop=\"bug_loc\" label=\"BUG端\"  width=\"100\" sortable></el-table-column>\n          <el-table-column prop=\"bug_scenario\" label=\"BUG场景\" width=\"150\" sortable></el-table-column>\n          <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n              <el-button size=\"mini\" v-permission=\"{ permission: 'Bug删除', type: 'disabled'}\" type=\"danger\" @click=\"deleteBug(scope.row.id)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <el-dialog :visible.sync=\"edit_dialog_visible\" width=\"500px\">\n          <el-form :model=\"bug_info\" label-width=\"100px\">\n            <el-form-item label=\"选择日期\">\n              <el-date-picker v-model=\"bug_info.create_date\" type=\"date\" placeholder=\"选择日期\" style=\"width: 200px\" value-format=\"yyyy-MM-dd\"></el-date-picker>\n            </el-form-item>\n            <el-form-item label=\"缺陷编号\">\n              <el-input v-model=\"bug_info.bug_id\" style=\"width: 200px\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"缺陷等级\">\n              <el-radio-group v-model=\"bug_info.bug_level\">\n                <el-radio-button v-for=\"item in bug_level_list\" :key=\"item.value\" :label=\"item.value\">{{item.value}}</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"提出人\">\n              <el-select v-model=\"bug_info.tester_code\" clearable filterable placeholder=\"提出人\" style=\"width: 200px\">\n                <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n                  <span style=\"float: left\">{{ item.tester_code }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_name }}</span>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"开发\">\n              <el-select v-model=\"bug_info.dev_code\" clearable filterable placeholder=\"开发\" style=\"width: 200px\">\n                <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n                  <span style=\"float: left\">{{ item.dev_name }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.dev_code }}</span>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"bug分类\">\n              <el-select v-model=\"bug_info.bug_type\" style=\"width: 200px\">\n                <el-option v-for=\"item in ['日常','项目']\" :key=\"item\" :label=\"item\" :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"bug端\">\n              <el-select v-model=\"bug_info.bug_loc\" style=\"width: 200px\">\n                <el-option v-for=\"item in this.bug_locList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"bug场景\">\n              <el-select v-model=\"bug_info.bug_scenario\" style=\"width: 200px\">\n                <el-option v-for=\"item in this.bug_scenarioList\" :key=\"item\" :label=\"item\" :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <br/>\n            <el-row>\n              <el-col :offset=\"12\">\n                <el-button type=\"primary\" @click=\"modifyBug\">修改</el-button>\n                <el-button @click=\"edit_dialog_visible = false\">取 消</el-button>\n              </el-col>\n            </el-row>\n          </el-form>\n        </el-dialog>\n      </el-card>\n    </el-tab-pane>\n  </el-tabs>\n</template>\n\n<script>\nimport Bug from '@/model/statistical/bug'\nimport Manager from '@/model/statistical/manager'\n\nexport default {\n  data() {\n    return {\n      date1: [],\n      statistical: {\n        start_date: '',\n        end_date: '',\n        statistic_type: '1',\n        product_code: '',\n      },\n      total: 0,\n      date2: [],\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1,\n      },\n      pro_is_show: false,\n      chartData: {\n        columns: ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient'],\n        rows: []\n      },\n      chartSettings: {\n        labelMap: {\n          name: '产品线',\n          bug_count: 'bug个数',\n          prd_project_coefficient: '项目bug系数',\n          prd_daily_coefficient: '日常bug系数'\n        },\n        stack: { name: ['prd_project_coefficient', 'prd_daily_coefficient'] },\n      },\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          barWidth: 20,\n          label: {\n            position: 'top'\n          }\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter(value) {\n              return value.split('').join('\\n')\n            }\n          },\n        }\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            //  dateCountForMonth是用以获取上月天数的变量\n            const dateCountForMonth = new Date()\n            dateCountForMonth.setMonth(dateCountForMonth.getMonth())\n            dateCountForMonth.setDate(0)\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * dateCountForMonth.getDate())\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      bug_level_list: [{ value: 1 }, { value: 2 }, { value: 3 }, { value: 4 }],\n      tester_list: [],\n      dev_list: [],\n      product_line_list: [],\n      dialog_visible: false,\n      active_name: 'add',\n      dialog: {\n        create_date: '',\n        bug_id: 'DEFECT-',\n        bug_level: 1,\n        tester_code: '',\n        dev_code: '',\n        bug_type: '',\n        bug_loc: '',\n        bug_scenario: '',\n      },\n      limit_num: 1, // 上传excell时，同时允许上传的最大数\n      file_list: [], // excel文件列表\n      edit_dialog_visible: false,\n      bug_info: {},\n      bug_coefficient: 0,\n      tableData: [],\n      bug_locList: ['前端', '后端'],\n      bug_scenarioList: ['正向业务场景', '正向边界值', 'UI显示', '异常边界值', '异常非空校验',\n        '异常反向业务场景', '历史遗留', '需求编写不全', '新功能影响老功能'],\n    }\n  },\n  mounted() {\n    this.doStatistical()\n    this.getBugList()\n    this.getDevList()\n    this.getTesterList()\n    this.getProductLineList()\n  },\n  methods: {\n    chooseStatisticType(type) {\n      this.statistical.statistic_type = type\n      if (type === '1') {\n        this.pro_is_show = false\n        this.chartData.columns = ['name', 'bug_count', 'prd_project_coefficient', 'prd_daily_coefficient']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            prd_project_coefficient: '项目bug系数',\n            prd_daily_coefficient: '日常bug系数'\n          },\n          stack: { name: ['prd_project_coefficient', 'prd_daily_coefficient'] },\n        }\n        this.doStatistical()\n      } else if (type === '2') {\n        this.pro_is_show = true\n        this.chartData.rows = []\n        this.chartData.columns = ['name', 'bug_count', 'bug_coefficient']\n        this.chartSettings = {\n          labelMap: {\n            name: '产品线',\n            bug_count: 'bug个数',\n            bug_coefficient: 'bug系数',\n          },\n        }\n      }\n    },\n    async getTesterList() {\n      this.tester_list = await Manager.getTesterList()\n    },\n    async getDevList() {\n      this.dev_list = await Manager.getDevList()\n    },\n    // 获取产品线列表\n    async getProductLineList() {\n      this.product_line_list = await Manager.getProductList()\n    },\n    async chooseDate1(date) {\n      if (date === null) {\n        this.statistical.start_date = ''\n        this.statistical.end_date = ''\n      } else {\n        [this.statistical.start_date, this.statistical.end_date] = date\n      }\n      await this.doStatistical()\n    },\n    async chooseDate2(date) {\n      this.search.page = 1\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      await this.getBugList()\n    },\n    async doStatistical() {\n      const res = await Bug.bugStatistical(this.statistical)\n      if (res.success) {\n        this.chartData.rows = res.result\n      } else {\n        this.$message.error(res.msg)\n      }\n    },\n    // 查询bug列表\n    async getBugList() {\n      const res = await Bug.getBugList(this.search)\n      this.bug_coefficient = await Bug.getBugCoefficient(this.search)\n      this.tableData = res.items\n      this.total = res.total\n    },\n    // 手动新增bug\n    async createNewBug() {\n      const res = await Bug.createBug(this.dialog)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.dialog_visible = false\n        this.getBugList()\n      } else {\n        this.$message.error(`${res.message}`)\n      }\n    },\n    // 编辑bug\n    handleEdit(row) {\n      this.edit_dialog_visible = true\n      this.bug_info = { ...row }\n    },\n    async modifyBug() {\n      const res = await Bug.updateBug(this.bug_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.edit_dialog_visible = false\n        this.getBugList()\n      } else {\n        this.$message.error('修改bug功能异常')\n      }\n    },\n    async deleteBug(id) {\n      const res = await Bug.deleteBug(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.getBugList()\n      } else {\n        this.$message.error('删除bug功能异常')\n      }\n    },\n    // 文件超出个数限制时的钩子\n    exceedFile(files, fileList) {\n      this.$message.warning(`只能选择 ${this.limit_num} 个文件，当前共选择了 ${files.length + fileList.length} 个`)\n    },\n    // 文件状态改变时的钩子\n    fileChange(file) {\n      this.file_list.push(file.raw)\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile(file) {\n      const extension = file.name.substring(file.name.lastIndexOf('.') + 1)\n      const size = file.size / 1024 / 1024\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件')\n      }\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M')\n      }\n    },\n    deleteFile(file) {\n      this.file_list.pop(file)\n    },\n    uploadFile() {\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件')\n      } else {\n        const form = new FormData()\n        form.append('file', this.file_list[0])\n        this.$axios({\n          method: 'post',\n          url: '/statistical/bug/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(\n          res => {\n            if (res.success === true) {\n              this.file_list = []\n              this.$message.success(res.result)\n              this.dialog_visible = false\n              this.getBugList()\n            } else if (res.success === false) {\n              this.$message.error(res.msg)\n            }\n          }\n        )\n      }\n    },\n    exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/bug/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(\n        res => {\n          const link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = URL.createObjectURL(new Blob([res]))\n          link.setAttribute('download', 'bug信息.xlsx')\n          document.body.appendChild(link)\n          link.click()\n          URL.revokeObjectURL(link.href)\n          document.body.removeChild(link)\n        }\n      )\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.getBugList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.getBugList()\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/view/statistical"}]}