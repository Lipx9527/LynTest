{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/admin/group/group-permission.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/admin/group/group-permission.vue","mtime":1606834545537},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Admin from '@/lin/model/admin';\nexport default {\n  props: ['id', 'title'],\n  data: function data() {\n    return {\n      allPermissions: {},\n      // 所有分组权限\n      allAuthIds: [],\n      // permissions: [], // 拥有的分组权限\n      permission_module_name: [],\n      // 权限组 module name\n      permission_module_ids: [],\n      // 权限组 集合 id\n      halfPermissions: [],\n      // 该分类下的权限没有全选中\n      cacheFlag: true,\n      loading: false\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true;\n              _context.next = 4;\n              return this.getGroupPermissions();\n\n            case 4:\n              this.loading = false;\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false;\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 7]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    // 获取分组权限\n    getGroupPermissions: function () {\n      var _getGroupPermissions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var res, temp, cache;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Admin.getAllPermissions();\n\n              case 2:\n                this.allPermissions = _context2.sent;\n\n                if (!this.id) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 6;\n                return Admin.getOneGroup(this.id);\n\n              case 6:\n                res = _context2.sent;\n                temp = [];\n                cache = {};\n                res.permissions.forEach(function (v) {\n                  _this.permission_module_ids.push(v.id);\n\n                  temp.push(v.module); // 每个module拥有权限个数\n\n                  if (!cache[v.module]) {\n                    cache[v.module] = 1;\n                  } else {\n                    cache[v.module]++;\n                  }\n                });\n                temp = Array.from(new Set(temp)); // 半选\n\n                temp.forEach(function (item) {\n                  if (_this.allPermissions[item].length !== cache[item]) {\n                    _this.halfPermissions.push(item);\n                  }\n                });\n                this.permission_module_name = Array.from(new Set(temp));\n\n              case 13:\n                this.$emit('getCacheAuthIds', this.permission_module_ids.slice());\n                this.$emit('updatePermissions', this.permission_module_ids);\n                this.$emit('updateAllPermissions', this.allPermissions);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getGroupPermissions() {\n        return _getGroupPermissions.apply(this, arguments);\n      }\n\n      return getGroupPermissions;\n    }(),\n    // 批量选中\n    moduleCheck: function moduleCheck(checked, ids, moduleName) {\n      var _ids = ids.map(function (item) {\n        return item.id;\n      });\n\n      if (checked) {\n        this.permission_module_ids = Array.from(new Set(this.permission_module_ids.concat(_ids)));\n        this.permission_module_name.push(moduleName);\n        this.halfPermissions = this.halfPermissions.filter(function (v) {\n          return v !== moduleName;\n        });\n      } else {\n        this.permission_module_ids = this.permission_module_ids.filter(function (v) {\n          return !_ids.includes(v);\n        });\n        this.permission_module_name = this.permission_module_name.filter(function (v) {\n          return v !== moduleName;\n        });\n      }\n\n      this.$emit('updatePermissions', this.permission_module_ids);\n    },\n    // 单选\n    singleCheck: function singleCheck(id, permission, moduleName) {\n      var _this2 = this;\n\n      var _ids = permission.map(function (item) {\n        return item.id;\n      });\n\n      var count = 0;\n      var index = this.permission_module_ids.indexOf(id);\n\n      if (index === -1) {\n        this.permission_module_ids.push(id);\n      } else {\n        this.permission_module_ids.splice(index, 1);\n      }\n\n      _ids.forEach(function (item) {\n        if (_this2.permission_module_ids.indexOf(item) > -1) {\n          count++;\n        } // 全选状态\n\n\n        if (_ids.length === count) {\n          _this2.permission_module_name.push(moduleName);\n\n          _this2.halfPermissions = _this2.halfPermissions.filter(function (v) {\n            return v !== moduleName;\n          });\n        } else if (count === 0) {\n          // 未选中状态\n          _this2.permission_module_name = _this2.permission_module_name.filter(function (v) {\n            return v !== moduleName;\n          });\n          _this2.halfPermissions = _this2.halfPermissions.filter(function (v) {\n            return v !== moduleName;\n          });\n        } else {\n          // 半选状态\n          _this2.permission_module_name = _this2.permission_module_name.filter(function (v) {\n            return v !== moduleName;\n          });\n\n          _this2.halfPermissions.push(moduleName);\n        }\n      });\n\n      this.$emit('updatePermissions', this.permission_module_ids);\n    }\n  }\n};",null]}