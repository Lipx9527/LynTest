{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/data-platform/config/uums-config.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/data-platform/config/uums-config.vue","mtime":1606834545558},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Uums from '@/model/dpf/uums';\nexport default {\n  data: function data() {\n    return {\n      dialogVisible: false,\n      editType: null,\n      // 1.新增 2.编辑\n      tableColumn: [{\n        prop: 'code',\n        label: '工号',\n        width: 80\n      }, {\n        prop: 'tokenuums',\n        label: 'tokenuums值'\n      }, {\n        prop: 'tgc',\n        label: 'tgc值'\n      }, {\n        prop: 'u',\n        label: 'u值'\n      }],\n      courierList: [],\n      operate: [{\n        name: '编辑',\n        func: 'handleEdit',\n        type: 'primary'\n      }, {\n        name: '删除',\n        func: 'handleDelete',\n        type: 'danger',\n        permission: '删除图书'\n      }],\n      courierInfo: {\n        code: null,\n        tokenuums: null,\n        tgc: null,\n        u: null\n      }\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getAllCourier();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    handleCreate: function handleCreate() {\n      this.dialogVisible = true;\n      this.editType = 1;\n    },\n    handleEdit: function handleEdit(val) {\n      this.dialogVisible = true;\n      this.editType = 2;\n      this.courierInfo = _objectSpread({}, val.row);\n    },\n    handleSave: function () {\n      var _handleSave = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.editType === 1)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 3;\n                return Uums.createInfo(this.courierInfo);\n\n              case 3:\n                res = _context2.sent;\n                _context2.next = 10;\n                break;\n\n              case 6:\n                if (!(this.editType === 2)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 9;\n                return Uums.editInfo(this.courierInfo.code, this.courierInfo);\n\n              case 9:\n                res = _context2.sent;\n\n              case 10:\n                console.log(res);\n                console.log(res.code);\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.getAllCourier();\n                  this.$message.success(\"\".concat(res.message));\n                  this.dialogVisible = false;\n                }\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleSave() {\n        return _handleSave.apply(this, arguments);\n      }\n\n      return handleSave;\n    }(),\n    handleDelete: function handleDelete(val) {\n      var _this = this;\n\n      this.$confirm('此操作将永久删除该员工信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Uums.deleteInfo(val.row.code);\n\n              case 2:\n                res = _context3.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  _this.getAllCourier();\n\n                  _this.$message.success(\"\".concat(res.message));\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    getAllCourier: function () {\n      var _getAllCourier = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var courierInfos;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Uums.getUumsInfoList();\n\n              case 2:\n                courierInfos = _context4.sent;\n                this.courierList = courierInfos;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAllCourier() {\n        return _getAllCourier.apply(this, arguments);\n      }\n\n      return getAllCourier;\n    }()\n  }\n};",{"version":3,"sources":["uums-config.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header\"><div class=\"title\">UUMS登录信息</div></div>\n    <el-button type=\"primary\" @click=\"handleCreate\">新增</el-button>\n    <br/>\n    <br/>\n    <lin-table\n      :tableColumn=\"tableColumn\"\n      :tableData=\"courierList\"\n      :operate=\"operate\"\n      @handleEdit=\"handleEdit\"\n      @handleDelete=\"handleDelete\"\n      stripe\n      ></lin-table>\n    <el-dialog\n      :visible.sync=\"dialogVisible\"\n      :title=\"editType === 1 ? '新增' : '修改'\"\n      @close=\"resetForm('courierInfo')\"\n    >\n      <el-form :model=\"courierInfo\" label-width=\"80px\" ref=\"courierInfo\">\n        <el-form-item label=\"工号\" prop=\"code\">\n          <el-input v-model=\"courierInfo.code\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"TOKEN\" prop=\"tokenuums\">\n          <el-input type=\"textarea\" :rows=\"2\" placeholder=\"请输入TOKENUUMS值\" v-model=\"courierInfo.tokenuums\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"TGC\" prop=\"tgc\">\n          <el-input type=\"textarea\" :rows=\"10\" placeholder=\"请输入TGC值\" v-model=\"courierInfo.tgc\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"U\" prop=\"u\">\n          <el-input type=\"textarea\" :rows=\"1\" placeholder=\"请输入U值\" v-model=\"courierInfo.u\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSave\">保存</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Uums from '@/model/dpf/uums'\n\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      editType: null, // 1.新增 2.编辑\n      tableColumn: [{\n        prop: 'code',\n        label: '工号',\n        width: 80,\n      }, {\n        prop: 'tokenuums',\n        label: 'tokenuums值',\n      }, {\n        prop: 'tgc',\n        label: 'tgc值'\n      }, {\n        prop: 'u',\n        label: 'u值'\n      }],\n      courierList: [],\n      operate: [\n        { name: '编辑', func: 'handleEdit', type: 'primary' },\n        {\n          name: '删除',\n          func: 'handleDelete',\n          type: 'danger',\n          permission: '删除图书',\n        }],\n      courierInfo: {\n        code: null,\n        tokenuums: null,\n        tgc: null,\n        u: null,\n      }\n\n    }\n  },\n  async created() {\n    this.getAllCourier()\n  },\n  methods: {\n    handleCreate() {\n      this.dialogVisible = true\n      this.editType = 1\n    },\n    handleEdit(val) {\n      this.dialogVisible = true\n      this.editType = 2\n      this.courierInfo = { ...val.row }\n    },\n    async handleSave() {\n      let res\n      if (this.editType === 1) {\n        res = await Uums.createInfo(this.courierInfo)\n      } else if (this.editType === 2) {\n        res = await Uums.editInfo(this.courierInfo.code, this.courierInfo)\n      }\n      console.log(res)\n      console.log(res.code)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.getAllCourier()\n        this.$message.success(`${res.message}`)\n        this.dialogVisible = false\n      }\n    },\n    handleDelete(val) {\n      this.$confirm('此操作将永久删除该员工信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await Uums.deleteInfo(val.row.code)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.getAllCourier()\n          this.$message.success(`${res.message}`)\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async getAllCourier() {\n      const courierInfos = await Uums.getUumsInfoList()\n      this.courierList = courierInfos\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n//noinspection CssUnknownTarget\n@import \"@/static/css/common.scss\";\n</style>\n"],"sourceRoot":"src/view/data-platform/config"}]}