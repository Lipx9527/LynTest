{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/collection-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/collection-detail.vue","mtime":1608859958691},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LynCron from '@/component/lyn/lyn-cron';\nimport Collection from '@/model/autotest/collection';\nimport HttpCase from '@/model/autotest/http-case';\nimport CollectionReport from '@/model/autotest/collection-report';\nimport Category from '@/model/autotest/category';\nimport HttpCaseEdit from '@/component/autotest/http-case-edit';\nexport default {\n  components: {\n    LynCron: LynCron,\n    HttpCaseEdit: HttpCaseEdit\n  },\n  data: function data() {\n    return {\n      execute_button_loading: false,\n      collection_id: null,\n      current_pocket_id: null,\n      collection_info: {},\n      push_type_list: [{\n        label: 1,\n        value: '不推送'\n      }, {\n        label: 2,\n        value: '失败时推送'\n      }, {\n        label: 3,\n        value: '总是推送'\n      }],\n      push_list_visible: false,\n      collection_info_dialog_visible: false,\n      config_dialog_visible: false,\n      pocket_dialog_visible: false,\n      timing_dialog_visible: false,\n      drawer_visible: false,\n      pocket_operation_type: 0,\n      search: {\n        count: 10,\n        page: 1,\n        case_name: '',\n        category: '',\n        creator_code: ''\n      },\n      total: 0,\n      creator_list: [],\n      category_list: [],\n      case_list: [],\n      case_info: {},\n      pocket_list: [],\n      // 默认展开的pocketId\n      default_expanded_key: [],\n      pocket_info: {\n        collection_id: null,\n        pocket_name: ''\n      },\n      // 当前选中pocket内，所有case的id的列表\n      current_choose_case_id_list: [],\n      tester_list: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getCategoryList();\n    this.getCreatorList();\n    this.pageInit();\n  },\n  watch: {\n    $route: function $route() {\n      this.pageInit();\n    }\n  },\n  methods: {\n    // 获取分类列表\n    getCategoryList: function () {\n      var _getCategoryList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Category.getCategoryList();\n\n              case 2:\n                res = _context.sent;\n                this.category_list = res;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCategoryList() {\n        return _getCategoryList.apply(this, arguments);\n      }\n\n      return getCategoryList;\n    }(),\n    // 获取创建人列表\n    getCreatorList: function () {\n      var _getCreatorList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return HttpCase.getCreatorList();\n\n              case 2:\n                res = _context2.sent;\n                this.creator_list = res;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCreatorList() {\n        return _getCreatorList.apply(this, arguments);\n      }\n\n      return getCreatorList;\n    }(),\n    pageInit: function () {\n      var _pageInit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.collection_id = this.$route.params.id;\n                this.getCollectionDetail();\n                _context3.next = 4;\n                return this.getPocketList();\n\n              case 4:\n                _context3.next = 6;\n                return this.pocketDefaultExpanded();\n\n              case 6:\n                _context3.next = 8;\n                return this.setPocketCaseIdList();\n\n              case 8:\n                _context3.next = 10;\n                return this.refreshTableInfo();\n\n              case 10:\n                _context3.next = 12;\n                return this.getPushList();\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function pageInit() {\n        return _pageInit.apply(this, arguments);\n      }\n\n      return pageInit;\n    }(),\n    // 获取推送人列表（测试人员）\n    getPushList: function () {\n      var _getPushList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return HttpCase.getCreatorList();\n\n              case 2:\n                this.tester_list = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getPushList() {\n        return _getPushList.apply(this, arguments);\n      }\n\n      return getPushList;\n    }(),\n    // 获取集合基础信息详情（不包含case信息）\n    getCollectionDetail: function () {\n      var _getCollectionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Collection.getCollectionDetail(this.collection_id);\n\n              case 2:\n                this.collection_info = _context5.sent;\n                this.push_list_visible = this.collection_info.push_type === 1;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getCollectionDetail() {\n        return _getCollectionDetail.apply(this, arguments);\n      }\n\n      return getCollectionDetail;\n    }(),\n    // 获取pocket列表\n    getPocketList: function () {\n      var _getPocketList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Collection.getPocketInfo(this.collection_id);\n\n              case 2:\n                this.pocket_list = _context6.sent;\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getPocketList() {\n        return _getPocketList.apply(this, arguments);\n      }\n\n      return getPocketList;\n    }(),\n    // 初始化时，默认展开第一个pocket\n    pocketDefaultExpanded: function pocketDefaultExpanded() {\n      this.current_pocket_id = this.pocket_list[0].id;\n      this.default_expanded_key = [this.pocket_list[0].id];\n    },\n    // 获取当前选中pocket的caseList的id集合\n    setPocketCaseIdList: function () {\n      var _setPocketCaseIdList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.current_choose_case_id_list = [];\n                this.pocket_list.forEach(function (pocket) {\n                  if (pocket.id !== _this.current_pocket_id) {\n                    return false;\n                  }\n\n                  pocket.children.forEach(function (e) {\n                    _this.current_choose_case_id_list.push(e.business_id);\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setPocketCaseIdList() {\n        return _setPocketCaseIdList.apply(this, arguments);\n      }\n\n      return setPocketCaseIdList;\n    }(),\n    // 刷新table的数据与选中状态\n    refreshTableInfo: function () {\n      var _refreshTableInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.searchCaseList();\n\n              case 2:\n                _context8.next = 4;\n                return this.refreshCaseChooseType();\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function refreshTableInfo() {\n        return _refreshTableInfo.apply(this, arguments);\n      }\n\n      return refreshTableInfo;\n    }(),\n    // 获取caseList\n    searchCaseList: function () {\n      var _searchCaseList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return HttpCase.searchCaseList(this.search);\n\n              case 2:\n                res = _context9.sent;\n                this.case_list = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function searchCaseList() {\n        return _searchCaseList.apply(this, arguments);\n      }\n\n      return searchCaseList;\n    }(),\n    // 对caseList中的row的选中状态进行渲染\n    refreshCaseChooseType: function () {\n      var _refreshCaseChooseType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.case_list.forEach(function (row) {\n                  if (_this2.current_choose_case_id_list.indexOf(row.id) > -1) {\n                    _this2.$refs.multipleTable.toggleRowSelection(row, true);\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function refreshCaseChooseType() {\n        return _refreshCaseChooseType.apply(this, arguments);\n      }\n\n      return refreshCaseChooseType;\n    }(),\n    handleEdit: function handleEdit(row) {\n      this.drawer_visible = true;\n      this.case_info = _objectSpread({}, row);\n    },\n    updateCollection: function () {\n      var _updateCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return Collection.updateCollection(this.collection_info);\n\n              case 2:\n                res = _context11.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.collection_info_dialog_visible = false;\n                  this.config_dialog_visible = false;\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function updateCollection() {\n        return _updateCollection.apply(this, arguments);\n      }\n\n      return updateCollection;\n    }(),\n    closeCollectionEdit: function closeCollectionEdit() {\n      this.collection_info_dialog_visible = false;\n      this.$refs.collection_info.resetFields();\n    },\n    pushListChange: function pushListChange(val) {\n      this.push_list_visible = val === 1;\n    },\n    handleNodeClick: function () {\n      var _handleNodeClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(data, node) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!(node.level === 2)) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\");\n\n              case 2:\n                id = node.level === 1 ? data.id : node.parent.data.id;\n                this.current_pocket_id = id;\n                this.default_expanded_key = [id];\n                this.setPocketCaseIdList();\n                this.getPocketList();\n                _context12.next = 9;\n                return this.refreshTableInfo();\n\n              case 9:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function handleNodeClick(_x, _x2) {\n        return _handleNodeClick.apply(this, arguments);\n      }\n\n      return handleNodeClick;\n    }(),\n    handleDragEnd: function () {\n      var _handleDragEnd = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(draggingNode, dropNode, dropType) {\n        var list, nodes;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (!(dropType === 'none' || dropType === undefined)) {\n                  _context13.next = 2;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\");\n\n              case 2:\n                list = [draggingNode.level];\n                nodes = null;\n\n                if (draggingNode.level === 1) {\n                  nodes = dropNode.parent.data;\n                } else if (draggingNode.level === 2) {\n                  nodes = dropNode.parent.data.children;\n                }\n\n                this.getNodeTree(nodes, draggingNode.data.id, list);\n                _context13.next = 8;\n                return Collection.nodePosition(list);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function handleDragEnd(_x3, _x4, _x5) {\n        return _handleDragEnd.apply(this, arguments);\n      }\n\n      return handleDragEnd;\n    }(),\n    getNodeTree: function getNodeTree(nodes, id, list) {\n      if (!nodes) {\n        return;\n      }\n\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === id) {\n          list[1] = i - 1 >= 0 ? nodes[i - 1].id : 0;\n          list[2] = nodes[i].id;\n          list[3] = i + 1 < nodes.length ? nodes[i + 1].id : 0;\n          return;\n        }\n      }\n    },\n    allowDrop: function allowDrop(draggingNode, dropNode, type) {\n      return draggingNode.level === dropNode.level && type !== 'inner';\n    },\n    createNewPocket: function createNewPocket() {\n      this.pocket_dialog_visible = true;\n      this.pocket_operation_type = 1;\n      this.pocket_info.pocket_name = '';\n      this.pocket_info.collection_id = this.collection_id;\n    },\n    updatePocket: function updatePocket(data) {\n      this.pocket_dialog_visible = true;\n      this.pocket_operation_type = 2;\n      this.pocket_info = {\n        id: data.id,\n        pocket_name: data.name\n      };\n    },\n    deletePocket: function () {\n      var _deletePocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (!(this.pocket_list.length <= 1)) {\n                  _context15.next = 3;\n                  break;\n                }\n\n                this.$message.error('至少保留一个模块');\n                return _context15.abrupt(\"return\");\n\n              case 3:\n                this.$confirm('确定要删除吗?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).then(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee14() {\n                  var res;\n                  return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                    while (1) {\n                      switch (_context14.prev = _context14.next) {\n                        case 0:\n                          _context14.next = 2;\n                          return Collection.deletePocket(id);\n\n                        case 2:\n                          res = _context14.sent;\n\n                          if (res.code < window.MAX_SUCCESS_CODE) {\n                            _this3.$message.success(res.message);\n\n                            _this3.pageInit();\n                          } else {\n                            _this3.$message.error('删除功能异常');\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context14.stop();\n                      }\n                    }\n                  }, _callee14);\n                })));\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function deletePocket(_x6) {\n        return _deletePocket.apply(this, arguments);\n      }\n\n      return deletePocket;\n    }(),\n    pocketSave: function () {\n      var _pocketSave = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16() {\n        var res, id;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (!(this.pocket_operation_type === 2)) {\n                  _context16.next = 7;\n                  break;\n                }\n\n                _context16.next = 3;\n                return Collection.updatePocket(this.pocket_info);\n\n              case 3:\n                res = _context16.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.pocket_dialog_visible = false;\n                  this.getPocketList();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n                _context16.next = 23;\n                break;\n\n              case 7:\n                if (!(this.pocket_operation_type === 1)) {\n                  _context16.next = 23;\n                  break;\n                }\n\n                _context16.next = 10;\n                return Collection.createPocket(this.pocket_info);\n\n              case 10:\n                res = _context16.sent;\n\n                if (!(res.code < window.MAX_SUCCESS_CODE)) {\n                  _context16.next = 22;\n                  break;\n                }\n\n                this.pocket_dialog_visible = false;\n                this.getPocketList();\n                id = Number(res.message);\n                this.default_expanded_key = [id];\n                this.current_pocket_id = id;\n                this.current_choose_case_id_list = [];\n                _context16.next = 20;\n                return this.refreshTableInfo();\n\n              case 20:\n                _context16.next = 23;\n                break;\n\n              case 22:\n                this.$message.error('服务端异常');\n\n              case 23:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function pocketSave() {\n        return _pocketSave.apply(this, arguments);\n      }\n\n      return pocketSave;\n    }(),\n    selectAll: function () {\n      var _selectAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(val) {\n        var _this4 = this;\n\n        var list;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                list = [];\n\n                if (!(val.length === 0)) {\n                  _context19.next = 7;\n                  break;\n                }\n\n                // 取消全选\n                this.case_list.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee17(e) {\n                    var param;\n                    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n                      while (1) {\n                        switch (_context17.prev = _context17.next) {\n                          case 0:\n                            param = {\n                              pocket_id: _this4.current_pocket_id,\n                              case_id: e.id,\n                              case_name: e.case_name\n                            };\n                            list.push(param);\n\n                            _this4.current_choose_case_id_list.splice(_this4.current_choose_case_id_list.indexOf(e.id), 1);\n\n                          case 3:\n                          case \"end\":\n                            return _context17.stop();\n                        }\n                      }\n                    }, _callee17);\n                  }));\n\n                  return function (_x8) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                _context19.next = 5;\n                return Collection.batchDeleteCase(list);\n\n              case 5:\n                _context19.next = 10;\n                break;\n\n              case 7:\n                // 全选\n                val.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee18(e) {\n                    var param;\n                    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                      while (1) {\n                        switch (_context18.prev = _context18.next) {\n                          case 0:\n                            if (!_this4.current_choose_case_id_list.includes(e.id)) {\n                              param = {\n                                pocket_id: _this4.current_pocket_id,\n                                case_id: e.id,\n                                case_name: e.case_name\n                              };\n                              list.push(param);\n\n                              _this4.current_choose_case_id_list.push(e.id);\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context18.stop();\n                        }\n                      }\n                    }, _callee18);\n                  }));\n\n                  return function (_x9) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n                _context19.next = 10;\n                return Collection.batchInsertCase(list);\n\n              case 10:\n                this.getPocketList();\n                this.default_expanded_key = [this.current_pocket_id];\n\n              case 12:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function selectAll(_x7) {\n        return _selectAll.apply(this, arguments);\n      }\n\n      return selectAll;\n    }(),\n    rowSelect: function () {\n      var _rowSelect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20(selection, row) {\n        var chooseType, id, case_name, param;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                // false为反选，true为选中\n                chooseType = false;\n                id = row.id, case_name = row.case_name;\n                selection.forEach(function (r) {\n                  chooseType = r.id === id;\n                });\n                param = {\n                  pocket_id: this.current_pocket_id,\n                  case_id: id,\n                  case_name: case_name\n                };\n\n                if (!chooseType) {\n                  _context20.next = 10;\n                  break;\n                }\n\n                _context20.next = 7;\n                return Collection.insertCaseToPocket(param);\n\n              case 7:\n                this.current_choose_case_id_list.push(id);\n                _context20.next = 13;\n                break;\n\n              case 10:\n                _context20.next = 12;\n                return Collection.deleteCaseFromPocket(param);\n\n              case 12:\n                this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(id), 1);\n\n              case 13:\n                this.getPocketList();\n\n              case 14:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function rowSelect(_x10, _x11) {\n        return _rowSelect.apply(this, arguments);\n      }\n\n      return rowSelect;\n    }(),\n    deleteCase: function () {\n      var _deleteCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee21(data) {\n        var param;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(data.business_id), 1);\n                param = {\n                  pocket_id: this.current_pocket_id,\n                  case_id: data.business_id\n                };\n                _context21.next = 4;\n                return Collection.deleteCaseFromPocket(param);\n\n              case 4:\n                _context21.next = 6;\n                return this.getPocketList();\n\n              case 6:\n                _context21.next = 8;\n                return this.refreshTableInfo();\n\n              case 8:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function deleteCase(_x12) {\n        return _deleteCase.apply(this, arguments);\n      }\n\n      return deleteCase;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.refreshTableInfo();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.refreshTableInfo();\n    },\n    doExecute: function () {\n      var _doExecute = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee22() {\n        var reportId;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                this.execute_button_loading = true;\n                _context22.next = 3;\n                return CollectionReport.execute(this.collection_id);\n\n              case 3:\n                reportId = _context22.sent;\n                _context22.next = 6;\n                return new Promise(function (resolve) {\n                  setTimeout(function () {\n                    return resolve('down');\n                  }, 1000);\n                });\n\n              case 6:\n                this.execute_button_loading = false;\n                this.$router.push(\"/autotest/report-detail/\".concat(reportId));\n\n              case 8:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function doExecute() {\n        return _doExecute.apply(this, arguments);\n      }\n\n      return doExecute;\n    }(),\n    drawerClose: function drawerClose() {\n      this.drawer_visible = false;\n      this.searchCaseList();\n    }\n  }\n};",null]}