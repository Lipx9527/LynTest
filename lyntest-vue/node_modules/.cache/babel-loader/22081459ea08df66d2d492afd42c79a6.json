{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/statistical/function/data-manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/statistical/function/data-manage.vue","mtime":1606834545502},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Manager from '@/model/statistical/manager';\nimport Function from '@/model/statistical/function';\nexport default {\n  data: function data() {\n    return {\n      date: [],\n      tester_list: {},\n      dev_list: [],\n      product_line_list: [],\n      total: 0,\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1\n      },\n      upload_dialog_visible: false,\n      file_list: [],\n      tableData: [],\n      edit_dialog_visible: false,\n      function_info: {}\n    };\n  },\n  mounted: function mounted() {\n    this.getDevList();\n    this.getTesterList();\n    this.getProductLineList();\n    this.searchFunctionList();\n  },\n  methods: {\n    chooseDate: function () {\n      var _chooseDate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(date) {\n        var _date;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.search.page = 1;\n\n                if (date === null) {\n                  this.search.start_date = '';\n                  this.search.end_date = '';\n                } else {\n                  _date = _slicedToArray(date, 2);\n                  this.search.start_date = _date[0];\n                  this.search.end_date = _date[1];\n                }\n\n                _context.next = 4;\n                return this.searchFunctionList();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function chooseDate(_x) {\n        return _chooseDate.apply(this, arguments);\n      }\n\n      return chooseDate;\n    }(),\n    getTesterList: function () {\n      var _getTesterList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Manager.getTesterList();\n\n              case 2:\n                this.tester_list = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTesterList() {\n        return _getTesterList.apply(this, arguments);\n      }\n\n      return getTesterList;\n    }(),\n    getDevList: function () {\n      var _getDevList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Manager.getDevList();\n\n              case 2:\n                this.dev_list = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getDevList() {\n        return _getDevList.apply(this, arguments);\n      }\n\n      return getDevList;\n    }(),\n    // 获取产品线列表\n    getProductLineList: function () {\n      var _getProductLineList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Manager.getProductList();\n\n              case 2:\n                this.product_line_list = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getProductLineList() {\n        return _getProductLineList.apply(this, arguments);\n      }\n\n      return getProductLineList;\n    }(),\n    searchFunctionList: function () {\n      var _searchFunctionList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Function.searchFuncList(this.search);\n\n              case 2:\n                res = _context5.sent;\n                this.tableData = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function searchFunctionList() {\n        return _searchFunctionList.apply(this, arguments);\n      }\n\n      return searchFunctionList;\n    }(),\n    exportExcel: function exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/func/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(function (res) {\n        var link = document.createElement('a');\n        link.style.display = 'none';\n        link.href = URL.createObjectURL(new Blob([res]));\n        link.setAttribute('download', '功能点信息.xlsx');\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.searchFunctionList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.searchFunctionList();\n    },\n    editFunction: function editFunction(row) {\n      this.edit_dialog_visible = true;\n      this.function_info = _objectSpread({}, row);\n    },\n    modifyFunction: function () {\n      var _modifyFunction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Function.updateFunc(this.function_info);\n\n              case 2:\n                res = _context6.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.edit_dialog_visible = false;\n                  this.searchFunctionList();\n                } else {\n                  this.$message.error('修改功能点功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function modifyFunction() {\n        return _modifyFunction.apply(this, arguments);\n      }\n\n      return modifyFunction;\n    }(),\n    deleteFunction: function () {\n      var _deleteFunction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Function.deleteFunc(id);\n\n              case 2:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.searchFunctionList();\n                } else {\n                  this.$message.error('删除功能点功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function deleteFunction(_x2) {\n        return _deleteFunction.apply(this, arguments);\n      }\n\n      return deleteFunction;\n    }(),\n    // 文件超出个数限制时的钩子\n    exceedFile: function exceedFile(files, fileList) {\n      this.$message.warning(\"\\u53EA\\u80FD\\u9009\\u62E9 1 \\u4E2A\\u6587\\u4EF6\\uFF0C\\u5F53\\u524D\\u5171\\u9009\\u62E9\\u4E86 \".concat(files.length + fileList.length, \" \\u4E2A\"));\n    },\n    // 文件状态改变时的钩子\n    fileChange: function fileChange(file) {\n      this.file_list.push(file.raw);\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile: function beforeUploadFile(file) {\n      var extension = file.name.substring(file.name.lastIndexOf('.') + 1);\n      var size = file.size / 1024 / 1024;\n\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件');\n      }\n\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M');\n      }\n    },\n    deleteFile: function deleteFile(file) {\n      this.file_list.pop(file);\n    },\n    uploadFile: function uploadFile() {\n      var _this = this;\n\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件');\n      } else {\n        var form = new FormData();\n        form.append('file', this.file_list[0]);\n        this.$axios({\n          method: 'post',\n          url: '/statistical/func/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(function (res) {\n          if (res.success === true) {\n            _this.file_list = [];\n\n            _this.$message.success(res.result);\n\n            _this.upload_dialog_visible = false;\n\n            _this.searchFunctionList();\n          } else if (res.success === false) {\n            _this.$message.error(res.msg);\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["data-manage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA,OAAA,OAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,8BAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,iBAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA,CALA;AAMA,MAAA,MAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,EAJA;AAKA,QAAA,YAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,EANA;AAOA,QAAA,IAAA,EAAA;AAPA,OANA;AAeA,MAAA,qBAAA,EAAA,KAfA;AAgBA,MAAA,SAAA,EAAA,EAhBA;AAiBA,MAAA,SAAA,EAAA,EAjBA;AAkBA,MAAA,mBAAA,EAAA,KAlBA;AAmBA,MAAA,aAAA,EAAA;AAnBA,KAAA;AAqBA,GAvBA;AAwBA,EAAA,OAxBA,qBAwBA;AACA,SAAA,UAAA;AACA,SAAA,aAAA;AACA,SAAA,kBAAA;AACA,SAAA,kBAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA,gDACA,IADA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,MAAA,CAAA,IAAA,GAAA,CAAA;;AACA,oBAAA,IAAA,KAAA,IAAA,EAAA;AACA,uBAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,uBAAA,MAAA,CAAA,QAAA,GAAA,EAAA;AACA,iBAHA,MAGA;AAAA,yCACA,IADA;AACA,uBAAA,MAAA,CAAA,UADA;AACA,uBAAA,MAAA,CAAA,QADA;AAEA;;AARA;AAAA,uBASA,KAAA,kBAAA,EATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA,IAAA,aAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAYA,OAAA,CAAA,aAAA,EAZA;;AAAA;AAYA,qBAAA,WAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcA,IAAA,UAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAeA,OAAA,CAAA,UAAA,EAfA;;AAAA;AAeA,qBAAA,QAfA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBA;AACA,IAAA,kBAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmBA,OAAA,CAAA,cAAA,EAnBA;;AAAA;AAmBA,qBAAA,iBAnBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBA,IAAA,kBArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsBA,QAAA,CAAA,cAAA,CAAA,KAAA,MAAA,CAtBA;;AAAA;AAsBA,gBAAA,GAtBA;AAuBA,qBAAA,SAAA,GAAA,GAAA,CAAA,KAAA;AACA,qBAAA,KAAA,GAAA,GAAA,CAAA,KAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BA,IAAA,WA1BA,yBA0BA;AACA,WAAA,MAAA,CAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,4BAFA;AAGA,QAAA,YAAA,EAAA,MAHA;AAIA,QAAA,IAAA,EAAA,KAAA;AAJA,OAAA,EAKA,IALA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,QAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,eAAA,CAAA,IAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,QAAA,IAAA,CAAA,YAAA,CAAA,UAAA,EAAA,YAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA,QAAA,IAAA,CAAA,KAAA;AACA,QAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA,OAfA;AAiBA,KA5CA;AA6CA,IAAA,gBA7CA,4BA6CA,GA7CA,EA6CA;AACA,WAAA,MAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,kBAAA;AACA,KAhDA;AAiDA,IAAA,mBAjDA,+BAiDA,GAjDA,EAiDA;AACA,WAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA,WAAA,kBAAA;AACA,KApDA;AAqDA,IAAA,YArDA,wBAqDA,GArDA,EAqDA;AACA,WAAA,mBAAA,GAAA,IAAA;AACA,WAAA,aAAA,qBAAA,GAAA;AACA,KAxDA;AAyDA,IAAA,cAzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0DA,QAAA,CAAA,UAAA,CAAA,KAAA,aAAA,CA1DA;;AAAA;AA0DA,gBAAA,GA1DA;;AA2DA,oBAAA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,gBAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,WAAA,GAAA,CAAA,OAAA;AACA,uBAAA,mBAAA,GAAA,KAAA;AACA,uBAAA,kBAAA;AACA,iBAJA,MAIA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,WAAA;AACA;;AAjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmEA,IAAA,cAnEA;AAAA;AAAA;AAAA,iDAmEA,EAnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoEA,QAAA,CAAA,UAAA,CAAA,EAAA,CApEA;;AAAA;AAoEA,gBAAA,GApEA;;AAqEA,oBAAA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,gBAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,WAAA,GAAA,CAAA,OAAA;AACA,uBAAA,kBAAA;AACA,iBAHA,MAGA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,WAAA;AACA;;AA1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4EA;AACA,IAAA,UA7EA,sBA6EA,KA7EA,EA6EA,QA7EA,EA6EA;AACA,WAAA,QAAA,CAAA,OAAA,mGAAA,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA;AACA,KA/EA;AAgFA;AACA,IAAA,UAjFA,sBAiFA,IAjFA,EAiFA;AACA,WAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,KAnFA;AAoFA;AACA,IAAA,gBArFA,4BAqFA,IArFA,EAqFA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA;;AACA,UAAA,SAAA,KAAA,MAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,iBAAA;AACA;;AACA,UAAA,IAAA,GAAA,EAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA,KA9FA;AA+FA,IAAA,UA/FA,sBA+FA,IA/FA,EA+FA;AACA,WAAA,SAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAjGA;AAkGA,IAAA,UAlGA,wBAkGA;AAAA;;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,OAAA;AACA,OAFA,MAEA;AACA,YAAA,IAAA,GAAA,IAAA,QAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,SAAA,CAAA,CAAA,CAAA;AACA,aAAA,MAAA,CAAA;AACA,UAAA,MAAA,EAAA,MADA;AAEA,UAAA,GAAA,EAAA,0BAFA;AAGA,UAAA,OAAA,EAAA;AACA,4BAAA;AADA,WAHA;AAMA,UAAA,IAAA,EAAA;AANA,SAAA,EAOA,IAPA,CAQA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,SAAA,GAAA,EAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AACA,YAAA,KAAA,CAAA,qBAAA,GAAA,KAAA;;AACA,YAAA,KAAA,CAAA,kBAAA;AACA,WALA,MAKA,IAAA,GAAA,CAAA,OAAA,KAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,SAjBA;AAmBA;AACA;AA5HA;AA9BA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-card>\n      <el-row>\n        <el-date-picker v-model=\"date\"\n                        type=\"daterange\"\n                        unlink-panels range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\"\n                        value-format=\"yyyy-MM-dd\"\n                        @change=\"chooseDate\">\n        </el-date-picker>\n        <el-select v-model=\"search.dev_code\" clearable filterable placeholder=\"开发\" @change=\"searchFunctionList\" style=\"width: 120px\">\n          <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n            <span style=\"float: left\">{{ item.dev_name }}</span>\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">{{item.dev_code}}</span>\n          </el-option>\n        </el-select>\n        <el-select  v-model=\"search.tester_code\" clearable filterable placeholder=\"测试\" @change=\"searchFunctionList\" style=\"width: 120px\">\n          <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n            <span style=\"float: left\">{{ item.tester_name }}</span>\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_code }}</span>\n          </el-option>\n        </el-select>\n        <el-select v-model=\"search.product_code\" clearable placeholder=\"产品线\" @change=\"searchFunctionList\" style=\"width: 150px\">\n          <el-option v-for=\"item in product_line_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"></el-option>\n        </el-select>\n        <el-button type=\"primary\" @click=\"exportExcel\" style=\"margin-left: 20px\">导出Excel</el-button>\n      </el-row>\n    </el-card>\n    <br/>\n    <el-card>\n      <el-row>\n        <el-button type=\"primary\" size=\"small\" @click=\"upload_dialog_visible = true\">新 增</el-button>\n        <el-pagination background\n                       @size-change=\"handleSizeChange\"\n                       @current-change=\"handleCurrentChange\"\n                       :current-page=\"search.page\"\n                       :page-size=\"search.count\"\n                       :page-sizes=\"[10, 20, 50, 100]\"\n                       :total=\"total\" layout=\"total, sizes, prev, pager, next\" style=\"float: right\"/>\n      </el-row>\n      <el-table :data=\"tableData\" style=\"width: 100%\">\n        <el-table-column prop=\"create_date\" label=\"创建日期\" width=\"120\"/>\n        <el-table-column prop=\"demand_code\" label=\"需求编码\" width=\"150\"/>\n        <el-table-column prop=\"demand_name\" label=\"需求名称\" width=\"150\"/>\n        <el-table-column prop=\"dev_name\" label=\"开发\" width=\"120\"/>\n        <el-table-column prop=\"tester_name\" label=\"测试\" width=\"120\"/>\n        <el-table-column prop=\"function_count\" label=\"功能点\" width=\"100\"/>\n        <el-table-column prop=\"product_line\" label=\"产品线\" width=\"150\"/>\n        <el-table-column prop=\"function_type\" label=\"需求分类\" sortable width=\"120\"/>\n        <el-table-column prop=\"dev_time\" label=\"研发时长\" width=\"100\"/>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" v-permission=\"{ permission: '功能编辑', type: 'disabled'}\" @click=\"editFunction(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" v-permission=\"{ permission: '功能删除', type: 'disabled'}\" type=\"danger\" @click=\"deleteFunction(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <el-dialog :visible.sync=\"upload_dialog_visible\" width=\"400px\">\n      <el-upload drag\n                 :limit=\"1\"\n                 :auto-upload=\"false\"\n                 accept=\".xlsx\"\n                 action=\"\"\n                 :before-upload=\"beforeUploadFile\"\n                 :on-remove=\"deleteFile\"\n                 :on-change=\"fileChange\"\n                 :on-exceed=\"exceedFile\"\n                 :file-list=\"file_list\">\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n        <div class=\"el-upload__tip\" slot=\"tip\">只能上传xlsx文件，且不超过10M</div>\n      </el-upload>\n      <br/>\n      <el-button size=\"small\" type=\"primary\" @click=\"uploadFile\">立即上传</el-button>\n      <el-button size=\"small\" @click=\"upload_dialog_visible = false, file_list=[]\">取消</el-button>\n    </el-dialog>\n    <el-dialog :visible.sync=\"edit_dialog_visible\" width=\"600px\">\n      <el-form :model=\"function_info\" label-width=\"100px\">\n        <el-form-item label=\"选择日期\">\n          <el-date-picker v-model=\"function_info.create_date\" type=\"date\" placeholder=\"选择日期\" value-format=\"yyyy-MM-dd\" style=\"width: 300px\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"需求编码\">\n          <el-input v-model=\"function_info.demand_code\" style=\"width: 300px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"需求名称\">\n          <el-input v-model=\"function_info.demand_name\" style=\"width: 300px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开发\">\n          <el-select v-model=\"function_info.dev_code\" clearable filterable placeholder=\"开发\" style=\"width: 300px\">\n            <el-option v-for=\"item in dev_list\" :key=\"item.dev_code\" :label=\"item.dev_name\" :value=\"item.dev_code\">\n              <span style=\"float: left\">{{ item.dev_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.dev_code }}</span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试\">\n          <el-select v-model=\"function_info.tester_code\" clearable filterable placeholder=\"测试\" style=\"width: 300px\">\n            <el-option v-for=\"item in tester_list\" :key=\"item.tester_code\" :label=\"item.tester_name\" :value=\"item.tester_code\">\n              <span style=\"float: left\">{{ item.tester_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.tester_code }}</span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"功能点\">\n          <el-input-number v-model=\"function_info.function_count\" controls-position=\"right\" :step=\"10\" :min=\"0\" style=\"width: 300px\"/>\n        </el-form-item>\n        <el-form-item label=\"需求分类\">\n          <el-select v-model=\"function_info.function_type\" style=\"width: 300px\">\n            <el-option v-for=\"item in ['日常','项目']\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"研发时长\">\n          <el-input-number v-model=\"function_info.dev_time\" controls-position=\"right\" :min=\"0\" style=\"width: 300px\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"modifyFunction\">修改</el-button>\n      <el-button @click=\"edit_dialog_visible = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Manager from '@/model/statistical/manager'\nimport Function from '@/model/statistical/function'\n\nexport default {\n  data() {\n    return {\n      date: [],\n      tester_list: {},\n      dev_list: [],\n      product_line_list: [],\n      total: 0,\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1,\n      },\n      upload_dialog_visible: false,\n      file_list: [],\n      tableData: [],\n      edit_dialog_visible: false,\n      function_info: {},\n    }\n  },\n  mounted() {\n    this.getDevList()\n    this.getTesterList()\n    this.getProductLineList()\n    this.searchFunctionList()\n  },\n  methods: {\n    async chooseDate(date) {\n      this.search.page = 1\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      await this.searchFunctionList()\n    },\n    async getTesterList() {\n      this.tester_list = await Manager.getTesterList()\n    },\n    async getDevList() {\n      this.dev_list = await Manager.getDevList()\n    },\n    // 获取产品线列表\n    async getProductLineList() {\n      this.product_line_list = await Manager.getProductList()\n    },\n    async searchFunctionList() {\n      const res = await Function.searchFuncList(this.search)\n      this.tableData = res.items\n      this.total = res.total\n    },\n    exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/func/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(\n        res => {\n          const link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = URL.createObjectURL(new Blob([res]))\n          link.setAttribute('download', '功能点信息.xlsx')\n          document.body.appendChild(link)\n          link.click()\n          URL.revokeObjectURL(link.href)\n          document.body.removeChild(link)\n        }\n      )\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.searchFunctionList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.searchFunctionList()\n    },\n    editFunction(row) {\n      this.edit_dialog_visible = true\n      this.function_info = { ...row }\n    },\n    async modifyFunction() {\n      const res = await Function.updateFunc(this.function_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.edit_dialog_visible = false\n        this.searchFunctionList()\n      } else {\n        this.$message.error('修改功能点功能异常')\n      }\n    },\n    async deleteFunction(id) {\n      const res = await Function.deleteFunc(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.searchFunctionList()\n      } else {\n        this.$message.error('删除功能点功能异常')\n      }\n    },\n    // 文件超出个数限制时的钩子\n    exceedFile(files, fileList) {\n      this.$message.warning(`只能选择 1 个文件，当前共选择了 ${files.length + fileList.length} 个`)\n    },\n    // 文件状态改变时的钩子\n    fileChange(file) {\n      this.file_list.push(file.raw)\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile(file) {\n      const extension = file.name.substring(file.name.lastIndexOf('.') + 1)\n      const size = file.size / 1024 / 1024\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件')\n      }\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M')\n      }\n    },\n    deleteFile(file) {\n      this.file_list.pop(file)\n    },\n    uploadFile() {\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件')\n      } else {\n        const form = new FormData()\n        form.append('file', this.file_list[0])\n        this.$axios({\n          method: 'post',\n          url: '/statistical/func/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(\n          res => {\n            if (res.success === true) {\n              this.file_list = []\n              this.$message.success(res.result)\n              this.upload_dialog_visible = false\n              this.searchFunctionList()\n            } else if (res.success === false) {\n              this.$message.error(res.msg)\n            }\n          }\n        )\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/component/statistical/function"}]}