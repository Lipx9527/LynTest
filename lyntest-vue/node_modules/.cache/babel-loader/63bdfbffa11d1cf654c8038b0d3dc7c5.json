{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/admin/user/user-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/admin/user/user-password.vue","mtime":1606834545541},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Admin from '@/lin/model/admin';\nexport default {\n  props: ['id'],\n  data: function data() {\n    var _this = this;\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'));\n      } else {\n        if (_this.form.confirm_password !== '') {\n          _this.$refs.form.validateField('confirm_password');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.new_password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      form: {\n        new_password: '',\n        confirm_password: ''\n      },\n      // 验证规则\n      rules: {\n        new_password: [{\n          validator: validatePassword,\n          trigger: 'blur',\n          required: true\n        }],\n        confirm_password: [{\n          validator: validatePassword2,\n          trigger: 'blur',\n          required: true\n        }]\n      }\n    };\n  },\n  methods: {\n    // 提交表单\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      if (this.form.new_password === '' && this.form.confirm_password === '') {\n        this.$emit('handlePasswordResult', true);\n        return;\n      }\n\n      this.$refs[formName].validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(valid) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 15;\n                    break;\n                  }\n\n                  _context.prev = 1;\n                  _this2.loading = true;\n                  _context.next = 5;\n                  return Admin.changePassword(_this2.form.new_password, _this2.form.confirm_password, _this2.id);\n\n                case 5:\n                  res = _context.sent;\n                  _context.next = 12;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](1);\n                  _this2.loading = false;\n                  console.log(_context.t0);\n\n                case 12:\n                  if (res.code < window.MAX_SUCCESS_CODE) {\n                    _this2.loading = false;\n\n                    _this2.$message.success(\"\".concat(res.message));\n\n                    _this2.resetForm(formName);\n\n                    _this2.$emit('handlePasswordResult', true);\n                  } else {\n                    _this2.loading = false;\n\n                    _this2.$message.error(\"\".concat(res.message));\n                  }\n\n                  _context.next = 19;\n                  break;\n\n                case 15:\n                  console.log('error submit!!');\n\n                  _this2.$message.error('请填写正确的信息');\n\n                  _this2.$emit('handlePasswordResult', false);\n\n                  return _context.abrupt(\"return\", false);\n\n                case 19:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[1, 8]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",null]}