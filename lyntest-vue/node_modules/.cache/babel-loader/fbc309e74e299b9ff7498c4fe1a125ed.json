{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/data-platform/order/rmq.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/data-platform/order/rmq.vue","mtime":1606834545555},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Orders from '@/model/dpf/orders';\nimport Ubt from '@/model/dpf/ubt';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        id: 0,\n        json_detail: ''\n      },\n      mq_list: []\n    };\n  },\n  mounted: function mounted() {\n    this.getMqList();\n  },\n  methods: {\n    getMqList: function () {\n      var _getMqList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Orders.getRmqList();\n\n              case 2:\n                res = _context.sent;\n                this.mq_list = res;\n                this.form.id = res[0].id;\n                this.form.json_detail = res[0].json_detail;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMqList() {\n        return _getMqList.apply(this, arguments);\n      }\n\n      return getMqList;\n    }(),\n    handleMqList: function handleMqList(value) {\n      var _this = this;\n\n      this.mq_list.forEach(function (item) {\n        if (item.id === value) {\n          _this.form.json_detail = item.json_detail;\n        }\n      });\n    },\n    rmqPush: function () {\n      var _rmqPush = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Orders.rmqPush(this.form);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res) {\n                  this.$message.success('推送成功');\n                } else {\n                  this.$message.error('推送失败');\n                }\n\n                _context2.next = 6;\n                return Ubt.insertUbt('rmq');\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function rmqPush() {\n        return _rmqPush.apply(this, arguments);\n      }\n\n      return rmqPush;\n    }()\n  }\n};",{"version":3,"sources":["rmq.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,MAAA,MAAA,oBAAA;AACA,OAAA,GAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,WAAA,EAAA;AAFA,OADA;AAKA,MAAA,OAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,SAAA;AACA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,UAAA,EAFA;;AAAA;AAEA,gBAAA,GAFA;AAGA,qBAAA,OAAA,GAAA,GAAA;AACA,qBAAA,IAAA,CAAA,EAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,qBAAA,IAAA,CAAA,WAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,WAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOA,IAAA,YAPA,wBAOA,KAPA,EAOA;AAAA;;AACA,WAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,EAAA,KAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,WAAA;AACA;AACA,OAJA;AAKA,KAbA;AAcA,IAAA,OAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAeA,MAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAfA;;AAAA;AAeA,gBAAA,GAfA;;AAgBA,oBAAA,GAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,iBAFA,MAEA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,MAAA;AACA;;AApBA;AAAA,uBAsBA,GAAA,CAAA,SAAA,CAAA,KAAA,CAtBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAbA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header\"><div class=\"title\">RMQ</div></div>\n    <el-row>\n      <el-select v-model=\"form.id\" placeholder=\"请选择\" style=\"width: 300px\" @change=\"handleMqList\" value=\"\">\n        <el-option v-for=\"item in mq_list\" :key=\"item.id\" :value =\"item.id\" :label =\"item.desc\"></el-option>\n      </el-select>\n    </el-row>\n    <br/>\n    <el-row>\n      <el-input\n        type=\"textarea\"\n        :autosize=\"{ minRows: 5, maxRows: 10}\"\n        placeholder=\"请输入要推送的json\"\n        v-model=\"form.json_detail\">\n      </el-input>\n    </el-row>\n    <br/>\n    <el-row>\n      <el-button type=\"primary\" @click=\"rmqPush\">执行</el-button>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Orders from '@/model/dpf/orders'\nimport Ubt from '@/model/dpf/ubt'\n\nexport default {\n  data() {\n    return {\n      form: {\n        id: 0,\n        json_detail: '',\n      },\n      mq_list: [],\n    }\n  },\n  mounted() {\n    this.getMqList()\n  },\n  methods: {\n    async getMqList() {\n      const res = await Orders.getRmqList()\n      this.mq_list = res\n      this.form.id = res[0].id\n      this.form.json_detail = res[0].json_detail\n    },\n    handleMqList(value) {\n      this.mq_list.forEach(item => {\n        if (item.id === value) {\n          this.form.json_detail = item.json_detail\n        }\n      })\n    },\n    async rmqPush() {\n      const res = await Orders.rmqPush(this.form)\n      if (res) {\n        this.$message.success('推送成功')\n      } else {\n        this.$message.error('推送失败')\n      }\n\n      await Ubt.insertUbt('rmq')\n    }\n  }\n}\n</script>\n\n<!--suppress CssUnknownTarget -->\n<style lang=\"scss\" scoped>\n  @import \"@/static/css/common.scss\";\n</style>\n"],"sourceRoot":"src/view/data-platform/order"}]}