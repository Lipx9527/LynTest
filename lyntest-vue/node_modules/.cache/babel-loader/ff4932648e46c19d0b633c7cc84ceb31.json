{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/autotest/http-case-edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/autotest/http-case-edit.vue","mtime":1608196730000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueJsonPretty from 'vue-json-pretty';\nimport Category from '@/model/autotest/category';\nimport HttpCase from '@/model/autotest/http-case';\nimport AssertionsDetail from '@/component/autotest/assertions-detail';\nimport ResponseStatus from '@/component/autotest/response-status';\nexport default {\n  props: {\n    operationType: {\n      type: Number\n    },\n    caseInfo: {\n      type: Object\n    }\n  },\n  components: {\n    VueJsonPretty: VueJsonPretty,\n    AssertionsDetail: AssertionsDetail,\n    ResponseStatus: ResponseStatus\n  },\n  data: function data() {\n    return {\n      case_info: {},\n      category_list: [],\n      default_case_info: {\n        category: '',\n        case_name: '',\n        api_url: 'http://',\n        api_port: null,\n        api_method: 'POST',\n        api_path: '',\n        description: '',\n        header_form: [{\n          enable: true\n        }],\n        body_type: 1,\n        body_value: null,\n        variable_list: [{\n          enable: true\n        }],\n        expected_list: [{\n          enable: true\n        }]\n      },\n      config: {\n        method_list: ['POST', 'GET', 'PUT', 'DELETE'],\n        extract_type_list: [{\n          label: 'JsonPath提取',\n          value: 1\n        }, {\n          label: '正则表达式提取',\n          value: 2\n        }],\n        expected_type_list: [{\n          label: 'equals',\n          value: 1\n        }, {\n          label: 'contains',\n          value: 2\n        }, {\n          label: 'not empty or null',\n          value: 3\n        }]\n      },\n      has_result: false,\n      // 是否进行了请求\n      result: {},\n      result_css: {\n        status_code_type: 'success',\n        time_type: 'success'\n      },\n      result_is_json: false,\n      // 返回body是否为json\n      result_json_path: ''\n    };\n  },\n  mounted: function mounted() {\n    this.getCaseInfo();\n    this.getCategoryInfo();\n  },\n  methods: {\n    getCategoryInfo: function () {\n      var _getCategoryInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Category.getCategoryList();\n\n              case 2:\n                res = _context.sent;\n                this.category_list = res;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCategoryInfo() {\n        return _getCategoryInfo.apply(this, arguments);\n      }\n\n      return getCategoryInfo;\n    }(),\n    getCaseInfo: function getCaseInfo() {\n      this.case_info = this.operationType === 1 ? _objectSpread({}, this.default_case_info) : _objectSpread({}, this.caseInfo);\n    },\n    caseExecute: function () {\n      var _caseExecute = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return HttpCase.execute(this.case_info);\n\n              case 2:\n                res = _context2.sent;\n                this.result = res; // 如果返回结果为json，则进行格式美化，并展示copy按钮；不为json则直接显示文本内容\n\n                if (this.isJson(res.response_text)) {\n                  this.result.response_text = JSON.parse(res.response_text);\n                  this.result_is_json = true;\n                }\n\n                this.has_result = true;\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function caseExecute() {\n        return _caseExecute.apply(this, arguments);\n      }\n\n      return caseExecute;\n    }(),\n    saveCase: function () {\n      var _saveCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.operationType === 2)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 3;\n                return HttpCase.updateCase(this.case_info);\n\n              case 3:\n                _context3.t0 = _context3.sent;\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.next = 8;\n                return HttpCase.createCase(this.case_info);\n\n              case 8:\n                _context3.t0 = _context3.sent;\n\n              case 9:\n                res = _context3.t0;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.$emit('drawer-close');\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveCase() {\n        return _saveCase.apply(this, arguments);\n      }\n\n      return saveCase;\n    }(),\n    eleIsDisable: function eleIsDisable(index, data) {\n      return data.length - 1 === index;\n    },\n    deleteRow: function deleteRow(index, data) {\n      data.splice(index, 1);\n    },\n    headerChange: function headerChange() {\n      var isNeedCreate = true;\n      this.case_info.header_form.forEach(function (item) {\n        if (!item.header_key && !item.header_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false;\n        }\n      });\n\n      if (isNeedCreate) {\n        this.case_info.header_form.push({\n          enable: true,\n          header_key: '',\n          header_value: ''\n        });\n      }\n    },\n    variableChange: function variableChange() {\n      var isNeedCreate = true;\n      this.case_info.variable_list.forEach(function (item) {\n        if (!item.extract_method && !item.extract_rule && !item.variable_name) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false;\n        }\n      });\n\n      if (isNeedCreate) {\n        this.case_info.variable_list.push({\n          enable: true,\n          extract_method: '',\n          extract_rule: '',\n          variable_name: ''\n        });\n      }\n    },\n    expectedChange: function expectedChange() {\n      var isNeedCreate = true;\n      this.case_info.expected_list.forEach(function (item) {\n        if (!item.extract_method && !item.extract_rule && !item.compare_type && !item.expected_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false;\n        }\n      });\n\n      if (isNeedCreate) {\n        this.case_info.expected_list.push({\n          enable: true,\n          extract_method: '',\n          extract_rule: '',\n          compare_type: '',\n          expected_value: ''\n        });\n      }\n    },\n    // 点击json的key，获取jsonpath和data\n    resultTextClick: function resultTextClick(path) {\n      this.result_json_path = path;\n    },\n    // 复制jsonPath\n    copyPath: function copyPath() {\n      var input = document.createElement('input');\n      input.value = this.result_json_path;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand('Copy');\n      document.body.removeChild(input);\n      this.$message.success('复制成功');\n    },\n    isJson: function isJson(str) {\n      if (typeof str !== 'string') {\n        return false;\n      }\n\n      try {\n        var obj = JSON.parse(str);\n        return !!(_typeof(obj) === 'object' && obj);\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n};",{"version":3,"sources":["http-case-edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-card class=\"edit\">\n    <div class=\"info-row\">\n      <div class=\"info-cols\">\n        <div class=\"category-col\">\n          <div class=\"title\">系统名称:</div>\n          <el-select v-model=\"case_info.category\" style=\"width: 120px\">\n            <el-option v-for=\"item in category_list\"\n                       :key=\"item.category_name\"\n                       :label=\"item.category_name\"\n                       :value=\"item.category_name\"/>\n          </el-select>\n        </div>\n        <div class=\"name-col\">\n          <div class=\"title\">接口名称:</div>\n          <el-input v-model=\"case_info.case_name\" style=\"width: calc(100% - 80px)\"></el-input>\n        </div>\n      </div>\n      <div>\n        <el-button type=\"success\" @click=\"caseExecute\">请求 <i class=\"el-icon-s-promotion\"></i></el-button>\n        <el-button type=\"primary\" @click=\"saveCase\">{{operationType === 2? '更新': '保存'}} <i class=\"el-icon-download\"></i></el-button>\n      </div>\n    </div>\n    <div class=\"info-row\">\n      <div class=\"title\">接口地址:</div>\n      <el-input style=\"width: calc(100% - 80px)\" v-model=\"case_info.api_url\">\n        <el-select style=\"width: 90px\" v-model=\"case_info.api_method\" slot=\"prepend\">\n          <el-option v-for=\"item in config.method_list\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n        </el-select>\n      </el-input>\n    </div>\n    <el-tabs type=\"border-card\" class=\"request\">\n      <el-tab-pane label=\"请求体\">\n        <el-radio-group v-model=\"case_info.body_type\" style=\"margin-bottom: 10px\">\n          <el-radio :label=\"1\">json</el-radio>\n          <el-radio :label=\"2\">form</el-radio>\n        </el-radio-group>\n        <el-input type=\"textarea\"\n                  :autosize=\"{ minRows: 5, maxRows: 5}\"\n                  class=\"request-body\"\n                  v-model=\"case_info.body_value\" resize=\"none\"/>\n      </el-tab-pane>\n      <el-tab-pane label=\"请求头\">\n        <div class=\"request-param\">\n          <vue-scroll>\n            <div v-for=\"(item,index) in case_info.header_form\" :key=\"index\" class=\"kv-row\">\n              <el-row type=\"flex\" :gutter=\"20\" justify=\"space-between\" align=\"middle\">\n                <el-col class=\"kv-checkbox\">\n                  <el-checkbox v-if=\"!eleIsDisable(index, case_info.header_form)\" v-model=\"item.enable\" />\n                </el-col>\n                <el-col>\n                  <el-input v-model=\"item.header_key\" size=\"small\"\n                            placeholder=\"键\"\n                            @change=\"headerChange\" show-word-limit/>\n                </el-col>\n                <el-col>\n                  <el-input v-model=\"item.header_value\" size=\"small\"\n                            @change=\"headerChange\"\n                            placeholder=\"值\" show-word-limit/>\n                </el-col>\n                <el-col class=\"kv-delete\">\n                  <el-button size=\"mini\" class=\"el-icon-delete-solid\"\n                             circle\n                             @click=\"deleteRow(index, case_info.header_form)\"\n                             :disabled=\"eleIsDisable(index, case_info.header_form)\"/>\n                </el-col>\n              </el-row>\n            </div>\n          </vue-scroll>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"变量\">\n        <div class=\"request-param\">\n          <vue-scroll>\n            <div v-for=\"(item,index) in case_info.variable_list\" :key=\"index\" class=\"kv-row\">\n              <el-row type=\"flex\" :gutter=\"20\" justify=\"space-between\" align=\"middle\">\n                <el-col class=\"kv-checkbox\">\n                  <el-checkbox v-if=\"!eleIsDisable(index, case_info.variable_list)\" v-model=\"item.enable\" />\n                </el-col>\n                <el-col class=\"kv-select\">\n                  <el-select v-model=\"item.extract_method\" placeholder=\"请选择取值方式\" size=\"small\" @change=\"variableChange\">\n                    <el-option v-for=\"item in config.extract_type_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n                  </el-select>\n                </el-col>\n                <el-col>\n                  <el-input size=\"small\" v-model=\"item.extract_rule\" placeholder=\"提取路径\" @change=\"variableChange\"></el-input>\n                </el-col>\n                <el-col>\n                  <el-tooltip class=\"item\" effect=\"dark\"\n                              content=\"为保持变量名规范，请输入大写、下划线，类似于VARIABLE_TYPE,引用时使用${VARIABLE_TYPE}\"\n                              :enterable=\"false\"\n                              placement=\"top-end\">\n                    <el-input size=\"small\" v-model=\"item.variable_name\" placeholder=\"变量名\" @change=\"variableChange\"></el-input>\n                  </el-tooltip>\n                </el-col>\n                <el-col class=\"kv-delete\">\n                  <el-button size=\"mini\" class=\"el-icon-delete-solid\"\n                             circle\n                             @click=\"deleteRow(index, case_info.variable_list)\"\n                             :disabled=\"eleIsDisable(index, case_info.variable_list)\"/>\n                </el-col>\n              </el-row>\n            </div>\n          </vue-scroll>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"断言\">\n        <div class=\"request-param\">\n          <vue-scroll>\n            <div v-for=\"(item,index) in case_info.expected_list\" :key=\"index\" class=\"kv-row\">\n              <el-row type=\"flex\" :gutter=\"20\" justify=\"space-between\" align=\"middle\">\n                <el-col class=\"kv-checkbox\">\n                  <el-checkbox v-if=\"!eleIsDisable(index, case_info.expected_list)\" v-model=\"item.enable\" />\n                </el-col>\n                <el-col class=\"kv-select\">\n                  <el-select v-model=\"item.extract_method\" placeholder=\"请选择取值方式\" size=\"small\" @change=\"expectedChange\">\n                    <el-option v-for=\"item in config.extract_type_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n                  </el-select>\n                </el-col>\n                <el-col>\n                  <el-input size=\"small\" v-model=\"item.extract_rule\" placeholder=\"提取路径/规则\" @change=\"expectedChange\"></el-input>\n                </el-col>\n                <el-col class=\"kv-select\">\n                  <el-select v-model=\"item.compare_type\" placeholder=\"校验方式\" size=\"small\" @change=\"expectedChange\">\n                    <el-option v-for=\"type in config.expected_type_list\" :key=\"type.value\" :label=\"type.label\" :value=\"type.value\"/>\n                  </el-select>\n                </el-col>\n                <el-col>\n                  <el-input size=\"small\" v-model=\"item.expected_value\" placeholder=\"预期值\" @change=\"expectedChange\" :disabled=\"item.compare_type === 3\"></el-input>\n                </el-col>\n                <el-col class=\"kv-delete\">\n                  <el-button size=\"mini\" class=\"el-icon-delete-solid\"\n                             circle\n                             @click=\"deleteRow(index, case_info.expected_list)\"\n                             :disabled=\"eleIsDisable(index, case_info.expected_list)\"/>\n                </el-col>\n              </el-row>\n            </div>\n          </vue-scroll>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"描述\">\n        <el-input type=\"textarea\"\n                  :autosize=\"{ minRows: 6, maxRows: 6}\"\n                  class=\"request-body\"\n                  v-model=\"case_info.description\" resize=\"none\"/>\n      </el-tab-pane>\n    </el-tabs>\n    <div class=\"response\">\n      <div class=\"response-header\">\n        <div class=\"response-title\">Response</div>\n        <div class=\"response-info-list\" v-show=\"has_result\">\n          <el-popover\n            placement=\"left\"\n            width=\"450\"\n            trigger=\"hover\" v-if=\"result_is_json\">\n            <assertions-detail :result=\"result.expected_res\"></assertions-detail>\n            <i slot=\"reference\" class=\"el-icon-view\" style=\"transform: translateX(-10px)\"></i>\n          </el-popover>\n          <response-status :status-code=\"result.status_code\" :message=\"result.message\" :response-time=\"result.response_time\"/>\n        </div>\n      </div>\n      <div v-if=\"!has_result\" style=\"height: calc(100% - 40px)\">\n          <div class=\"response-default-body\">\n            <l-icon name=\"file\" color=\"#ccc\" height=\"3.2em\" width=\"3.2em\"></l-icon>\n            <div class=\"default-content\">Hit Send to get a response</div>\n          </div>\n      </div>\n      <div v-else class=\"response-body\">\n        <div class=\"response-body-path\" @click=\"copyPath\" v-if=\"result_json_path\">\n          {{result_json_path}} <i class=\"el-icon-copy-document\"></i>\n        </div>\n        <vue-scroll>\n          <div class=\"body-text-is-json\" v-if=\"result_is_json\">\n            <vue-json-pretty\n              path=\"$\"\n              :data=\"result.response_text\"\n              @click=\"resultTextClick\">\n            </vue-json-pretty>\n          </div>\n          <div v-else class=\"body-text-not-json\">\n            {{result.response_text}}\n          </div>\n        </vue-scroll>\n      </div>\n    </div>\n  </el-card>\n</template>\n\n<script>\nimport VueJsonPretty from 'vue-json-pretty'\nimport Category from '@/model/autotest/category'\nimport HttpCase from '@/model/autotest/http-case'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  props: {\n    operationType: {\n      type: Number\n    },\n    caseInfo: {\n      type: Object\n    }\n  },\n  components: {\n    VueJsonPretty,\n    AssertionsDetail,\n    ResponseStatus,\n  },\n  data() {\n    return {\n      case_info: {},\n      category_list: [],\n      default_case_info: {\n        category: '',\n        case_name: '',\n        api_url: 'http://',\n        api_port: null,\n        api_method: 'POST',\n        api_path: '',\n        description: '',\n        header_form: [{\n          enable: true,\n        }],\n        body_type: 1,\n        body_value: null,\n        variable_list: [{\n          enable: true,\n        }],\n        expected_list: [{\n          enable: true,\n        }],\n      },\n      config: {\n        method_list: ['POST', 'GET', 'PUT', 'DELETE'],\n        extract_type_list: [{\n          label: 'JsonPath提取',\n          value: 1,\n        }, {\n          label: '正则表达式提取',\n          value: 2,\n        }],\n        expected_type_list: [{\n          label: 'equals',\n          value: 1,\n        }, {\n          label: 'contains',\n          value: 2,\n        }, {\n          label: 'not empty or null',\n          value: 3,\n        }]\n      },\n      has_result: false, // 是否进行了请求\n      result: {},\n      result_css: {\n        status_code_type: 'success',\n        time_type: 'success',\n      },\n      result_is_json: false, // 返回body是否为json\n      result_json_path: '',\n    }\n  },\n  mounted() {\n    this.getCaseInfo()\n    this.getCategoryInfo()\n  },\n  methods: {\n    async getCategoryInfo() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    getCaseInfo() {\n      this.case_info = this.operationType === 1 ? { ...this.default_case_info } : { ...this.caseInfo }\n    },\n    async caseExecute() {\n      const res = await HttpCase.execute(this.case_info)\n      this.result = res\n      // 如果返回结果为json，则进行格式美化，并展示copy按钮；不为json则直接显示文本内容\n      if (this.isJson(res.response_text)) {\n        this.result.response_text = JSON.parse(res.response_text)\n        this.result_is_json = true\n      }\n      this.has_result = true\n    },\n    async saveCase() {\n      const res = this.operationType === 2 ? await HttpCase.updateCase(this.case_info) : await HttpCase.createCase(this.case_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('drawer-close')\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    eleIsDisable(index, data) {\n      return data.length - 1 === index\n    },\n    deleteRow(index, data) {\n      data.splice(index, 1)\n    },\n    headerChange() {\n      let isNeedCreate = true\n      this.case_info.header_form.forEach(item => {\n        if (!item.header_key && !item.header_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.header_form.push({ enable: true, header_key: '', header_value: '' })\n      }\n    },\n    variableChange() {\n      let isNeedCreate = true\n      this.case_info.variable_list.forEach(item => {\n        if (!item.extract_method && !item.extract_rule && !item.variable_name) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.variable_list.push({ enable: true, extract_method: '', extract_rule: '', variable_name: '' })\n      }\n    },\n    expectedChange() {\n      let isNeedCreate = true\n      this.case_info.expected_list.forEach(item => {\n        if (!item.extract_method && !item.extract_rule && !item.compare_type && !item.expected_value) {\n          // 没有空行，需要创建空行\n          isNeedCreate = false\n        }\n      })\n      if (isNeedCreate) {\n        this.case_info.expected_list.push({ enable: true, extract_method: '', extract_rule: '', compare_type: '', expected_value: '' })\n      }\n    },\n    // 点击json的key，获取jsonpath和data\n    resultTextClick(path) {\n      this.result_json_path = path\n    },\n    // 复制jsonPath\n    copyPath() {\n      const input = document.createElement('input')\n      input.value = this.result_json_path\n      document.body.appendChild(input)\n      input.select()\n      document.execCommand('Copy')\n      document.body.removeChild(input)\n      this.$message.success('复制成功')\n    },\n    isJson(str) {\n      if (typeof str !== 'string') {\n        return false\n      }\n      try {\n        const obj = JSON.parse(str)\n        return !!(typeof obj === 'object' && obj)\n      } catch (e) {\n        return false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .edit {\n    padding: 5px;\n\n    .info-row {\n      margin-bottom: 20px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      .info-cols {\n        display: flex;\n        align-items: center;\n      }\n\n      .title {\n        color: #333333;\n        font-weight: 500;\n        font-size: 14px;\n        width: 80px;\n      }\n\n      .category-col {\n        display: flex;\n        align-items: center;\n        margin-right: 20px;\n      }\n\n      .name-col {\n        display: flex;\n        align-items: center;\n        width: 400px;\n      }\n\n      .url-col {\n        display: flex;\n        align-items: center;\n      }\n    }\n\n    .request {\n      height: 210px;\n\n      .request-param {\n        height: 140px;\n        transform: translateY(-10px);\n\n        .kv-row {\n          margin-top: 10px;\n\n          .kv-checkbox {\n            width: 20px;\n            margin-right: 10px;\n          }\n\n          .kv-delete {\n            width: 60px;\n            margin-right: 10px;\n          }\n\n          .kv-select {\n            width: 500px;\n          }\n        }\n      }\n\n      .request-body {\n        width: 100%;\n        height: 100%;\n      }\n\n    }\n    .response {\n      height: 360px;\n      background-color: #FFFFFF;\n      border: 1px solid #dfe2e8;\n      box-shadow: 1px 3px 5px #DCDFE6;\n\n      .response-header {\n        background-color: #F6F7FA;\n        height: 40px;\n        display: flex;\n        justify-content:space-between;\n        align-items: center;\n        border-bottom: 1px solid #dfe2e8;\n\n        .response-title {\n          font-size: 15px;\n          color: #909399;\n          margin-left: 10px;\n        }\n\n        .response-info-list {\n          display: flex;\n          align-items: center;\n        }\n      }\n\n      .response-default-body {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        .default-content {\n          color: #909399;\n          margin-top: 10px;\n        }\n      }\n\n      .response-body {\n        height: calc(100% - 40px);\n        position: relative;\n\n        .response-body-path {\n          position: absolute;\n          width: auto;\n          top: 10px;\n          right: 20px;\n          color: #909399;\n          z-index: 999;\n        }\n\n        .body-text-is-json {\n          word-wrap: break-word;\n          margin: 10px 15px 10px 10px;\n        }\n\n        .body-text-not-json {\n          word-wrap: break-word;\n          margin: 10px 15px 10px 10px;\n          color: #909399;\n        }\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/component/autotest"}]}