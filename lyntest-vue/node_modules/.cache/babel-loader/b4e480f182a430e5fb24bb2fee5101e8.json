{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/common/node-edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/common/node-edit.vue","mtime":1606267348000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Node from '@/model/track/node';\nexport default {\n  data: function data() {\n    return {\n      name: 'node-edit',\n      form: {\n        name: ''\n      },\n      type: '',\n      node: {},\n      nodeIds: [],\n      formLabelWidth: '80px',\n      dialogFormVisible: false\n    };\n  },\n  props: {\n    treeNodes: {\n      type: Array\n    },\n    currentProject: {\n      type: Object\n    }\n  },\n  methods: {\n    open: function open(type, data, nodeIds) {\n      this.type = type;\n      this.node = data;\n\n      if (type === 'edit') {\n        this.form.name = this.node.name;\n      }\n\n      this.nodeIds = nodeIds;\n      this.dialogFormVisible = true;\n    },\n    saveNode: function () {\n      var _saveNode = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var param, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                param = {};\n                param.name = this.form.name.trim();\n                param.label = this.form.name;\n                param.project_id = this.currentProject.id;\n\n                if (!(this.type === 'add')) {\n                  _context.next = 12;\n                  break;\n                }\n\n                param.level = 1;\n\n                if (this.node) {\n                  // 非根节点\n                  param.parent_id = this.node.id;\n                  param.level = this.node.level + 1;\n                }\n\n                _context.next = 9;\n                return Node.createNode(param);\n\n              case 9:\n                res = _context.sent;\n                _context.next = 19;\n                break;\n\n              case 12:\n                if (!(this.type === 'edit')) {\n                  _context.next = 19;\n                  break;\n                }\n\n                param.id = this.node.id;\n                param.level = this.node.level;\n                param.nodeIds = this.nodeIds;\n                _context.next = 18;\n                return Node.updateNode(param);\n\n              case 18:\n                res = _context.sent;\n\n              case 19:\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.$emit('refresh');\n                  this.close();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveNode() {\n        return _saveNode.apply(this, arguments);\n      }\n\n      return saveNode;\n    }(),\n    close: function close() {\n      this.form.name = '';\n      this.dialogFormVisible = false;\n    }\n  }\n};",null]}