{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/layout/reuse-tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/layout/reuse-tab.vue","mtime":1607760303436},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport 'swiper/dist/css/swiper.css'; // eslint-disable-line\n\nexport default {\n  components: {\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  data: function data() {\n    return {\n      histories: [],\n      visible: false,\n      hasLeft: true,\n      hasRight: true,\n      top: 0,\n      left: 0,\n      index: 0,\n      swiperOption: {\n        slidesPerView: 'auto',\n        initialSlide: 0,\n        effect: 'slide',\n        spaceBetween: 1,\n        preventClicks: false,\n        freeMode: true,\n        mousewheel: {\n          sensitivity: 1.5\n        }\n      }\n    };\n  },\n  watch: {\n    $route: function $route(to) {\n      // 对路由变化作出响应...\n      var histories = this.histories;\n      var flag = histories.find(function (item) {\n        return item.path === to.path;\n      });\n\n      if (flag) {\n        return;\n      }\n\n      var ele = {};\n      ele.stageId = to.name;\n      ele.path = to.path;\n      ele.routePath = to.matched[to.matched.length - 1].path;\n      this.histories = [ele].concat(_toConsumableArray(histories));\n    },\n    logined: function logined(val) {\n      if (val) {\n        return;\n      }\n\n      this.closeAll();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    },\n    // 舞台改变时触发\n    stageList: function stageList() {\n      this.init();\n    },\n    histories: function histories(arr) {\n      if (arr.length < 2) {\n        this.eventBus.$emit('noReuse');\n      } else {\n        this.eventBus.$emit('hasReuse');\n      }\n    }\n  },\n  inject: ['eventBus'],\n  created: function created() {\n    var _this = this;\n\n    // 关闭窗口时执行\n    window.onbeforeunload = function () {\n      // 缓存历史记录\n      window.localStorage.setItem('history', JSON.stringify(_this.histories));\n    };\n  },\n  computed: _objectSpread({\n    logined: function logined() {\n      return this.$store.state.logined;\n    },\n    defaultRoute: function defaultRoute() {\n      return this.$store.state.defaultRoute;\n    }\n  }, mapGetters(['getStageByRoute', 'getStageByName', 'stageList'])),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.init();\n    this.eventBus.$on('clearTap', function () {\n      _this2.histories = [];\n    });\n  },\n  methods: {\n    init: function init() {\n      var _this3 = this;\n\n      var histories = []; // 获取当前的历史记录, 可能从本地存储, 可能直接获取当前的\n\n      var localHistory;\n\n      if (this.histories.length > 0) {\n        localHistory = _toConsumableArray(this.histories);\n      } else {\n        localHistory = window.localStorage.getItem('history') || '[]';\n        localHistory = JSON.parse(localHistory);\n      }\n\n      localHistory.forEach(function (item) {\n        var findResult;\n\n        if (item.name) {\n          findResult = _this3.getStageByName(item.name);\n        } else {\n          findResult = _this3.getStageByRoute(item.routePath);\n        }\n\n        if (!findResult) {\n          return;\n        }\n\n        histories.push(_objectSpread({}, item, {\n          stageId: findResult.name\n        }));\n        _this3.histories = histories;\n      });\n    },\n    filterIcon: function filterIcon(icon) {\n      if (!icon) {\n        return false;\n      }\n\n      return icon.indexOf('/') !== -1;\n    },\n    closeAll: function closeAll() {\n      this.histories = [];\n      this.$router.push(this.defaultRoute);\n    },\n    closeOthers: function closeOthers() {\n      this.$router.push(this.histories[this.index].path);\n      this.histories = [];\n    },\n    closeLeft: function closeLeft() {\n      this.histories.splice(0, this.index);\n    },\n    closeRight: function closeRight() {\n      this.histories.splice(this.index + 1, this.histories.length - this.index - 1);\n    },\n    onTags: function onTags(index, event) {\n      this.closeMenu();\n      var menuMinWidth = 126;\n      var offsetLeft = this.$el.getBoundingClientRect().left;\n      var offsetWidth = this.$el.offsetWidth;\n      var maxLeft = offsetWidth - menuMinWidth;\n      var left = event.clientX - offsetLeft + 15;\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      if (index === 0) {\n        this.hasLeft = false;\n      }\n\n      if (index + 1 === this.histories.length) {\n        this.hasRight = false;\n      }\n\n      this.top = 18;\n      this.index = index;\n      this.visible = true;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n      this.hasLeft = true;\n      this.hasRight = true;\n    },\n    close: function close(index) {\n      // 检测是否是当前页, 如果是当前页则自动切换路由\n      if (this.$route.path === this.histories[index].path) {\n        if (index > 0) {\n          this.$router.push(this.histories[index - 1].path);\n        } else if (this.histories.length > 1) {\n          this.$router.push(this.histories[1].path);\n        } else {\n          this.$router.push(this.defaultRoute);\n        }\n      } // 删除该历史记录\n\n\n      this.histories.splice(index, 1);\n      this.histories = _toConsumableArray(this.histories);\n    }\n  }\n};",{"version":3,"sources":["reuse-tab.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div v-if=\"histories.length > 1\" ref=\"resueTab\" class=\"reuse-tab\">\n    <swiper :options=\"swiperOption\" class=\"reuse-tab-wrap\">\n      <swiper-slide v-for=\"(item, index) in histories\" :key=\"item.path\">\n        <router-link\n          class=\"reuse-tab-item\"\n          :class=\"item.path === $route.path ? 'active' : ''\"\n          :to=\"item.path\"\n          @contextmenu.prevent.native=\"onTags(index, $event)\"\n        >\n          <i v-if=\"!filterIcon(stageList[item.stageId].icon)\" :class=\"stageList[item.stageId].icon\"></i>\n          <img v-else :src=\"stageList[item.stageId].icon\" style=\"width:16px;\" />\n          <span style=\"padding: 0 5px;\">{{ stageList[item.stageId].title }}</span>\n          <span class=\"el-icon-close\" @click.prevent.stop=\"close(index)\" />\n        </router-link>\n      </swiper-slide>\n    </swiper>\n\n    <ul v-show=\"visible\" :style=\"{ left: left + 'px', top: top + 'px' }\" class=\"contextmenu\">\n      <li @click=\"closeAll\">关闭所有</li>\n      <li @click=\"closeOthers\">关闭其他</li>\n      <li @click=\"closeLeft\" v-if=\"hasLeft\">关闭左侧</li>\n      <li @click=\"closeRight\" v-if=\"hasRight\">关闭右侧</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\n\nimport 'swiper/dist/css/swiper.css' // eslint-disable-line\n\nexport default {\n  components: { swiper, swiperSlide },\n  data() {\n    return {\n      histories: [],\n      visible: false,\n      hasLeft: true,\n      hasRight: true,\n      top: 0,\n      left: 0,\n      index: 0,\n      swiperOption: {\n        slidesPerView: 'auto',\n        initialSlide: 0,\n        effect: 'slide',\n        spaceBetween: 1,\n        preventClicks: false,\n        freeMode: true,\n        mousewheel: {\n          sensitivity: 1.5,\n        },\n      },\n    }\n  },\n  watch: {\n    $route(to) {\n      // 对路由变化作出响应...\n      const { histories } = this\n      const flag = histories.find(item => item.path === to.path)\n      if (flag) {\n        return\n      }\n      const ele = {}\n      ele.stageId = to.name\n      ele.path = to.path\n      ele.routePath = to.matched[to.matched.length - 1].path\n      this.histories = [ele, ...histories]\n    },\n    logined(val) {\n      if (val) {\n        return\n      }\n      this.closeAll()\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    },\n    // 舞台改变时触发\n    stageList() {\n      this.init()\n    },\n    histories(arr) {\n      if (arr.length < 2) {\n        this.eventBus.$emit('noReuse')\n      } else {\n        this.eventBus.$emit('hasReuse')\n      }\n    },\n  },\n  inject: ['eventBus'],\n  created() {\n    // 关闭窗口时执行\n    window.onbeforeunload = () => {\n      // 缓存历史记录\n      window.localStorage.setItem('history', JSON.stringify(this.histories))\n    }\n  },\n  computed: {\n    logined() {\n      return this.$store.state.logined\n    },\n    defaultRoute() {\n      return this.$store.state.defaultRoute\n    },\n    ...mapGetters(['getStageByRoute', 'getStageByName', 'stageList']),\n  },\n  mounted() {\n    this.init()\n    this.eventBus.$on('clearTap', () => {\n      this.histories = []\n    })\n  },\n  methods: {\n    init() {\n      const histories = []\n\n      // 获取当前的历史记录, 可能从本地存储, 可能直接获取当前的\n      let localHistory\n      if (this.histories.length > 0) {\n        localHistory = [...this.histories]\n      } else {\n        localHistory = window.localStorage.getItem('history') || '[]'\n        localHistory = JSON.parse(localHistory)\n      }\n\n      localHistory.forEach(item => {\n        let findResult\n        if (item.name) {\n          findResult = this.getStageByName(item.name)\n        } else {\n          findResult = this.getStageByRoute(item.routePath)\n        }\n        if (!findResult) {\n          return\n        }\n        histories.push({\n          ...item,\n          stageId: findResult.name,\n        })\n        this.histories = histories\n      })\n    },\n    filterIcon(icon) {\n      if (!icon) {\n        return false\n      }\n      return icon.indexOf('/') !== -1\n    },\n    closeAll() {\n      this.histories = []\n      this.$router.push(this.defaultRoute)\n    },\n    closeOthers() {\n      this.$router.push(this.histories[this.index].path)\n      this.histories = []\n    },\n    closeLeft() {\n      this.histories.splice(0, this.index)\n    },\n    closeRight() {\n      this.histories.splice(this.index + 1, this.histories.length - this.index - 1)\n    },\n    onTags(index, event) {\n      this.closeMenu()\n      const menuMinWidth = 126\n      const offsetLeft = this.$el.getBoundingClientRect().left\n      const { offsetWidth } = this.$el\n      const maxLeft = offsetWidth - menuMinWidth\n      const left = event.clientX - offsetLeft + 15\n\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n\n      if (index === 0) {\n        this.hasLeft = false\n      }\n\n      if (index + 1 === this.histories.length) {\n        this.hasRight = false\n      }\n\n      this.top = 18\n      this.index = index\n      this.visible = true\n    },\n    closeMenu() {\n      this.visible = false\n      this.hasLeft = true\n      this.hasRight = true\n    },\n    close(index) {\n      // 检测是否是当前页, 如果是当前页则自动切换路由\n      if (this.$route.path === this.histories[index].path) {\n        if (index > 0) {\n          this.$router.push(this.histories[index - 1].path)\n        } else if (this.histories.length > 1) {\n          this.$router.push(this.histories[1].path)\n        } else {\n          this.$router.push(this.defaultRoute)\n        }\n      }\n      // 删除该历史记录\n      this.histories.splice(index, 1)\n      this.histories = [...this.histories]\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.swiper-slide {\n  width: auto;\n  min-width: 126px;\n  display: flex;\n  height: $reusetab-height;\n  flex-direction: column;\n  justify-content: center;\n  background-color: $reuse-tab-item-background;\n  color: $right-side-font-color;\n}\n\n.reuse-tab-wrap {\n  bottom: 0;\n  left: 0;\n  user-select: none;\n  height: $reusetab-height;\n  background: $header-background;\n  font-size: 14px;\n  color: #8c98ae;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n\n  .reuse-tab-item {\n    box-sizing: border-box;\n    width: auto;\n    height: $reusetab-height;\n    min-width: 126px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 1em;\n    margin-right: 1px;\n    position: relative;\n    white-space: nowrap;\n\n    > i {\n      color: $theme;\n    }\n\n    .el-icon-close {\n      opacity: 0;\n      position: absolute;\n    }\n\n    &:hover {\n      background: $theme;\n      border: none;\n      color: #fff;\n\n      > i {\n        color: #fff;\n      }\n\n      .el-icon-close {\n        position: absolute;\n        display: inline-block;\n        width: 14px;\n        height: 14px;\n        top: 0;\n        right: 0;\n        opacity: 1;\n        border-radius: 0 0 0 14px;\n        background: rgba(255, 255, 255, 0.3);\n\n        &::before {\n          font-size: 12px;\n          position: absolute;\n          right: -1px;\n          transform: scale(0.7);\n        }\n      }\n    }\n  }\n\n  .active {\n    box-sizing: border-box;\n    height: 40px;\n    color: #ffffff;\n    background: $theme;\n    border: none;\n    position: relative;\n\n    > i {\n      color: #fff;\n    }\n\n    .el-icon-close {\n      position: absolute;\n      display: inline-block;\n      width: 14px;\n      height: 14px;\n      top: 0;\n      right: 0;\n      opacity: 1;\n      border-radius: 0 0 0 14px;\n      background: rgba(255, 255, 255, 0.3);\n\n      &::before {\n        font-size: 12px;\n        position: absolute;\n        right: -1px;\n        transform: scale(0.7);\n      }\n    }\n  }\n\n  .reuse-tab-wrap {\n    height: 100%;\n  }\n}\n.reuse-tab {\n  position: relative;\n  .contextmenu {\n    margin: 0;\n    background: #ffffff;\n    z-index: 3000;\n    position: absolute;\n    list-style-type: none;\n    padding: 5px 0;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 400;\n    color: #596c8e;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.3);\n    li {\n      margin: 0;\n      padding: 10px 20px;\n      cursor: pointer;\n      &:hover {\n        background: #ebeff8;\n        color: #6182c9;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/component/layout"}]}