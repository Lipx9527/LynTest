{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/model/autotest/collection.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/model/autotest/collection.js","mtime":1607483247000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { post, get, _delete } from '@/lin/plugin/axios';\n\nvar Collection =\n/*#__PURE__*/\nfunction () {\n  function Collection() {\n    _classCallCheck(this, Collection);\n  }\n\n  _createClass(Collection, [{\n    key: \"searchCollectionList\",\n    value: function () {\n      var _searchCollectionList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return post('/autotest/collection/list', data);\n\n              case 2:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function searchCollectionList(_x) {\n        return _searchCollectionList.apply(this, arguments);\n      }\n\n      return searchCollectionList;\n    }()\n  }, {\n    key: \"getCollectionDetail\",\n    value: function () {\n      var _getCollectionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return get(\"/autotest/collection/\".concat(id));\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getCollectionDetail(_x2) {\n        return _getCollectionDetail.apply(this, arguments);\n      }\n\n      return getCollectionDetail;\n    }()\n  }, {\n    key: \"createCollection\",\n    value: function () {\n      var _createCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return post('/autotest/collection/create', data);\n\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function createCollection(_x3) {\n        return _createCollection.apply(this, arguments);\n      }\n\n      return createCollection;\n    }()\n  }, {\n    key: \"updateCollection\",\n    value: function () {\n      var _updateCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return post('/autotest/collection/update', data);\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function updateCollection(_x4) {\n        return _updateCollection.apply(this, arguments);\n      }\n\n      return updateCollection;\n    }()\n  }, {\n    key: \"deleteCollection\",\n    value: function () {\n      var _deleteCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _delete(\"/autotest/collection/\".concat(id));\n\n              case 2:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteCollection(_x5) {\n        return _deleteCollection.apply(this, arguments);\n      }\n\n      return deleteCollection;\n    }()\n  }, {\n    key: \"getPocketInfo\",\n    value: function () {\n      var _getPocketInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                res = get(\"/autotest/collection/pocket/\".concat(id));\n                return _context6.abrupt(\"return\", res);\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getPocketInfo(_x6) {\n        return _getPocketInfo.apply(this, arguments);\n      }\n\n      return getPocketInfo;\n    }()\n  }, {\n    key: \"createPocket\",\n    value: function () {\n      var _createPocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return post('/autotest/collection/pocket/create', data);\n\n              case 2:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function createPocket(_x7) {\n        return _createPocket.apply(this, arguments);\n      }\n\n      return createPocket;\n    }()\n  }, {\n    key: \"updatePocket\",\n    value: function () {\n      var _updatePocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return post('/autotest/collection/pocket/update', data);\n\n              case 2:\n                res = _context8.sent;\n                return _context8.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function updatePocket(_x8) {\n        return _updatePocket.apply(this, arguments);\n      }\n\n      return updatePocket;\n    }()\n  }, {\n    key: \"deletePocket\",\n    value: function () {\n      var _deletePocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _delete(\"/autotest/collection/pocket/\".concat(id));\n\n              case 2:\n                res = _context9.sent;\n                return _context9.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function deletePocket(_x9) {\n        return _deletePocket.apply(this, arguments);\n      }\n\n      return deletePocket;\n    }()\n  }, {\n    key: \"insertCaseToPocket\",\n    value: function () {\n      var _insertCaseToPocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return post('/autotest/collection/case/create', data);\n\n              case 2:\n                res = _context10.sent;\n                return _context10.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function insertCaseToPocket(_x10) {\n        return _insertCaseToPocket.apply(this, arguments);\n      }\n\n      return insertCaseToPocket;\n    }()\n  }, {\n    key: \"batchInsertCase\",\n    value: function () {\n      var _batchInsertCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return post('/autotest/collection/case/batchCreate', data);\n\n              case 2:\n                res = _context11.sent;\n                return _context11.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function batchInsertCase(_x11) {\n        return _batchInsertCase.apply(this, arguments);\n      }\n\n      return batchInsertCase;\n    }()\n  }, {\n    key: \"deleteCaseFromPocket\",\n    value: function () {\n      var _deleteCaseFromPocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return post('/autotest/collection/case/delete', data);\n\n              case 2:\n                res = _context12.sent;\n                return _context12.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      function deleteCaseFromPocket(_x12) {\n        return _deleteCaseFromPocket.apply(this, arguments);\n      }\n\n      return deleteCaseFromPocket;\n    }()\n  }, {\n    key: \"batchDeleteCase\",\n    value: function () {\n      var _batchDeleteCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return post('/autotest/collection/case/batchDelete', data);\n\n              case 2:\n                res = _context13.sent;\n                return _context13.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      function batchDeleteCase(_x13) {\n        return _batchDeleteCase.apply(this, arguments);\n      }\n\n      return batchDeleteCase;\n    }()\n  }, {\n    key: \"nodePosition\",\n    value: function () {\n      var _nodePosition = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return post('/autotest/collection/position', data);\n\n              case 2:\n                res = _context14.sent;\n                return _context14.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function nodePosition(_x14) {\n        return _nodePosition.apply(this, arguments);\n      }\n\n      return nodePosition;\n    }()\n  }]);\n\n  return Collection;\n}();\n\nexport default new Collection();",null]}