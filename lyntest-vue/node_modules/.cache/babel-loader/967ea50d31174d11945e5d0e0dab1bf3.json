{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/sql/database-manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/sql/database-manage.vue","mtime":1606834545571},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataBase from '@/model/sql/database';\nexport default {\n  data: function data() {\n    return {\n      tableData: [],\n      dialog_visible: false,\n      edit_type: 1,\n      db_info: {},\n      default_db_info: {\n        database_name: '',\n        url: '',\n        username: '',\n        password: '',\n        database_type: 1\n      },\n      db_type_list: [{\n        label: 'MySQL',\n        value: 1\n      }, {\n        label: 'Oracle',\n        value: 2\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.getDataBaseList();\n  },\n  methods: {\n    getDataBaseList: function () {\n      var _getDataBaseList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return DataBase.getDbList();\n\n              case 2:\n                res = _context.sent;\n                res.forEach(function (e) {\n                  e.db_type = e.database_type === 1 ? 'MySQL' : 'Oracle';\n                });\n                this.tableData = res;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getDataBaseList() {\n        return _getDataBaseList.apply(this, arguments);\n      }\n\n      return getDataBaseList;\n    }(),\n    createDataBase: function createDataBase() {\n      this.db_info = _objectSpread({}, this.default_db_info);\n      this.dialog_visible = true;\n      this.edit_type = 1;\n    },\n    handleEdit: function handleEdit(row) {\n      this.edit_type = 2;\n      this.dialog_visible = true;\n      this.db_info = _objectSpread({}, row);\n    },\n    deleteDataBase: function () {\n      var _deleteDataBase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return DataBase.deleteDB(id);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.getDataBaseList();\n                } else {\n                  this.$message.error('删除数据库功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteDataBase(_x) {\n        return _deleteDataBase.apply(this, arguments);\n      }\n\n      return deleteDataBase;\n    }(),\n    saveDataBase: function () {\n      var _saveDataBase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.edit_type === 1)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 3;\n                return DataBase.createDB(this.db_info);\n\n              case 3:\n                _context3.t0 = _context3.sent;\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.next = 8;\n                return DataBase.updateDB(this.db_info);\n\n              case 8:\n                _context3.t0 = _context3.sent;\n\n              case 9:\n                res = _context3.t0;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.dialog_visible = false;\n                  this.getDataBaseList();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveDataBase() {\n        return _saveDataBase.apply(this, arguments);\n      }\n\n      return saveDataBase;\n    }()\n  }\n};",{"version":3,"sources":["database-manage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header\"><div class=\"title\">数据库管理</div></div>\n    <el-button type=\"primary\" @click=\"createDataBase\" size=\"small\">新 增</el-button>\n    <br/>\n    <br/>\n    <el-table :data=\"tableData\">\n      <el-table-column prop=\"database_name\" label=\"数据库名\" sortable></el-table-column>\n      <el-table-column prop=\"url\" label=\"数据库地址\" sortable></el-table-column>\n      <el-table-column prop=\"username\" label=\"用户名\" sortable></el-table-column>\n      <el-table-column prop=\"password\" label=\"密码\" sortable></el-table-column>\n      <el-table-column prop=\"db_type\" label=\"类型\" sortable>\n        <template slot-scope=\"scope\">\n          <el-tag type=\"success\" disable-transitions>{{scope.row.db_type}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"deleteDataBase(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :visible.sync=\"dialog_visible\" width=\"450px\">\n      <el-form :model=\"db_info\" label-width=\"100px\">\n        <el-form-item label=\"数据库名\">\n          <el-input v-model=\"db_info.database_name\" placeholder=\"xxx库\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"数据库地址\">\n          <el-input v-model=\"db_info.url\" placeholder=\"127.0.0.1\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"db_info.username\" placeholder=\"username\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\">\n          <el-input v-model=\"db_info.password\" placeholder=\"password\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\">\n          <el-select v-model=\"db_info.database_type\">\n            <el-option v-for=\"item in db_type_list\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"saveDataBase\">保 存</el-button>\n        <el-button @click=\"dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport DataBase from '@/model/sql/database'\n\nexport default {\n  data() {\n    return {\n      tableData: [],\n      dialog_visible: false,\n      edit_type: 1,\n      db_info: {},\n      default_db_info: {\n        database_name: '',\n        url: '',\n        username: '',\n        password: '',\n        database_type: 1,\n      },\n      db_type_list: [{\n        label: 'MySQL',\n        value: 1,\n      }, {\n        label: 'Oracle',\n        value: 2,\n      }],\n    }\n  },\n  mounted() {\n    this.getDataBaseList()\n  },\n  methods: {\n    async getDataBaseList() {\n      const res = await DataBase.getDbList()\n      res.forEach(e => {\n        e.db_type = e.database_type === 1 ? 'MySQL' : 'Oracle'\n      })\n      this.tableData = res\n    },\n    createDataBase() {\n      this.db_info = { ...this.default_db_info }\n      this.dialog_visible = true\n      this.edit_type = 1\n    },\n    handleEdit(row) {\n      this.edit_type = 2\n      this.dialog_visible = true\n      this.db_info = { ...row }\n    },\n    async deleteDataBase(id) {\n      const res = await DataBase.deleteDB(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.getDataBaseList()\n      } else {\n        this.$message.error('删除数据库功能异常')\n      }\n    },\n    async saveDataBase() {\n      const res = this.edit_type === 1 ? await DataBase.createDB(this.db_info) : await DataBase.updateDB(this.db_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.dialog_visible = false\n        this.getDataBaseList()\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n//noinspection CssUnknownTarget\n@import \"@/static/css/common.scss\";\n</style>\n"],"sourceRoot":"src/view/sql"}]}