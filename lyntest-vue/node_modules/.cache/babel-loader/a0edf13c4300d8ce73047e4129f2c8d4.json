{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/admin/group/group-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/admin/group/group-list.vue","mtime":1606834545538},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Admin from '@/lin/model/admin';\nimport LinTable from '@/component/base/table/lin-table';\nexport default {\n  components: {\n    LinTable: LinTable\n  },\n  inject: ['eventBus'],\n  data: function data() {\n    return {\n      id: 0,\n      // 分组id\n      tableData: [],\n      // 表格数据\n      tableColumn: [],\n      // 表头数据\n      operate: [],\n      // 表格按键操作区\n      dialogFormVisible: false,\n      // 是否弹窗\n      labelPosition: 'right',\n      // 设置label位置\n      form: {\n        // 表单信息\n        name: '',\n        info: ''\n      },\n      cacheForm: {\n        // 缓存第一次的表单信息\n        name: '',\n        info: ''\n      },\n      loading: false,\n      activeTab: '修改信息',\n      // tab 标题\n      rules: {\n        // 表单验证规则\n        name: [{\n          required: true,\n          message: '请输入分组名称',\n          trigger: 'blur'\n        }],\n        info: []\n      }\n    };\n  },\n  methods: {\n    // 获取所有分组并传给table渲染\n    getAllGroups: function () {\n      var _getAllGroups = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.loading = true;\n                _context.next = 4;\n                return Admin.getAllGroups();\n\n              case 4:\n                this.tableData = _context.sent;\n                this.loading = false;\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.loading = false;\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function getAllGroups() {\n        return _getAllGroups.apply(this, arguments);\n      }\n\n      return getAllGroups;\n    }(),\n    confirmEdit: function () {\n      var _confirmEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.form.name === '')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.$message.warning('请将信息填写完整');\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                if (!(this.cacheForm.name !== this.form.name || this.cacheForm.info !== this.form.info)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 6;\n                return Admin.updateOneGroup(this.form.name, this.form.info, this.id);\n\n              case 6:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.getAllGroups();\n                }\n\n              case 8:\n                this.dialogFormVisible = false;\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function confirmEdit() {\n        return _confirmEdit.apply(this, arguments);\n      }\n\n      return confirmEdit;\n    }(),\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    // 获取所拥有的权限并渲染  由子组件提供\n    handleEdit: function handleEdit(val) {\n      var selectedData; // 单击 编辑按键\n\n      if (val.index >= 0) {\n        selectedData = val.row;\n      } else {\n        // 单机 table row\n        selectedData = val;\n      }\n\n      this.id = selectedData.id;\n      this.form.name = selectedData.name;\n      this.form.info = selectedData.info;\n      this.cacheForm = _objectSpread({}, this.form);\n      this.dialogFormVisible = true;\n    },\n    goToGroupEditPage: function goToGroupEditPage(val) {\n      var selectedData; // 单击 编辑按键\n\n      if (val.index >= 0) {\n        selectedData = val.row;\n      } else {\n        // 单机 table row\n        selectedData = val;\n      }\n\n      this.id = selectedData.id;\n      this.$router.push({\n        path: '/admin/group/edit',\n        query: {\n          id: selectedData.id\n        }\n      });\n    },\n    handleDelete: function handleDelete(val) {\n      var _this = this;\n\n      var res;\n      this.$confirm('此操作将永久删除该分组, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _this.loading = true;\n                _context3.next = 4;\n                return Admin.deleteOneGroup(val.row.id);\n\n              case 4:\n                res = _context3.sent;\n                _context3.next = 11;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                _this.loading = false;\n                console.log(_context3.t0);\n\n              case 11:\n                if (!(res.code < window.MAX_SUCCESS_CODE)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                _context3.next = 14;\n                return _this.getAllGroups();\n\n              case 14:\n                _this.$message({\n                  type: 'success',\n                  message: \"\".concat(res.message)\n                });\n\n                _context3.next = 19;\n                break;\n\n              case 17:\n                _this.loading = false;\n\n                _this.$message({\n                  type: 'error',\n                  message: \"\".concat(res.message)\n                });\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      })));\n    },\n    // 双击 table row\n    rowClick: function rowClick(row) {\n      this.handleEdit(row);\n    },\n    // 弹框 右上角 X\n    handleClose: function handleClose(done) {\n      done();\n    },\n    // 切换tab栏\n    handleClick: function handleClick(tab) {\n      this.activeTab = tab.name;\n    },\n    // 监听分添加组是否成功\n    addGroup: function () {\n      var _addGroup = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(flag) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(flag === true)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.getAllGroups();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function addGroup(_x) {\n        return _addGroup.apply(this, arguments);\n      }\n\n      return addGroup;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.getAllGroups();\n\n            case 2:\n              this.tableColumn = [{\n                prop: 'name',\n                label: '名称'\n              }, {\n                prop: 'info',\n                label: '信息'\n              }]; // 设置表头信息\n\n              this.operate = [{\n                name: '信息',\n                func: 'handleEdit',\n                type: 'primary'\n              }, {\n                name: '权限',\n                func: 'goToGroupEditPage',\n                type: 'success'\n              }, {\n                name: '删除',\n                func: 'handleDelete',\n                type: 'danger'\n              }]; // 监听添加分组是否成功\n\n              this.eventBus.$on('addGroup', this.addGroup);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    this.eventBus.$off('addUser', this.addGroup);\n  }\n};",{"version":3,"sources":["group-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">分组列表信息</div>\n    <lin-table\n      :tableColumn=\"tableColumn\"\n      :tableData=\"tableData\"\n      :operate=\"operate\"\n      @handleEdit=\"handleEdit\"\n      @goToGroupEditPage=\"goToGroupEditPage\"\n      @handleDelete=\"handleDelete\"\n      @row-click=\"rowClick\"\n      v-loading=\"loading\"\n    >\n    </lin-table>\n    <el-dialog\n      title=\"分组信息\"\n      :append-to-body=\"true\"\n      :visible.sync=\"dialogFormVisible\"\n      :before-close=\"handleClose\"\n      class=\"groupListInfoDialog\"\n    >\n      <div style=\"margin-top:-25px;\">\n        <el-form\n          status-icon\n          v-if=\"dialogFormVisible\"\n          ref=\"form\"\n          label-width=\"120px\"\n          :model=\"form\"\n          label-position=\"labelPosition\"\n          :rules=\"rules\"\n          style=\"margin-left:-35px;margin-bottom:-35px;margin-top:15px;\"\n        >\n          <el-form-item label=\"分组名称\" prop=\"name\">\n            <el-input size=\"medium\" clearable v-model=\"form.name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"分组描述\" prop=\"info\">\n            <el-input size=\"medium\" clearable v-model=\"form.info\"></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\" style=\"padding-left:5px;\">\n        <el-button type=\"primary\" @click=\"confirmEdit\">确 定</el-button>\n        <el-button @click=\"resetForm('form')\">重 置</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Admin from '@/lin/model/admin'\nimport LinTable from '@/component/base/table/lin-table'\n\nexport default {\n  components: {\n    LinTable,\n  },\n  inject: ['eventBus'],\n  data() {\n    return {\n      id: 0, // 分组id\n      tableData: [], // 表格数据\n      tableColumn: [], // 表头数据\n      operate: [], // 表格按键操作区\n      dialogFormVisible: false, // 是否弹窗\n      labelPosition: 'right', // 设置label位置\n      form: {\n        // 表单信息\n        name: '',\n        info: '',\n      },\n      cacheForm: {\n        // 缓存第一次的表单信息\n        name: '',\n        info: '',\n      },\n      loading: false,\n      activeTab: '修改信息', // tab 标题\n      rules: {\n        // 表单验证规则\n        name: [{ required: true, message: '请输入分组名称', trigger: 'blur' }],\n        info: [],\n      },\n    }\n  },\n  methods: {\n    // 获取所有分组并传给table渲染\n    async getAllGroups() {\n      try {\n        this.loading = true\n        this.tableData = await Admin.getAllGroups()\n        this.loading = false\n      } catch (e) {\n        this.loading = false\n        console.log(e)\n      }\n    },\n    async confirmEdit() {\n      // 修改分组信息\n      if (this.form.name === '') {\n        this.$message.warning('请将信息填写完整')\n        return\n      }\n      if (this.cacheForm.name !== this.form.name || this.cacheForm.info !== this.form.info) {\n        // eslint-disable-line\n        const res = await Admin.updateOneGroup(this.form.name, this.form.info, this.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          this.getAllGroups()\n        }\n      }\n      this.dialogFormVisible = false\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    // 获取所拥有的权限并渲染  由子组件提供\n    handleEdit(val) {\n      let selectedData\n      // 单击 编辑按键\n      if (val.index >= 0) {\n        selectedData = val.row\n      } else {\n        // 单机 table row\n        selectedData = val\n      }\n      this.id = selectedData.id\n      this.form.name = selectedData.name\n      this.form.info = selectedData.info\n      this.cacheForm = { ...this.form }\n      this.dialogFormVisible = true\n    },\n    goToGroupEditPage(val) {\n      let selectedData\n      // 单击 编辑按键\n      if (val.index >= 0) {\n        selectedData = val.row\n      } else {\n        // 单机 table row\n        selectedData = val\n      }\n      this.id = selectedData.id\n      this.$router.push({ path: '/admin/group/edit', query: { id: selectedData.id } })\n    },\n    handleDelete(val) {\n      let res\n      this.$confirm('此操作将永久删除该分组, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        try {\n          this.loading = true\n          res = await Admin.deleteOneGroup(val.row.id)\n        } catch (e) {\n          this.loading = false\n          console.log(e)\n        }\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          await this.getAllGroups()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        } else {\n          this.loading = false\n          this.$message({\n            type: 'error',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    // 双击 table row\n    rowClick(row) {\n      this.handleEdit(row)\n    },\n    // 弹框 右上角 X\n    handleClose(done) {\n      done()\n    },\n    // 切换tab栏\n    handleClick(tab) {\n      this.activeTab = tab.name\n    },\n    // 监听分添加组是否成功\n    async addGroup(flag) {\n      if (flag === true) {\n        await this.getAllGroups()\n      }\n    },\n  },\n  async created() {\n    await this.getAllGroups()\n    this.tableColumn = [{ prop: 'name', label: '名称' }, { prop: 'info', label: '信息' }] // 设置表头信息\n    this.operate = [\n      { name: '信息', func: 'handleEdit', type: 'primary' },\n      { name: '权限', func: 'goToGroupEditPage', type: 'success' },\n      { name: '删除', func: 'handleDelete', type: 'danger' },\n    ]\n    // 监听添加分组是否成功\n    this.eventBus.$on('addGroup', this.addGroup)\n  },\n  beforeDestroy() {\n    this.eventBus.$off('addUser', this.addGroup)\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n  }\n}\n.groupListInfoDialog /deep/ .el-dialog__footer {\n  text-align: left;\n  padding-left: 30px;\n}\n.groupListInfoDialog /deep/ .el-dialog__header {\n  padding-left: 30px;\n}\n\n.groupListInfoDialog /deep/ .el-dialog__body {\n  padding: 30px;\n}\n</style>\n"],"sourceRoot":"src/view/admin/group"}]}