{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/report-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/report-list.vue","mtime":1608796490993},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CollectionReport from '@/model/autotest/collection-report';\nexport default {\n  data: function data() {\n    return {\n      search: {\n        page: 1,\n        count: 10,\n        collection_name: ''\n      },\n      total: 0,\n      report_list: []\n    };\n  },\n  methods: {\n    getReportList: function () {\n      var _getReportList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return CollectionReport.searchReportList(this.search);\n\n              case 2:\n                res = _context.sent;\n                this.report_list = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getReportList() {\n        return _getReportList.apply(this, arguments);\n      }\n\n      return getReportList;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.getReportList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.getReportList();\n    },\n    checkDetail: function checkDetail(id) {\n      this.$router.push(\"/autotest/report-detail/\".concat(id));\n    }\n  },\n  mounted: function mounted() {\n    this.getReportList();\n  }\n};",{"version":3,"sources":["report-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,gBAAA,MAAA,oCAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,eAAA,EAAA;AAHA,OADA;AAMA,MAAA,KAAA,EAAA,CANA;AAOA,MAAA,WAAA,EAAA;AAPA,KAAA;AASA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,aADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,gBAAA,CAAA,gBAAA,CAAA,KAAA,MAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAGA,qBAAA,WAAA,GAAA,GAAA,CAAA,KAAA;AACA,qBAAA,KAAA,GAAA,GAAA,CAAA,KAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMA,IAAA,gBANA,4BAMA,GANA,EAMA;AACA,WAAA,MAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,aAAA;AACA,KATA;AAUA,IAAA,mBAVA,+BAUA,GAVA,EAUA;AACA,WAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA,WAAA,aAAA;AACA,KAbA;AAcA,IAAA,WAdA,uBAcA,EAdA,EAcA;AACA,WAAA,OAAA,CAAA,IAAA,mCAAA,EAAA;AACA;AAhBA,GAZA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,aAAA;AACA;AAhCA,CAAA","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div>\n    <el-pagination background\n                   @size-change=\"handleSizeChange\"\n                   @current-change=\"handleCurrentChange\"\n                   :current-page=\"search.page\"\n                   :page-size=\"search.count\"\n                   :page-sizes=\"[10, 20, 50, 100]\"\n                   :total=\"total\" layout=\"total, sizes, prev, pager, next\" style=\"float: right;margin-top: 5px;margin-bottom: 5px\"/>\n    <el-table :data=\"report_list\" stripe>\n      <el-table-column prop=\"collection_name\" label=\"集合名\"></el-table-column>\n      <el-table-column prop=\"execute_name\" label=\"执行人\"></el-table-column>\n      <el-table-column prop=\"execute_time\" label=\"执行时间\"></el-table-column>\n      <el-table-column label=\"测试结果\">\n        <template v-slot:default=\"scope\">\n          <el-tag type=\"success\" v-if=\"scope.row.error_count === 0\">通过</el-tag>\n          <el-tag type=\"danger\" v-else>未通过</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        width=\"100\"\n        align=\"center\"\n        fixed=\"right\"\n        label=\"操作\">\n        <template v-slot:default=\"scope\">\n          <el-button\n            size=\"mini\"\n            style=\"margin:auto\"\n            type=\"primary\"\n            @click=\"checkDetail(scope.row.id)\">查看</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport CollectionReport from '@/model/autotest/collection-report'\n\nexport default {\n  data() {\n    return {\n      search: {\n        page: 1,\n        count: 10,\n        collection_name: '',\n      },\n      total: 0,\n      report_list: [],\n    }\n  },\n  methods: {\n    async getReportList() {\n      const res = await CollectionReport.searchReportList(this.search)\n      this.report_list = res.items\n      this.total = res.total\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.getReportList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.getReportList()\n    },\n    checkDetail(id) {\n      this.$router.push(`/autotest/report-detail/${id}`)\n    }\n  },\n  mounted() {\n    this.getReportList()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/view/autotest"}]}