{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/lin/model/user.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/lin/model/user.js","mtime":1606834545475},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport _axios, { post, get, put } from '@/lin/plugin/axios';\nimport { saveTokens } from '../util/token';\nimport store from '@/store';\n\nvar User =\n/*#__PURE__*/\nfunction () {\n  function User() {\n    _classCallCheck(this, User);\n  }\n\n  _createClass(User, null, [{\n    key: \"register\",\n\n    /**\n     * 分配用户\n     * @param {object} data 注册信息\n     */\n    value: function register(data) {\n      return _axios({\n        method: 'post',\n        url: 'cms/user/register',\n        data: data,\n        handleError: true\n      });\n    }\n    /**\n     * 登陆获取tokens\n     * @param {string} code 用户工号\n     * @param {string} password 密码\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(code, password) {\n        var tokens;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return post('cms/user/login', {\n                  code: code,\n                  password: password\n                });\n\n              case 2:\n                tokens = _context.sent;\n                saveTokens(tokens.access_token, tokens.refresh_token);\n                return _context.abrupt(\"return\", tokens);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getToken(_x, _x2) {\n        return _getToken.apply(this, arguments);\n      }\n\n      return getToken;\n    }()\n    /**\n     * 获取当前用户信息，并返回User实例\n     */\n\n  }, {\n    key: \"getInformation\",\n    value: function () {\n      var _getInformation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var info, storeUser;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return get('cms/user/information');\n\n              case 2:\n                info = _context2.sent;\n                storeUser = store.getters.user === null ? {} : store.getters.user;\n                return _context2.abrupt(\"return\", Object.assign(_objectSpread({}, storeUser), info));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInformation() {\n        return _getInformation.apply(this, arguments);\n      }\n\n      return getInformation;\n    }()\n    /**\n     * 获取当前用户信息和所拥有的权限\n     */\n\n  }, {\n    key: \"getPermissions\",\n    value: function () {\n      var _getPermissions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var info, storeUser;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return get('cms/user/permissions');\n\n              case 2:\n                info = _context3.sent;\n                console.log(info);\n                storeUser = store.getters.user === null ? {} : store.getters.user;\n                return _context3.abrupt(\"return\", Object.assign(_objectSpread({}, storeUser), info));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPermissions() {\n        return _getPermissions.apply(this, arguments);\n      }\n\n      return getPermissions;\n    }()\n    /**\n     * 用户修改密码\n     * @param {string} newPassword 新密码\n     * @param {string} confirmPassword 确认新密码\n     * @param {string} oldPassword 旧密码\n     */\n\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(_ref) {\n      var old_password = _ref.old_password,\n          new_password = _ref.new_password,\n          confirm_password = _ref.confirm_password;\n      return put('cms/user/change_password', {\n        new_password: new_password,\n        confirm_password: confirm_password,\n        old_password: old_password\n      });\n    }\n  }]);\n\n  return User;\n}();\n\nexport { User as default };",null]}