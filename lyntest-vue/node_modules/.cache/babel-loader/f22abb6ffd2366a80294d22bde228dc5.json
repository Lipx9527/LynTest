{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/mock/mock-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/mock/mock-list.vue","mtime":1608862962611},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { codemirror } from 'vue-codemirror';\nimport Mock from '@/model/mock';\nimport LynSearch from '@/component/lyn/lyn-search'; // require css\n\n/* eslint-disable */\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/javascript/javascript.js';\nimport 'codemirror/theme/cobalt.css';\nexport default {\n  components: {\n    codemirror: codemirror,\n    LynSearch: LynSearch\n  },\n  data: function data() {\n    return {\n      search: {\n        path: '',\n        count: 10,\n        page: 1\n      },\n      total: 0,\n      operation_type: 0,\n      mock_list: [],\n      mock_info: {},\n      default_mock_info: {\n        path: '',\n        method: 'POST',\n        description: ''\n      },\n      drawer_visible: false,\n      drawer_title: false,\n      method_list: ['POST', 'GET', 'PUT', 'DELETE'],\n      req_active_tab: 'request_body',\n      res_active_tab: 'response_body',\n      codemirror_options: {\n        tabSize: 4,\n        mode: 'text/javascript',\n        theme: 'cobalt',\n        lineNumbers: true,\n        line: true\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.searchMockApiList();\n  },\n  methods: {\n    searchMockApiList: function () {\n      var _searchMockApiList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Mock.searchMockList(this.search);\n\n              case 2:\n                res = _context.sent;\n                this.mock_list = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function searchMockApiList() {\n        return _searchMockApiList.apply(this, arguments);\n      }\n\n      return searchMockApiList;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.searchMockApiList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.searchMockApiList();\n    },\n    createMockApi: function createMockApi() {\n      this.drawer_visible = true;\n      this.operation_type = 1;\n      this.mock_info = _objectSpread({}, this.default_mock_info);\n    },\n    saveMockApi: function () {\n      var _saveMockApi = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.operation_type === 1)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 3;\n                return Mock.createMock(this.mock_info);\n\n              case 3:\n                _context2.t0 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.next = 8;\n                return Mock.updateMock(this.mock_info);\n\n              case 8:\n                _context2.t0 = _context2.sent;\n\n              case 9:\n                res = _context2.t0;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.drawer_visible = false;\n                  this.searchMockApiList();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function saveMockApi() {\n        return _saveMockApi.apply(this, arguments);\n      }\n\n      return saveMockApi;\n    }(),\n    handleEdit: function handleEdit(row) {\n      this.drawer_visible = true;\n      this.operation_type = 2;\n      this.mock_info = _objectSpread({}, row);\n    },\n    handleDelete: function () {\n      var _handleDelete = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Mock.deleteMock(id);\n\n              case 2:\n                res = _context3.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.searchMockApiList();\n                } else {\n                  this.$message.error('删除功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleDelete(_x) {\n        return _handleDelete.apply(this, arguments);\n      }\n\n      return handleDelete;\n    }(),\n    handleCopy: function handleCopy(value) {\n      var input = document.createElement('input');\n      input.value = \"\".concat(process.env.VUE_APP_BASE_URL, \"/mock/dynamic\").concat(value);\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand('Copy');\n      document.body.removeChild(input);\n      this.$message.success('已复制路径至剪贴板');\n    }\n  }\n};",null]}