{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/model/autotest/category.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/model/autotest/category.js","mtime":1600136707000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { get, post, _delete } from '@/lin/plugin/axios';\n\nvar Category =\n/*#__PURE__*/\nfunction () {\n  function Category() {\n    _classCallCheck(this, Category);\n  }\n\n  _createClass(Category, [{\n    key: \"getCategoryList\",\n    value: function () {\n      var _getCategoryList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return get('/autotest/category/list');\n\n              case 2:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getCategoryList() {\n        return _getCategoryList.apply(this, arguments);\n      }\n\n      return getCategoryList;\n    }()\n  }, {\n    key: \"createCategory\",\n    value: function () {\n      var _createCategory = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return post('/autotest/category/create', data);\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function createCategory(_x) {\n        return _createCategory.apply(this, arguments);\n      }\n\n      return createCategory;\n    }()\n  }, {\n    key: \"updateCategory\",\n    value: function () {\n      var _updateCategory = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return post('/autotest/category/update', data);\n\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateCategory(_x2) {\n        return _updateCategory.apply(this, arguments);\n      }\n\n      return updateCategory;\n    }()\n  }, {\n    key: \"deleteCategory\",\n    value: function () {\n      var _deleteCategory = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _delete(\"/autotest/category/\".concat(id));\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteCategory(_x3) {\n        return _deleteCategory.apply(this, arguments);\n      }\n\n      return deleteCategory;\n    }()\n  }]);\n\n  return Category;\n}();\n\nexport default new Category();",{"version":3,"sources":["/Users/lyn/Desktop/lyntest/lyntest-vue/src/model/autotest/category.js"],"names":["get","post","_delete","Category","res","data","id"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,OAApB,QAAmC,oBAAnC;;IAEMC,Q;;;;;;;;;;;;;;;;;;;uBAEgBH,GAAG,CAAC,yBAAD,C;;;AAAfI,gBAAAA,G;iDACCA,G;;;;;;;;;;;;;;;;;;;;;iDAGYC,I;;;;;;;uBACDJ,IAAI,CAAC,2BAAD,EAA8BI,IAA9B,C;;;AAAhBD,gBAAAA,G;kDACCA,G;;;;;;;;;;;;;;;;;;;;;iDAGYC,I;;;;;;;uBACDJ,IAAI,CAAC,2BAAD,EAA8BI,IAA9B,C;;;AAAhBD,gBAAAA,G;kDACCA,G;;;;;;;;;;;;;;;;;;;;;iDAGYE,E;;;;;;;uBACDJ,OAAO,8BAAuBI,EAAvB,E;;;AAAnBF,gBAAAA,G;kDACCA,G;;;;;;;;;;;;;;;;;;;;;AAIX,eAAe,IAAID,QAAJ,EAAf","sourcesContent":["import { get, post, _delete } from '@/lin/plugin/axios'\n\nclass Category {\n  async getCategoryList() {\n    const res = await get('/autotest/category/list')\n    return res\n  }\n\n  async createCategory(data) {\n    const res = await post('/autotest/category/create', data)\n    return res\n  }\n\n  async updateCategory(data) {\n    const res = await post('/autotest/category/update', data)\n    return res\n  }\n\n  async deleteCategory(id) {\n    const res = await _delete(`/autotest/category/${id}`)\n    return res\n  }\n}\n\nexport default new Category()\n"]}]}