{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/center/center.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/center/center.vue","mtime":1606834545534},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport Vue from 'vue';\nimport Croppa from 'vue-croppa';\nimport User from '@/lin/model/user';\nimport 'vue-croppa/dist/vue-croppa.css';\nimport defaultAvatar from '@/assets/image/user/user.png';\nVue.use(Croppa);\nvar width = 150;\nvar height = 150;\nexport default {\n  name: 'center',\n  components: {},\n  data: function data() {\n    var _this = this;\n\n    var oldPassword = function oldPassword(rule, value, callback) {\n      // eslint-disable-line\n      if (!value) {\n        return callback(new Error('原始密码不能为空'));\n      }\n\n      if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'));\n      }\n\n      callback();\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'));\n      } else {\n        if (_this.form.checkPassword !== '') {\n          _this.$refs.form.validateField('confirm_password');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.new_password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      username: null,\n      form: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      rules: {\n        old_password: [{\n          validator: oldPassword,\n          trigger: 'blur',\n          required: true\n        }],\n        new_password: [{\n          validator: validatePassword,\n          trigger: 'blur',\n          required: true\n        }],\n        confirm_password: [{\n          validator: validatePassword2,\n          trigger: 'blur',\n          required: true\n        }]\n      },\n      cropRule: {\n        width: width,\n        height: height\n      },\n      imgRule: {\n        minWidth: width,\n        minHeight: height\n      },\n      cropVisible: false,\n      cropImg: '',\n      croppa: {},\n      imgInfo: null,\n      quality: 1,\n      defaultAvatar: defaultAvatar\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user'])),\n  watch: {\n    cropVisible: function cropVisible(val) {\n      if (!val) {\n        this.$refs.croppa.remove();\n        this.cropImg = '';\n        this.imgInfo = null;\n      }\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: _objectSpread({}, mapActions(['loginOut', 'setUserAndState']), {\n    fileChange: function fileChange(evt) {\n      var _this2 = this;\n\n      if (evt.target.files.length !== 1) {\n        return;\n      }\n\n      var imgFile = evt.target.files[0]; // 验证文件大小是否符合要求, 不大于 5M\n\n      if (imgFile.size > 1024 * 1024 * 5) {\n        this.$message.error('文件过大超过5M'); // 清空输入框\n\n        this.clearFileInput(this.$refs.avatarInput);\n        return;\n      } // 验证图像是否符合要求\n\n\n      var imgSrc = window.URL.createObjectURL(imgFile);\n      var image = new Image();\n      image.src = imgSrc;\n\n      image.onload = function () {\n        var w = image.width;\n        var h = image.height;\n\n        if (w < 50) {\n          _this2.$message.error('图像宽度过小, 请选择大于50px的图像'); // 清空输入框\n\n\n          _this2.clearFileInput(_this2.$refs.avatarInput);\n\n          return;\n        }\n\n        if (h < 50) {\n          _this2.$message.error('图像高度过小, 请选择大于50px的图像'); // 清空输入框\n\n\n          _this2.clearFileInput(_this2.$refs.avatarInput);\n\n          return;\n        } // 验证通过, 打开裁剪框\n\n\n        _this2.cropImg = imgSrc;\n        _this2.cropVisible = true;\n\n        if (_this2.$refs.croppa) {\n          _this2.$refs.croppa.refresh();\n        }\n      };\n\n      image.onerror = function () {\n        _this2.$message.error('获取本地图片出现错误, 请重试'); // 清空输入框\n\n\n        _this2.clearFileInput(_this2.$refs.avatarInput);\n      };\n    },\n    handleCrop: function () {\n      var _handleCrop = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var blob, file;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$refs.croppa.promisedBlob('image/jpeg', 0.8);\n\n              case 2:\n                blob = _context.sent;\n                // 构造为文件对象\n                file = new File([blob], 'avatar.jpg', {\n                  type: 'image/jpeg'\n                });\n                return _context.abrupt(\"return\", this.$axios({\n                  method: 'post',\n                  url: '/cms/file',\n                  data: {\n                    file: file\n                  }\n                }).then(function (res) {\n                  // 清空输入框\n                  _this3.clearFileInput(_this3.$refs.avatarInput);\n\n                  if (!Array.isArray(res) || res.length !== 1) {\n                    _this3.$message.error('头像上传失败, 请重试');\n\n                    return false;\n                  } // TODO: 错误码处理\n                  // if (res.code === 10110) {\n                  //   throw new Error('文件体积过大')\n                  // }\n\n\n                  return _this3.$axios({\n                    method: 'put',\n                    url: '/cms/user',\n                    data: {\n                      avatar: res[0].path\n                    }\n                  }).then(function (putRes) {\n                    // eslint-disable-line\n                    if (putRes.code < window.MAX_SUCCESS_CODE) {\n                      _this3.$message({\n                        type: 'success',\n                        message: '更新头像成功'\n                      });\n\n                      _this3.cropVisible = false; // 触发重新获取用户信息\n\n                      return User.getInformation();\n                    }\n\n                    return Promise.reject(new Error('更新头像失败'));\n                  }).then(function (infoRes) {\n                    // eslint-disable-line\n                    // 尝试获取当前用户信息\n                    var user = infoRes;\n\n                    _this3.setUserAndState(user);\n                  });\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleCrop() {\n        return _handleCrop.apply(this, arguments);\n      }\n\n      return handleCrop;\n    }(),\n    blur: function () {\n      var _blur = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this4 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.username) {\n                  user = this.$store.state.user;\n\n                  if (this.username !== user.username && this.username !== '佚名') {\n                    this.$axios({\n                      method: 'put',\n                      url: '/cms/user',\n                      data: {\n                        username: this.username\n                      },\n                      showBackend: true\n                    }).then(function (res) {\n                      if (res.code < window.MAX_SUCCESS_CODE) {\n                        _this4.$message({\n                          type: 'success',\n                          message: '更新昵称成功'\n                        }); // 触发重新获取用户信息\n\n\n                        return User.getInformation();\n                      }\n                    }).then(function (res) {\n                      // eslint-disable-line\n                      _this4.setUserAndState(res);\n\n                      _this4.username = res.username;\n                    });\n                  }\n                }\n\n                this.usernameChanged = false;\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function blur() {\n        return _blur.apply(this, arguments);\n      }\n\n      return blur;\n    }(),\n    init: function init() {\n      var user = this.$store.state.user;\n      this.username = user && user.username ? user.username : '佚名';\n    },\n    goToCenter: function goToCenter() {\n      this.$router.push('/center');\n    },\n    submitForm: function submitForm(formName) {\n      var _this5 = this;\n\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\n        this.dialogFormVisible = false;\n        return;\n      }\n\n      if (this.form.old_password === this.form.new_password) {\n        this.$message.error('新密码不能与原始密码一样');\n        return;\n      }\n\n      this.$refs[formName].validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3(valid) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!valid) {\n                    _context3.next = 7;\n                    break;\n                  }\n\n                  _context3.next = 3;\n                  return User.updatePassword(_this5.form);\n\n                case 3:\n                  res = _context3.sent;\n\n                  if (res.code < window.MAX_SUCCESS_CODE) {\n                    _this5.$message.success(\"\".concat(res.message));\n\n                    _this5.resetForm(formName);\n\n                    _this5.dialogFormVisible = false;\n                    setTimeout(function () {\n                      _this5.loginOut();\n\n                      var origin = window.location.origin;\n                      window.location.href = origin;\n                    }, 1000);\n                  }\n\n                  _context3.next = 10;\n                  break;\n\n                case 7:\n                  console.log('error submit!!');\n\n                  _this5.$message.error('请填写正确的信息');\n\n                  return _context3.abrupt(\"return\", false);\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    clearFileInput: function clearFileInput(ele) {\n      // eslint-disable-next-line\n      ele.value = '';\n    }\n  })\n};",{"version":3,"sources":["center.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">个人中心</div>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <div class=\"user\">\n            <div class=\"title\">用户信息</div>\n            <div class=\"content\">\n              <div class=\"name-wrapper\">\n                <div class=\"label\">用户名</div>\n                <div class=\"name\">\n                  <el-input\n                    placeholder=\"请输入内容\"\n                    size=\"small\"\n                    v-model=\"username\"\n                    suffix-icon=\"el-icon-edit\"\n                    ref=\"input\"\n                    @blur=\"blur\"\n                  ></el-input>\n                </div>\n              </div>\n              <div class=\"avatar\" title=\"点击修改头像\">\n                <img :src=\"user.avatar || defaultAvatar\" alt=\"头像\" />\n                <label class=\"mask\">\n                  <i class=\"iconfont icon-icon-test\" style=\"font-size: 20px;\"></i>\n                  <input ref=\"avatarInput\" type=\"file\" accept=\"image/*\" @change=\"fileChange\" />\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class=\"password\">\n            <div class=\"title\">修改密码</div>\n            <el-form\n              :model=\"form\"\n              status-icon\n              :rules=\"rules\"\n              label-position=\"left\"\n              ref=\"form\"\n              label-width=\"90px\"\n              @submit.native.prevent\n            >\n              <el-form-item label=\"原始密码\" prop=\"old_password\">\n                <el-input type=\"password\" v-model=\"form.old_password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"新密码\" prop=\"new_password\">\n                <el-input type=\"password\" v-model=\"form.new_password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"确认密码\" prop=\"confirm_password\" label-position=\"top\">\n                <el-input type=\"password\" v-model=\"form.confirm_password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('form')\">保存</el-button>\n                <el-button @click=\"resetForm('form')\">重置</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 修改头像 -->\n    <el-dialog\n      title=\"裁剪\"\n      :visible.sync=\"cropVisible\"\n      width=\"300px\"\n      :append-to-body=\"true\"\n      :close-on-click-modal=\"false\"\n      custom-class=\"croppa-dialog\"\n      center\n    >\n      <div style=\"text-align: center;\">\n        <div class=\"avatar-croppa-container\">\n          <croppa\n            ref=\"croppa\"\n            :width=\"cropRule.width\"\n            :height=\"cropRule.height\"\n            :placeholder=\"'loading'\"\n            :zoom-speed=\"30\"\n            :disable-drag-and-drop=\"false\"\n            :show-remove-button=\"false\"\n            :prevent-white-space=\"true\"\n            :disable-click-to-choose=\"false\"\n            :disable-scroll-to-zoom=\"false\"\n            :show-loading=\"true\"\n            :quality=\"quality\"\n            :initial-image=\"cropImg\"\n          ></croppa>\n        </div>\n        <div style=\"margin-top: 1em;\">通过鼠标滚轮调节头像大小</div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cropVisible = false\" size=\"small\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleCrop\" size=\"small\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nimport Vue from 'vue'\nimport Croppa from 'vue-croppa'\nimport User from '@/lin/model/user'\nimport 'vue-croppa/dist/vue-croppa.css'\nimport defaultAvatar from '@/assets/image/user/user.png'\n\nVue.use(Croppa)\n\nconst width = 150\nconst height = 150\n\nexport default {\n  name: 'center',\n  components: {},\n  data() {\n    const oldPassword = (rule, value, callback) => {\n      // eslint-disable-line\n      if (!value) {\n        return callback(new Error('原始密码不能为空'))\n      }\n      if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'))\n      }\n      callback()\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'))\n      } else {\n        if (this.form.checkPassword !== '') {\n          this.$refs.form.validateField('confirm_password')\n        }\n        callback()\n      }\n    }\n    const validatePassword2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.form.new_password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      username: null,\n      form: {\n        old_password: '',\n        new_password: '',\n        confirm_password: '',\n      },\n      rules: {\n        old_password: [{ validator: oldPassword, trigger: 'blur', required: true }],\n        new_password: [{ validator: validatePassword, trigger: 'blur', required: true }],\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\n      },\n      cropRule: {\n        width,\n        height,\n      },\n      imgRule: {\n        minWidth: width,\n        minHeight: height,\n      },\n      cropVisible: false,\n      cropImg: '',\n      croppa: {},\n      imgInfo: null,\n      quality: 1,\n      defaultAvatar,\n    }\n  },\n  computed: {\n    ...mapGetters(['user']),\n  },\n  watch: {\n    cropVisible(val) {\n      if (!val) {\n        this.$refs.croppa.remove()\n        this.cropImg = ''\n        this.imgInfo = null\n      }\n    },\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    ...mapActions(['loginOut', 'setUserAndState']),\n    fileChange(evt) {\n      if (evt.target.files.length !== 1) {\n        return\n      }\n      const imgFile = evt.target.files[0]\n      // 验证文件大小是否符合要求, 不大于 5M\n      if (imgFile.size > 1024 * 1024 * 5) {\n        this.$message.error('文件过大超过5M')\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n        return\n      }\n\n      // 验证图像是否符合要求\n      const imgSrc = window.URL.createObjectURL(imgFile)\n      const image = new Image()\n      image.src = imgSrc\n      image.onload = () => {\n        const w = image.width\n        const h = image.height\n        if (w < 50) {\n          this.$message.error('图像宽度过小, 请选择大于50px的图像')\n          // 清空输入框\n          this.clearFileInput(this.$refs.avatarInput)\n          return\n        }\n        if (h < 50) {\n          this.$message.error('图像高度过小, 请选择大于50px的图像')\n          // 清空输入框\n          this.clearFileInput(this.$refs.avatarInput)\n          return\n        }\n        // 验证通过, 打开裁剪框\n        this.cropImg = imgSrc\n        this.cropVisible = true\n        if (this.$refs.croppa) {\n          this.$refs.croppa.refresh()\n        }\n      }\n      image.onerror = () => {\n        this.$message.error('获取本地图片出现错误, 请重试')\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n      }\n    },\n    async handleCrop() {\n      // 获取裁剪数据\n      const blob = await this.$refs.croppa.promisedBlob('image/jpeg', 0.8)\n      // 构造为文件对象\n      const file = new File([blob], 'avatar.jpg', {\n        type: 'image/jpeg',\n      })\n\n      return this.$axios({\n        method: 'post',\n        url: '/cms/file',\n        data: {\n          file,\n        },\n      }).then(res => {\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n        if (!Array.isArray(res) || res.length !== 1) {\n          this.$message.error('头像上传失败, 请重试')\n          return false\n        }\n        // TODO: 错误码处理\n        // if (res.code === 10110) {\n        //   throw new Error('文件体积过大')\n        // }\n        return this.$axios({\n          method: 'put',\n          url: '/cms/user',\n          data: {\n            avatar: res[0].path,\n          },\n        })\n          .then(putRes => {\n            // eslint-disable-line\n            if (putRes.code < window.MAX_SUCCESS_CODE) {\n              this.$message({\n                type: 'success',\n                message: '更新头像成功',\n              })\n              this.cropVisible = false\n              // 触发重新获取用户信息\n              return User.getInformation()\n            }\n            return Promise.reject(new Error('更新头像失败'))\n          })\n          .then(infoRes => {\n            // eslint-disable-line\n            // 尝试获取当前用户信息\n            const user = infoRes\n            this.setUserAndState(user)\n          })\n      })\n    },\n    async blur() {\n      if (this.username) {\n        const { user } = this.$store.state\n        if (this.username !== user.username && this.username !== '佚名') {\n          this.$axios({\n            method: 'put',\n            url: '/cms/user',\n            data: {\n              username: this.username,\n            },\n            showBackend: true,\n          })\n            .then(res => {\n              if (res.code < window.MAX_SUCCESS_CODE) {\n                this.$message({\n                  type: 'success',\n                  message: '更新昵称成功',\n                })\n                // 触发重新获取用户信息\n                return User.getInformation()\n              }\n            })\n            .then(res => {\n              // eslint-disable-line\n              this.setUserAndState(res)\n              this.username = res.username\n            })\n        }\n      }\n      this.usernameChanged = false\n    },\n    init() {\n      const { user } = this.$store.state\n      this.username = user && user.username ? user.username : '佚名'\n    },\n    goToCenter() {\n      this.$router.push('/center')\n    },\n    submitForm(formName) {\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\n        this.dialogFormVisible = false\n        return\n      }\n      if (this.form.old_password === this.form.new_password) {\n        this.$message.error('新密码不能与原始密码一样')\n        return\n      }\n      this.$refs[formName].validate(async valid => {\n        // eslint-disable-line\n        if (valid) {\n          const res = await User.updatePassword(this.form)\n          if (res.code < window.MAX_SUCCESS_CODE) {\n            this.$message.success(`${res.message}`)\n            this.resetForm(formName)\n            this.dialogFormVisible = false\n            setTimeout(() => {\n              this.loginOut()\n              const { origin } = window.location\n              window.location.href = origin\n            }, 1000)\n          }\n        } else {\n          console.log('error submit!!')\n          this.$message.error('请填写正确的信息')\n          return false\n        }\n      })\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    clearFileInput(ele) {\n      // eslint-disable-next-line\n      ele.value = ''\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n    border-bottom: 1px solid #dae1ec;\n  }\n\n  .wrap {\n    padding: 20px;\n    max-width: 800px;\n    .user {\n      padding: 0px 20px 25px 30px;\n      z-index: 100;\n      position: relative;\n      border-bottom: 1px solid #dae1ec;\n      .title {\n        font-weight: bold;\n        font-size: 16px;\n        color: #3a3a3a;\n        text-indent: 0px;\n        border: none;\n      }\n      .content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        .name-wrapper {\n          display: flex;\n          align-items: center;\n          .label {\n            margin-right: 20px;\n            color: #333;\n            font-weight: bold;\n            font-size: 14px;\n          }\n          .name {\n            font-weight: 500;\n          }\n        }\n        .avatar {\n          width: 80px;\n          height: 80px;\n          border-radius: 50%;\n          cursor: pointer;\n          overflow: hidden;\n          position: relative;\n\n          .mask {\n            opacity: 0;\n            transition: all 0.2s;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.3);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            cursor: pointer;\n            color: white;\n\n            input {\n              display: none;\n            }\n          }\n\n          &:hover {\n            .mask {\n              opacity: 1;\n            }\n          }\n        }\n\n        .text {\n          margin-left: 20px;\n          color: #fff;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n\n          .username {\n            margin-bottom: 10px;\n            font-size: 16px;\n            cursor: pointer;\n          }\n\n          .desc {\n            font-size: 14px;\n            color: rgba(222, 226, 230, 1);\n          }\n        }\n\n        .info {\n          position: absolute;\n          bottom: 10px;\n          right: 10px;\n          display: flex;\n          color: #fff;\n          font-size: 14px;\n          height: 20px;\n          line-height: 20px;\n\n          .mid {\n            padding: 0 5px;\n          }\n        }\n      }\n    }\n    .password {\n      padding: 25px 20px 25px 30px;\n      .title {\n        color: #3a3a3a;\n        font-weight: bold;\n        font-size: 16px;\n        text-indent: 0px;\n        margin-bottom: 20px;\n        border: none;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/view/center"}]}