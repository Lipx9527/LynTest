{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/common/node-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/common/node-tree.vue","mtime":1607655351000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NodeEdit from './node-edit';\nimport Node from '@/model/track/node';\nexport default {\n  name: 'node-tree',\n  components: {\n    NodeEdit: NodeEdit\n  },\n  data: function data() {\n    return {\n      result: {},\n      expandedNode: [],\n      filterText: '',\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      disabled: false,\n      list: [],\n      confirmDeleteDialog: false,\n      removeNodeIds: []\n    };\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'view'\n    },\n    treeNodes: {\n      type: Array\n    },\n    selectNode: {\n      type: Object\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    currentProject: {\n      type: Object\n    }\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  methods: {\n    handleDragEnd: function () {\n      var _handleDragEnd = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(draggingNode, dropNode, dropType) {\n        var param, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(dropType === 'none' || dropType === undefined)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                param = this.buildParam(draggingNode, dropNode, dropType);\n                this.list = [];\n                this.getNodeTree(this.treeNodes, draggingNode.data.id, this.list);\n                _context.next = 7;\n                return Node.dragNode(param);\n\n              case 7:\n                res = _context.sent;\n\n                if (!(res.code < window.MAX_SUCCESS_CODE)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return Node.nodePosition(this.list);\n\n              case 11:\n                this.$emit('refresh');\n                _context.next = 15;\n                break;\n\n              case 14:\n                this.$message.error('服务端异常');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleDragEnd(_x, _x2, _x3) {\n        return _handleDragEnd.apply(this, arguments);\n      }\n\n      return handleDragEnd;\n    }(),\n    buildParam: function buildParam(draggingNode, dropNode, dropType) {\n      var _this = this;\n\n      var param;\n\n      if (dropNode.level === 1 && dropType !== 'inner') {\n        param = draggingNode.data;\n      } else {\n        this.treeNodes.some(function (node) {\n          param = _this.findTreeByNodeId(node, dropNode.data.id);\n          return param;\n        });\n      }\n\n      return param;\n    },\n    getNodeTree: function getNodeTree(nodes, id, list) {\n      if (!nodes) {\n        return;\n      }\n\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === id) {\n          list[0] = i - 1 >= 0 ? nodes[i - 1].id : 0;\n          list[1] = nodes[i].id;\n          list[2] = i + 1 < nodes.length ? nodes[i + 1].id : 0;\n          return;\n        }\n\n        if (nodes[i].children) {\n          this.getNodeTree(nodes[i].children, id, list);\n        }\n      }\n    },\n    refreshTable: function refreshTable() {\n      this.$emit('refreshTable');\n    },\n    findTreeByNodeId: function findTreeByNodeId(rootNode, nodeId) {\n      if (rootNode.id === nodeId) {\n        return rootNode;\n      }\n\n      if (rootNode.children) {\n        for (var i = 0; i < rootNode.children.length; i++) {\n          if (this.findTreeByNodeId(rootNode.children[i], nodeId)) {\n            return rootNode;\n          }\n        }\n      }\n    },\n    remove: function remove(node) {\n      var nodeIds = [];\n      this.getChildNodeId(node.data, nodeIds);\n      this.removeNodeIds = nodeIds;\n      this.confirmDeleteDialog = true;\n    },\n    confirmRemove: function () {\n      var _confirmRemove = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Node.deleteNodes(this.removeNodeIds);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.$emit('refresh');\n                  this.confirmDeleteDialog = false;\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function confirmRemove() {\n        return _confirmRemove.apply(this, arguments);\n      }\n\n      return confirmRemove;\n    }(),\n    handleNodeSelect: function handleNodeSelect(node) {\n      var nodeIds = [];\n      var pNodes = [];\n      this.getChildNodeId(node.data, nodeIds);\n      this.getParentNodes(node, pNodes);\n      this.$emit('nodeSelectEvent', nodeIds, pNodes);\n      this.$emit('update:selectNode', node);\n    },\n    getChildNodeId: function getChildNodeId(rootNode, nodeIds) {\n      // 递归获取所有子节点ID\n      nodeIds.push(rootNode.id);\n\n      if (rootNode.children) {\n        for (var i = 0; i < rootNode.children.length; i++) {\n          this.getChildNodeId(rootNode.children[i], nodeIds);\n        }\n      }\n    },\n    getParentNodes: function getParentNodes(rootNode, pNodes) {\n      if (rootNode.parent && rootNode.parent.id !== 0) {\n        this.getParentNodes(rootNode.parent, pNodes);\n      }\n\n      if (rootNode.data.name && rootNode.data.name !== '') {\n        pNodes.push(rootNode.data);\n      }\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    openEditNodeDialog: function openEditNodeDialog(type, data) {\n      var nodeIds = [];\n\n      if (type === 'edit') {\n        this.getChildNodeId(data, nodeIds);\n      }\n\n      this.$refs.nodeEdit.open(type, data, nodeIds);\n    },\n    refreshNode: function refreshNode() {\n      this.$emit('refresh');\n    },\n    nodeExpand: function nodeExpand(data) {\n      if (data.id) {\n        this.expandedNode.push(data.id);\n      }\n    },\n    nodeCollapse: function nodeCollapse(data) {\n      if (data.id) {\n        this.expandedNode.splice(this.expandedNode.indexOf(data.id), 1);\n      }\n    }\n  }\n};",{"version":3,"sources":["node-tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div v-loading=\"result.loading\">\n    <el-input placeholder=\"模块搜索\" v-model=\"filterText\" size=\"small\">\n      <template v-if=\"type === 'edit'\" v-slot:append>\n        <el-button :disabled=\"disabled\" icon=\"el-icon-folder-add\" @click=\"openEditNodeDialog('add')\"></el-button>\n      </template>\n    </el-input>\n\n    <el-tree\n      class=\"node-tree\"\n      :data=\"treeNodes\"\n      :default-expanded-keys=\"expandedNode\"\n      node-key=\"id\"\n      @node-drag-end=\"handleDragEnd\"\n      @node-expand=\"nodeExpand\"\n      @node-collapse=\"nodeCollapse\"\n      :filter-node-method=\"filterNode\"\n      :expand-on-click-node=\"false\"\n      highlight-current\n      :draggable=\"draggable\"\n      :props=\"defaultProps\"\n      ref=\"tree\">\n      <template v-slot:default=\"{node,data}\">\n        <span class=\"custom-tree-node father\" @click=\"handleNodeSelect(node)\">\n          <span class=\"node-icon\">\n            <i class=\"el-icon-folder\"></i>\n          </span>\n          <!--如果没修改过字段，这里对应后端应该使用node.name-->\n          <span class=\"node-title\">{{ node.label }}</span>\n\n          <span v-if=\"type === 'edit' && !disabled\" class=\"node-operate child\">\n            <el-tooltip\n              class=\"item\"\n              effect=\"dark\"\n              :open-delay=\"200\"\n              content=\"重命名\"\n              placement=\"top\">\n              <i @click.stop=\"openEditNodeDialog('edit', data)\" class=\"el-icon-edit\"></i>\n            </el-tooltip>\n            <el-tooltip\n              class=\"item\"\n              effect=\"dark\"\n              :open-delay=\"200\"\n              content=\"添加子模块\"\n              placement=\"top\">\n              <i @click.stop=\"openEditNodeDialog('add', data)\" class=\"el-icon-circle-plus-outline\"></i>\n            </el-tooltip>\n            <el-tooltip class=\"item\" effect=\"dark\"\n                        :open-delay=\"200\" content=\"删除\" placement=\"top\">\n              <i @click.stop=\"remove(node, data)\" class=\"el-icon-delete\"></i>\n            </el-tooltip>\n          </span>\n        </span>\n      </template>\n    </el-tree>\n    <node-edit ref=\"nodeEdit\" :current-project=\"currentProject\" :tree-nodes=\"treeNodes\" @refresh=\"refreshNode\" />\n    <el-dialog :visible.sync=\"confirmDeleteDialog\" width=\"30%\">\n      <span>删除模块同时,其子模块及测试用例会全被删除，是否继续删除？</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"confirmDeleteDialog = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirmRemove\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport NodeEdit from './node-edit'\nimport Node from '@/model/track/node'\n\nexport default {\n  name: 'node-tree',\n  components: { NodeEdit },\n  data() {\n    return {\n      result: {},\n      expandedNode: [],\n      filterText: '',\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      disabled: false,\n      list: [],\n      confirmDeleteDialog: false,\n      removeNodeIds: [],\n    }\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'view'\n    },\n    treeNodes: {\n      type: Array\n    },\n    selectNode: {\n      type: Object\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    currentProject: {\n      type: Object\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  methods: {\n    async handleDragEnd(draggingNode, dropNode, dropType) {\n      if (dropType === 'none' || dropType === undefined) {\n        return\n      }\n      const param = this.buildParam(draggingNode, dropNode, dropType)\n\n      this.list = []\n      this.getNodeTree(this.treeNodes, draggingNode.data.id, this.list)\n      const res = await Node.dragNode(param)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        await Node.nodePosition(this.list)\n        this.$emit('refresh')\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    buildParam(draggingNode, dropNode, dropType) {\n      let param\n      if (dropNode.level === 1 && dropType !== 'inner') {\n        param = draggingNode.data\n      } else {\n        this.treeNodes.some(node => {\n          param = this.findTreeByNodeId(node, dropNode.data.id)\n          return param\n        })\n      }\n      return param\n    },\n    getNodeTree(nodes, id, list) {\n      if (!nodes) {\n        return\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === id) {\n          list[0] = i - 1 >= 0 ? nodes[i - 1].id : 0\n          list[1] = nodes[i].id\n          list[2] = i + 1 < nodes.length ? nodes[i + 1].id : 0\n          return\n        }\n        if (nodes[i].children) {\n          this.getNodeTree(nodes[i].children, id, list)\n        }\n      }\n    },\n    refreshTable() {\n      this.$emit('refreshTable')\n    },\n    findTreeByNodeId(rootNode, nodeId) {\n      if (rootNode.id === nodeId) {\n        return rootNode\n      }\n      if (rootNode.children) {\n        for (let i = 0; i < rootNode.children.length; i++) {\n          if (this.findTreeByNodeId(rootNode.children[i], nodeId)) {\n            return rootNode\n          }\n        }\n      }\n    },\n    remove(node) {\n      const nodeIds = []\n      this.getChildNodeId(node.data, nodeIds)\n      this.removeNodeIds = nodeIds\n      this.confirmDeleteDialog = true\n    },\n    async confirmRemove() {\n      const res = await Node.deleteNodes(this.removeNodeIds)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(res.message)\n        this.$emit('refresh')\n        this.confirmDeleteDialog = false\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    handleNodeSelect(node) {\n      const nodeIds = []\n      const pNodes = []\n      this.getChildNodeId(node.data, nodeIds)\n      this.getParentNodes(node, pNodes)\n      this.$emit('nodeSelectEvent', nodeIds, pNodes)\n      this.$emit('update:selectNode', node)\n    },\n    getChildNodeId(rootNode, nodeIds) {\n      // 递归获取所有子节点ID\n      nodeIds.push(rootNode.id)\n      if (rootNode.children) {\n        for (let i = 0; i < rootNode.children.length; i++) {\n          this.getChildNodeId(rootNode.children[i], nodeIds)\n        }\n      }\n    },\n    getParentNodes(rootNode, pNodes) {\n      if (rootNode.parent && rootNode.parent.id !== 0) {\n        this.getParentNodes(rootNode.parent, pNodes)\n      }\n      if (rootNode.data.name && rootNode.data.name !== '') {\n        pNodes.push(rootNode.data)\n      }\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1\n    },\n    openEditNodeDialog(type, data) {\n      const nodeIds = []\n      if (type === 'edit') {\n        this.getChildNodeId(data, nodeIds)\n      }\n      this.$refs.nodeEdit.open(type, data, nodeIds)\n    },\n    refreshNode() {\n      this.$emit('refresh')\n    },\n    nodeExpand(data) {\n      if (data.id) {\n        this.expandedNode.push(data.id)\n      }\n    },\n    nodeCollapse(data) {\n      if (data.id) {\n        this.expandedNode.splice(this.expandedNode.indexOf(data.id), 1)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n  .custom-tree-node {\n    flex: 1 1 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n    width: 100%;\n  }\n\n  .node-tree {\n    margin-top: 15px;\n  }\n\n  .father .child {\n    display: none;\n  }\n\n  .father:hover .child {\n    display: block;\n  }\n\n  .node-title {\n    width: 0;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    flex: 1 1 auto;\n    padding: 0 5px;\n    overflow: hidden;\n  }\n\n  .node-operate > i {\n    color: #409eff;\n    margin: 0 5px;\n  }\n</style>\n"],"sourceRoot":"src/component/common"}]}