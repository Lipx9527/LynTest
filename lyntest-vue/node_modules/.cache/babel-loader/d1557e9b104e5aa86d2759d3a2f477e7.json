{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/store/getter.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/store/getter.js","mtime":1606834545596},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Util from '@/lin/util/util';\nvar stageMap = {};\n\nvar deepTravel = function deepTravel(obj, fuc) {\n  if (Array.isArray(obj)) {\n    obj.forEach(function (item) {\n      deepTravel(item, fuc);\n    });\n    return;\n  }\n\n  if (obj && obj.children) {\n    fuc(obj);\n    deepTravel(obj.children, fuc);\n    return;\n  }\n\n  if (obj.name) {\n    fuc(obj);\n  }\n};\n\nexport var logined = function logined(state) {\n  return state.logined;\n};\nexport var user = function user(state) {\n  return state.user;\n};\nexport var readedMessages = function readedMessages(state) {\n  return state.readedMessages;\n};\nexport var unreadMessages = function unreadMessages(state) {\n  return state.unreadMessages;\n};\n/**\n * 在侧边栏展示时，如果当前路由 children 属性为空，则删除该路由\n * @param {*} arr 路由配置项数据\n */\n\nfunction IterationDelateMenuChildren(arr) {\n  if (arr.length) {\n    for (var i in arr) {\n      if (arr[i].children && !arr[i].children.length) {\n        delete arr[i];\n      } else if (arr[i].children && arr[i].children.length) {\n        IterationDelateMenuChildren(arr[i].children);\n      }\n    }\n  }\n\n  return arr;\n}\n/**\n * Shaking 掉无限制路由\n * @param {array} stageConfig 路由配置项数据\n * @param {array} permissions 当前登录管理员所拥有的权限集合\n * @param {object} currentUser 当前登录管理员\n */\n\n\nfunction permissionShaking(stageConfig, permissions, currentUser) {\n  var shookConfig = stageConfig.filter(function (route) {\n    if (Util.hasPermission(permissions, route, currentUser)) {\n      if (route.children && route.children.length) {\n        route.children = permissionShaking(route.children, permissions, currentUser);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return IterationDelateMenuChildren(shookConfig);\n} // 获取有权限的舞台配置\n\n\nexport var permissionStageConfig = function permissionStageConfig(state) {\n  var stageConfig = state.stageConfig,\n      permissions = state.permissions,\n      user = state.user; // eslint-disable-line\n\n  var tempStageConfig = Util.deepClone(stageConfig);\n  var shookConfig = permissionShaking(tempStageConfig, permissions, user); // 设置舞台缓存\n\n  var list = {};\n  deepTravel(shookConfig, function (item) {\n    list[item.name] = item;\n  });\n  stageMap = list;\n  return shookConfig;\n}; // 获取侧边栏配置\n\nexport var sideBarList = function sideBarList(state, getter) {\n  var sideBarLevel = state.sideBarLevel; // eslint-disable-line\n\n  var permissionStageConfig = getter.permissionStageConfig; // eslint-disable-line\n\n  function deepGetSideBar(target) {\n    var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    // 集合节点处理\n    if (Array.isArray(target)) {\n      var acc = target.map(function (item) {\n        return deepGetSideBar(item, level - 1);\n      });\n      return acc.filter(function (item) {\n        return item !== null;\n      });\n    } // 检测是否需要在导航中显示\n\n\n    if (!target.inNav) {\n      return null;\n    }\n\n    if (target.type === 'folder' && level !== 0) {\n      // 处理 folder 模式\n      var sideConfig = {};\n      sideConfig.name = target.name;\n      sideConfig.title = target.title;\n      sideConfig.icon = target.icon;\n      sideConfig.path = target.route || Util.getRandomStr(6);\n      sideConfig.children = target.children.map(function (item) {\n        return deepGetSideBar(item, level - 1);\n      });\n      sideConfig.children = sideConfig.children.filter(function (item) {\n        return item !== null;\n      });\n      return sideConfig;\n    } // 处理一级就是 view 的情况\n\n\n    if (target.type === 'view') {\n      var _sideConfig = {};\n      _sideConfig.name = target.name;\n      _sideConfig.title = target.title;\n      _sideConfig.icon = target.icon;\n      _sideConfig.path = target.route;\n      return _sideConfig;\n    } // 处理 appTab 情况\n\n\n    if (target.type === 'tab') {\n      var _sideConfig2 = {};\n      _sideConfig2.name = target.name;\n      _sideConfig2.title = target.title;\n      _sideConfig2.icon = target.icon;\n      _sideConfig2.path = target.route; // 如果 Tab 没有设置默认打开的路由, 则设置为第一个子节点路由\n\n      if (!_sideConfig2.path) {\n        if (target.children && target.children.length > 0 && target.children[0].route) {\n          _sideConfig2.path = target.children[0].route;\n        }\n      }\n\n      return _sideConfig2;\n    } // 最后一层, 都当做子节点处理\n\n\n    if (level <= 0) {\n      var _sideConfig3 = {};\n      _sideConfig3.name = target.name;\n      _sideConfig3.title = target.title;\n      _sideConfig3.icon = target.icon;\n      _sideConfig3.path = Util.getRandomStr(6);\n\n      if (target.children && target.children.length > 0 && target.children[0].route) {\n        _sideConfig3.path = target.children[0].route;\n      }\n\n      return _sideConfig3;\n    }\n\n    return null;\n  }\n\n  var sideBar = deepGetSideBar(permissionStageConfig, sideBarLevel);\n  return sideBar;\n}; // 获取有权限的所有节点配置对象\n// eslint-disable-next-line\n\nexport var getStageByName = function getStageByName() {\n  return function (name) {\n    return stageMap[name];\n  };\n}; // 获取有权限的所有节点配置对象\n// eslint-disable-next-line\n\nexport var getStageByRoute = function getStageByRoute() {\n  return function (path) {\n    var result = Object.getOwnPropertySymbols(stageMap).find(function (key) {\n      return stageMap[key].route === path;\n    });\n    return stageMap[result];\n  };\n};\nexport var stageList = function stageList() {\n  return stageMap;\n};\nexport var permissions = function permissions(state) {\n  return state.permissions;\n};\nexport var getStageInfo = function getStageInfo(state) {\n  var stageConfig = state.stageConfig;\n  var cache = {};\n\n  var findStage = function findStage(stages, name) {\n    var result;\n\n    if (Array.isArray(stages)) {\n      for (var i = 0; i < stages.length; i += 1) {\n        result = findStage(stages[i], name);\n\n        if (result) {\n          break;\n        }\n      }\n\n      return result;\n    }\n\n    if (stages.children && stages.children.length) {\n      result = findStage(stages.children, name);\n\n      if (result) {\n        result.unshift(stages);\n      }\n\n      return result;\n    }\n\n    if (stages.name === name) {\n      return [stages];\n    }\n\n    return false;\n  };\n\n  return function (name) {\n    if (cache[name]) {\n      return cache[name];\n    }\n\n    var stageInfo = findStage(stageConfig, name);\n\n    if (stageInfo) {\n      cache[name] = stageInfo;\n    }\n\n    return stageInfo;\n  };\n};",null]}