{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/data-platform/order/courier-assignment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/data-platform/order/courier-assignment.vue","mtime":1606834545557},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Orders from '@/model/dpf/orders';\nimport Ubt from '@/model/dpf/ubt';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        environment_id: 1,\n        order_number_list: '',\n        courier_code: '215993',\n        courier_name: '诸志富'\n      },\n      environment_id_list: [{\n        label: '云1',\n        value: 1\n      }, {\n        label: '云2',\n        value: 2\n      }],\n      courier_list: []\n    };\n  },\n  methods: {\n    handleCommand: function handleCommand(command) {\n      var _command$split = command.split('-');\n\n      var _command$split2 = _slicedToArray(_command$split, 2);\n\n      this.form.courier_code = _command$split2[0];\n      this.form.courier_name = _command$split2[1];\n    },\n    getCourierList: function () {\n      var _getCourierList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Orders.getCourierList();\n\n              case 2:\n                this.courier_list = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCourierList() {\n        return _getCourierList.apply(this, arguments);\n      }\n\n      return getCourierList;\n    }(),\n    doAssignment: function () {\n      var _doAssignment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Orders.courierAssignment(this.form);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res) {\n                  this.$message.success('分配成功');\n                } else {\n                  this.$message.error('分配失败');\n                }\n\n                _context2.next = 6;\n                return Ubt.insertUbt('courier-assignment');\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function doAssignment() {\n        return _doAssignment.apply(this, arguments);\n      }\n\n      return doAssignment;\n    }()\n  },\n  mounted: function mounted() {\n    this.getCourierList();\n  }\n};",{"version":3,"sources":["courier-assignment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,MAAA,MAAA,oBAAA;AACA,OAAA,GAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,cAAA,EAAA,CADA;AAEA,QAAA,iBAAA,EAAA,EAFA;AAGA,QAAA,YAAA,EAAA,QAHA;AAIA,QAAA,YAAA,EAAA;AAJA,OADA;AAOA,MAAA,mBAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAHA,CAPA;AAcA,MAAA,YAAA,EAAA;AAdA,KAAA;AAgBA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,OADA,EACA;AAAA,2BACA,OAAA,CAAA,KAAA,CAAA,GAAA,CADA;;AAAA;;AACA,WAAA,IAAA,CAAA,YADA;AACA,WAAA,IAAA,CAAA,YADA;AAEA,KAHA;AAIA,IAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKA,MAAA,CAAA,cAAA,EALA;;AAAA;AAKA,qBAAA,YALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOA,IAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQA,MAAA,CAAA,iBAAA,CAAA,KAAA,IAAA,CARA;;AAAA;AAQA,gBAAA,GARA;;AASA,oBAAA,GAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,iBAFA,MAEA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,MAAA;AACA;;AAbA;AAAA,uBAeA,GAAA,CAAA,SAAA,CAAA,oBAAA,CAfA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAnBA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,SAAA,cAAA;AACA;AAxCA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header\"><div class=\"title\">快递员分配</div></div>\n    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" style=\"padding: 20px 0px\">\n      <el-form-item label=\"环境\">\n        <el-radio-group v-model=\"form.environment_id\">\n          <el-radio-button v-for=\"item in environment_id_list\" :key=\"item.value\" :label=\"item.value\">{{item.label}}</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n\n      <el-form-item label=\"订单列表\">\n        <el-tooltip class=\"item\" effect=\"dark\" content=\"支持批量传入单号，单号与单号间用英文逗号分隔\" placement=\"top-start\">\n          <el-input v-model=\"form.order_number_list\" placeholder=\"订单列表\" style=\"width: 200px\"></el-input>\n        </el-tooltip>\n\n      </el-form-item>\n\n      <el-form-item label=\"员工信息\">\n        <el-input v-model=\"form.courier_code\" placeholder=\"员工工号\" style=\"width: 100px\"></el-input>\n        <el-input v-model=\"form.courier_name\" placeholder=\"员工姓名\" style=\"width: 100px\"></el-input>\n        <el-dropdown @command=\"handleCommand\">\n          <span class=\"el-dropdown-link\">\n            <i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item v-for=\"item in courier_list\" :command=\"item.code+'-'+item.name\" :key=\"item.code\">{{item.code}}   {{item.name}}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </el-form-item>\n\n    </el-form>\n    <div style=\"padding: 0px 12px\">\n      <el-button type=\"primary\" @click=\"doAssignment\">分配</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Orders from '@/model/dpf/orders'\nimport Ubt from '@/model/dpf/ubt'\n\nexport default {\n  data() {\n    return {\n      form: {\n        environment_id: 1,\n        order_number_list: '',\n        courier_code: '215993',\n        courier_name: '诸志富',\n      },\n      environment_id_list: [{\n        label: '云1',\n        value: 1,\n      }, {\n        label: '云2',\n        value: 2,\n      }],\n      courier_list: [],\n    }\n  },\n  methods: {\n    handleCommand(command) {\n      [this.form.courier_code, this.form.courier_name] = command.split('-')\n    },\n    async getCourierList() {\n      this.courier_list = await Orders.getCourierList()\n    },\n    async doAssignment() {\n      const res = await Orders.courierAssignment(this.form)\n      if (res) {\n        this.$message.success('分配成功')\n      } else {\n        this.$message.error('分配失败')\n      }\n\n      await Ubt.insertUbt('courier-assignment')\n    },\n\n  },\n  mounted() {\n    this.getCourierList()\n  },\n}\n</script>\n\n<!--suppress CssUnknownTarget -->\n<style lang=\"scss\" scoped>\n  @import \"@/static/css/common.scss\";\n  .el-dropdown-link {\n    cursor: pointer;\n    color: #409EFF;\n  }\n  .el-icon-arrow-down {\n    font-size: 12px;\n  }\n</style>\n"],"sourceRoot":"src/view/data-platform/order"}]}