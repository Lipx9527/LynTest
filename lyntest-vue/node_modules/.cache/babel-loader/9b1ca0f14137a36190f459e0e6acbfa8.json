{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/lin/model/log.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/lin/model/log.js","mtime":1606834545476},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable class-methods-use-this */\nimport _axios, { get } from '@/lin/plugin/axios';\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  function Log(_ref) {\n    var _ref$uPage = _ref.uPage,\n        uPage = _ref$uPage === void 0 ? 0 : _ref$uPage,\n        _ref$uCount = _ref.uCount,\n        uCount = _ref$uCount === void 0 ? 5 : _ref$uCount,\n        _ref$lPage = _ref.lPage,\n        lPage = _ref$lPage === void 0 ? 0 : _ref$lPage,\n        _ref$lCount = _ref.lCount,\n        lCount = _ref$lCount === void 0 ? 15 : _ref$lCount,\n        _ref$sPage = _ref.sPage,\n        sPage = _ref$sPage === void 0 ? 0 : _ref$sPage,\n        _ref$sCount = _ref.sCount,\n        sCount = _ref$sCount === void 0 ? 15 : _ref$sCount;\n\n    _classCallCheck(this, Log);\n\n    _defineProperty(this, \"name\", null);\n\n    _defineProperty(this, \"start\", null);\n\n    _defineProperty(this, \"end\", null);\n\n    _defineProperty(this, \"keyword\", null);\n\n    if (uPage === 0) {\n      this.uPage = uPage;\n    }\n\n    if (uCount) {\n      this.uCount = uCount;\n    }\n\n    if (lPage === 0) {\n      this.lPage = lPage;\n    }\n\n    if (lCount) {\n      this.lCount = lCount;\n    }\n\n    if (sPage === 0) {\n      this.sPage = sPage;\n    }\n\n    if (sCount) {\n      this.sCount = sCount;\n    } // lCount && this.lCount = lCount\n\n  }\n\n  _createClass(Log, [{\n    key: \"increaseUpage\",\n    value: function () {\n      var _increaseUpage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.uPage += 1;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function increaseUpage() {\n        return _increaseUpage.apply(this, arguments);\n      }\n\n      return increaseUpage;\n    }()\n  }, {\n    key: \"increaseLpage\",\n    value: function () {\n      var _increaseLpage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.lPage += 1;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function increaseLpage() {\n        return _increaseLpage.apply(this, arguments);\n      }\n\n      return increaseLpage;\n    }()\n  }, {\n    key: \"increaseSpage\",\n    value: function increaseSpage() {\n      this.sPage += 1;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.lPage = 0;\n      this.uPage = 0;\n      this.sPage = 0;\n    }\n  }, {\n    key: \"setBaseInfo\",\n    value: function setBaseInfo(name, start, end) {\n      this.name = name;\n      this.start = start;\n      this.end = end;\n    }\n  }, {\n    key: \"setKeyword\",\n    value: function setKeyword(keyword) {\n      this.keyword = keyword;\n    }\n  }, {\n    key: \"addTestLog\",\n    value: function () {\n      var _addTestLog = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var log;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return get('cms/test/info');\n\n              case 2:\n                log = _context3.sent;\n                return _context3.abrupt(\"return\", log);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function addTestLog() {\n        return _addTestLog.apply(this, arguments);\n      }\n\n      return addTestLog;\n    }()\n    /**\n     * 查询已经被记录过日志的用户（分页）\n     * @param {number} count 每页个数\n     * @param {number} page 第几页\n     */\n\n  }, {\n    key: \"getLoggedUsers\",\n    value: function () {\n      var _getLoggedUsers = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref2) {\n        var count, page, users;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                count = _ref2.count, page = _ref2.page;\n                _context4.next = 3;\n                return get('cms/log/users', {\n                  count: count || this.uCount,\n                  page: page || this.uPage\n                });\n\n              case 3:\n                users = _context4.sent;\n                return _context4.abrupt(\"return\", users);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getLoggedUsers(_x) {\n        return _getLoggedUsers.apply(this, arguments);\n      }\n\n      return getLoggedUsers;\n    }()\n    /**\n     * 查询日志信息（分页）\n     * @param {number} count 每页个数\n     * @param {number} page 第几页\n     * @param {number} name 用户昵称\n     * @param {number} start 起始时间 # 2018-11-01 09:39:35\n     * @param {number} end 结束时间\n     */\n\n  }, {\n    key: \"getLogs\",\n    value: function () {\n      var _getLogs = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(_ref3) {\n        var count, page, name, start, end, _ref3$next, next, res;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                count = _ref3.count, page = _ref3.page, name = _ref3.name, start = _ref3.start, end = _ref3.end, _ref3$next = _ref3.next, next = _ref3$next === void 0 ? false : _ref3$next;\n\n                if (!next) {\n                  this.setBaseInfo(name, start, end);\n                }\n\n                if (page === 0) {\n                  this.lPage = 0;\n                }\n\n                _context5.next = 5;\n                return _axios({\n                  url: 'cms/log',\n                  params: {\n                    count: count || this.lCount,\n                    page: page || this.lPage,\n                    name: name || this.name,\n                    start: start || this.start,\n                    end: end || this.end\n                  },\n                  handleError: true\n                });\n\n              case 5:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getLogs(_x2) {\n        return _getLogs.apply(this, arguments);\n      }\n\n      return getLogs;\n    }()\n    /**\n     * 所搜日志信息（分页）\n     * @param {number} count 每页个数\n     * @param {number} page 第几页\n     * @param {number} keyword 搜索关键词\n     * @param {number} name 用户昵称\n     * @param {number} start 起始时间 # 2018-11-01 09:39:35\n     * @param {number} end 结束时间\n     */\n\n  }, {\n    key: \"searchLogs\",\n    value: function () {\n      var _searchLogs = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(_ref4) {\n        var count, page, keyword, name, start, end, _ref4$next, next, res;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                count = _ref4.count, page = _ref4.page, keyword = _ref4.keyword, name = _ref4.name, start = _ref4.start, end = _ref4.end, _ref4$next = _ref4.next, next = _ref4$next === void 0 ? false : _ref4$next;\n\n                if (!next) {\n                  this.setBaseInfo(name, start, end);\n                  this.setKeyword(keyword);\n                }\n\n                if (page === 0) {\n                  this.sPage = 0;\n                }\n\n                _context6.prev = 3;\n                _context6.next = 6;\n                return get('cms/log/search', {\n                  count: count || this.sCount,\n                  page: page || this.sPage,\n                  keyword: keyword || this.keyword,\n                  name: name || this.name,\n                  start: start || this.start,\n                  end: end || this.end\n                });\n\n              case 6:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", res);\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](3);\n                console.log(_context6.t0);\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[3, 10]]);\n      }));\n\n      function searchLogs(_x3) {\n        return _searchLogs.apply(this, arguments);\n      }\n\n      return searchLogs;\n    }()\n  }, {\n    key: \"moreUserPage\",\n    value: function () {\n      var _moreUserPage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.increaseUpage();\n\n              case 2:\n                return _context7.abrupt(\"return\", this.getLoggedUsers({}));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function moreUserPage() {\n        return _moreUserPage.apply(this, arguments);\n      }\n\n      return moreUserPage;\n    }()\n  }, {\n    key: \"moreLogPage\",\n    value: function () {\n      var _moreLogPage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.increaseLpage();\n\n              case 2:\n                return _context8.abrupt(\"return\", this.getLogs({\n                  next: true\n                }));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function moreLogPage() {\n        return _moreLogPage.apply(this, arguments);\n      }\n\n      return moreLogPage;\n    }()\n  }, {\n    key: \"moreSearchPage\",\n    value: function () {\n      var _moreSearchPage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.increaseSpage();\n                return _context9.abrupt(\"return\", this.searchLogs({\n                  next: true\n                }));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function moreSearchPage() {\n        return _moreSearchPage.apply(this, arguments);\n      }\n\n      return moreSearchPage;\n    }()\n  }]);\n\n  return Log;\n}();\n\nexport default new Log({});",null]}