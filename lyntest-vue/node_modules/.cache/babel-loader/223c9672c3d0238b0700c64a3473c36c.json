{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/statistical/version.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/statistical/version.vue","mtime":1606834545552},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Manager from '@/model/statistical/manager';\nimport Version from '@/model/statistical/version';\nexport default {\n  data: function data() {\n    this.chartSettings = {\n      yAxisType: ['percent'],\n      labelMap: {\n        percent: '上线成功率'\n      }\n    };\n    this.chartExtend = {\n      series: {\n        label: {\n          normal: {\n            show: true\n          }\n        }\n      }\n    };\n    return {\n      date: '',\n      total: 0,\n      search: {\n        count: 10,\n        page: 1,\n        start_time: '',\n        end_time: ''\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date(); //  dateCountForMonth是用以获取上月天数的变量\n\n            var dateCountForMonth = new Date();\n            dateCountForMonth.setMonth(dateCountForMonth.getMonth());\n            dateCountForMonth.setDate(0);\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * dateCountForMonth.getDate());\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近90天',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      product_line_list: [],\n      system: '',\n      system_list: [],\n      tableData: [],\n      rollback_rate_visible: false,\n      version_count_visible: false,\n      chartData: {\n        columns: [],\n        rows: []\n      },\n      chartSettings: {},\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          barWidth: 20 // label: { show: true, position: \"top\", color: \"gray\"}\n\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter: function formatter(value) {\n              return value.split('').join('\\n');\n            }\n          }\n        }\n      },\n      isRollbackList: [{\n        label: '否',\n        value: false\n      }, {\n        label: '是',\n        value: true\n      }],\n      edit_type: 0,\n      // 1新增 2修改\n      edit_dialog_visible: false,\n      default_version_info: {\n        createDate: '',\n        is_rollback: false,\n        is_emergency: false,\n        system: '',\n        versionType: null,\n        description: ''\n      },\n      version_info: {}\n    };\n  },\n  mounted: function mounted() {\n    this.getProductLineList();\n    this.getSystemList();\n    this.searchVersionList();\n  },\n  methods: {\n    // 获取产品线列表\n    getProductLineList: function () {\n      var _getProductLineList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Manager.getProductList();\n\n              case 2:\n                this.product_line_list = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProductLineList() {\n        return _getProductLineList.apply(this, arguments);\n      }\n\n      return getProductLineList;\n    }(),\n    // 获取系统列表\n    getSystemList: function () {\n      var _getSystemList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Version.getSysList();\n\n              case 2:\n                res = _context2.sent;\n                this.system_list = res;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getSystemList() {\n        return _getSystemList.apply(this, arguments);\n      }\n\n      return getSystemList;\n    }(),\n    // 选择时间\n    chooseDate: function () {\n      var _chooseDate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(date) {\n        var _date;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.search.page = 1;\n\n                if (date === null) {\n                  this.search.start_date = '';\n                  this.search.end_date = '';\n                } else {\n                  _date = _slicedToArray(date, 2);\n                  this.search.start_date = _date[0];\n                  this.search.end_date = _date[1];\n                }\n\n                this.searchVersionList();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function chooseDate(_x) {\n        return _chooseDate.apply(this, arguments);\n      }\n\n      return chooseDate;\n    }(),\n    searchVersionList: function () {\n      var _searchVersionList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Version.searchVersionList(this.search);\n\n              case 2:\n                res = _context4.sent;\n                this.tableData = res.items;\n                this.total = res.total;\n                this.tableData.forEach(function (c) {\n                  c.irb = c.is_rollback ? '是' : '否';\n                  c.iemg = c.is_emergency ? '是' : '否';\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function searchVersionList() {\n        return _searchVersionList.apply(this, arguments);\n      }\n\n      return searchVersionList;\n    }(),\n    statisticalRollbackRate: function () {\n      var _statisticalRollbackRate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.chartSettings = {\n                  yAxisType: ['percent'],\n                  labelMap: {\n                    percent: '上线成功率'\n                  }\n                };\n                this.chartData.columns = ['create_date', 'percent'];\n                _context5.next = 4;\n                return Version.queryVersionPercent(this.search);\n\n              case 4:\n                res = _context5.sent;\n\n                if (res.success) {\n                  this.rollback_rate_visible = true;\n                  this.chartData.rows = res.result;\n                } else {\n                  this.$message.error(res.msg);\n                }\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function statisticalRollbackRate() {\n        return _statisticalRollbackRate.apply(this, arguments);\n      }\n\n      return statisticalRollbackRate;\n    }(),\n    statisticalVersionCount: function () {\n      var _statisticalVersionCount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.chartSettings = {\n                  labelMap: {\n                    daily_count: '日常版本',\n                    project_count: '项目版本'\n                  },\n                  stack: {\n                    name: ['daily_count', 'project_count']\n                  }\n                };\n                this.chartData.columns = ['department_name', 'daily_count', 'project_count'];\n                _context6.next = 4;\n                return Version.queryVersionCount(this.search);\n\n              case 4:\n                res = _context6.sent;\n\n                if (res.success) {\n                  this.version_count_visible = true;\n                  this.chartData.rows = res.result;\n                } else {\n                  this.$message.error(res.msg);\n                }\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function statisticalVersionCount() {\n        return _statisticalVersionCount.apply(this, arguments);\n      }\n\n      return statisticalVersionCount;\n    }(),\n    exportExcel: function exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/version/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(function (res) {\n        var link = document.createElement('a');\n        link.style.display = 'none';\n        link.href = URL.createObjectURL(new Blob([res]));\n        link.setAttribute('download', '版本信息.xlsx');\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n      });\n    },\n    insertVersion: function insertVersion() {\n      this.edit_type = 1;\n      this.edit_dialog_visible = true;\n      this.version_info = _objectSpread({}, this.default_version_info);\n    },\n    saveVersion: function () {\n      var _saveVersion = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(this.edit_type === 1)) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                _context7.next = 3;\n                return Version.createVersion(this.version_info);\n\n              case 3:\n                _context7.t0 = _context7.sent;\n                _context7.next = 9;\n                break;\n\n              case 6:\n                _context7.next = 8;\n                return Version.updateVersion(this.version_info);\n\n              case 8:\n                _context7.t0 = _context7.sent;\n\n              case 9:\n                res = _context7.t0;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.edit_dialog_visible = false;\n                  this.searchVersionList();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function saveVersion() {\n        return _saveVersion.apply(this, arguments);\n      }\n\n      return saveVersion;\n    }(),\n    handleEdit: function handleEdit(row) {\n      // 将操作状态设置为2：编辑\n      this.edit_type = 2;\n      this.edit_dialog_visible = true; // 获取case信息\n\n      this.version_info = _objectSpread({}, row);\n    },\n    deleteVersion: function () {\n      var _deleteVersion = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Version.deleteVersion(id);\n\n              case 2:\n                res = _context8.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.searchVersionList();\n                } else {\n                  this.$message.error('删除版本功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function deleteVersion(_x2) {\n        return _deleteVersion.apply(this, arguments);\n      }\n\n      return deleteVersion;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.searchVersionList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.searchVersionList();\n    },\n    isCore: function isCore(system) {\n      var coreList = ['CRM', 'OWS', 'PDA-SP', 'BRMS', 'CCS', 'DPAPP', 'MCRM', 'MOW', 'NDOP', 'OCR', 'OSS', 'OMS', 'NVAS', 'WQS', 'OCB', 'PPC', 'RCP', 'UAP', 'BDM', 'WMC', 'RNA', 'PDC', 'WKPDAM', 'OWS', 'FOSS-P', 'FOSS-PDA', 'FOSS-S', 'ECS-P', 'ECS-PDA', 'ECS-S', 'ECS-ZHCX', 'ECS-ZSJ', 'GAS', 'ACS'];\n      var result = {};\n\n      if (coreList.includes(system)) {\n        result.bool = true;\n        result.value = '核';\n      } else {\n        result.bool = false;\n        result.value = '非';\n      }\n\n      return result;\n    }\n  }\n};",{"version":3,"sources":["version.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card>\n      <el-date-picker style=\"width: 260px\"\n                      v-model=\"date\"\n                      type=\"daterange\"\n                      :picker-options=\"pickerOptions\"\n                      unlink-panels range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\"\n                      value-format=\"yyyy-MM-dd\"\n                      @change=\"chooseDate\">\n      </el-date-picker>\n      <el-select v-model=\"search.product_code\" clearable placeholder=\"产品线\" style=\"width: 180px\" @change=\"searchVersionList\">\n        <el-option v-for=\"item in product_line_list\" :key=\"item.product_code\" :label=\"item.product_name\" :value=\"item.product_code\"></el-option>\n      </el-select>\n      <el-button type=\"primary\" @click=\"statisticalRollbackRate\" style=\"margin-left: 20px\">回滚率</el-button>\n      <el-button type=\"primary\" @click=\"statisticalVersionCount\">版本数</el-button>\n      <el-button type=\"primary\" @click=\"exportExcel\">导出Excel</el-button>\n    </el-card>\n    <el-dialog :visible.sync=\"rollback_rate_visible\">\n      <ve-line :data=\"chartData\" :settings=\"chartSettings\"></ve-line>\n    </el-dialog>\n    <el-dialog :visible.sync=\"version_count_visible\">\n      <ve-histogram :data=\"chartData\" :settings=\"chartSettings\" :extend=\"chartExtend\"></ve-histogram>\n    </el-dialog>\n    <br/>\n    <el-card>\n      <el-row>\n        <el-button type=\"primary\" @click=\"insertVersion\" size=\"small\">新 增</el-button>\n        <el-pagination background\n                       @size-change=\"handleSizeChange\"\n                       @current-change=\"handleCurrentChange\"\n                       :current-page=\"search.page\"\n                       :page-size=\"search.count\"\n                       :page-sizes=\"[10, 20, 50, 100]\"\n                       :total=\"total\" layout=\"total, sizes, prev, pager, next\" style=\"float: right\"/>\n      </el-row>\n      <el-table :data=\"tableData\">\n        <el-table-column prop=\"create_date\" width=\"120\" label=\"时间\" sortable></el-table-column>\n        <el-table-column prop=\"irb\" label=\"是否回滚\" sortable></el-table-column>\n        <el-table-column prop=\"iemg\" label=\"是否紧急\" sortable></el-table-column>\n        <el-table-column prop=\"system\" label=\"所属系统\" sortable>\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"isCore(scope.row.system).bool === true ? 'danger':'info'\" size=\"mini\">{{isCore(scope.row.system).value}}</el-tag>\n            <span>{{scope.row.system}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"product_name\" label=\"产品线\" sortable></el-table-column>\n        <el-table-column prop=\"version_type\" label=\"分类\" sortable></el-table-column>\n        <el-table-column prop=\"description\" label=\"描述\" width=\"200px\"></el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"150\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" v-permission=\"{ permission: '版本删除', type: 'disabled'}\" type=\"danger\" @click=\"deleteVersion(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <el-dialog :visible.sync=\"edit_dialog_visible\" width=\"500px\">\n      <el-form :model=\"version_info\" label-width=\"100px\">\n        <el-form-item label=\"选择日期\">\n          <el-date-picker v-model=\"version_info.create_date\" type=\"date\" placeholder=\"选择日期\" value-format=\"yyyy-MM-dd\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"是否回滚\">\n          <el-select v-model=\"version_info.is_rollback\">\n            <el-option v-for=\"item in isRollbackList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"是否紧急\">\n          <el-select v-model=\"version_info.is_emergency\">\n            <el-option v-for=\"item in isRollbackList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"所属系统\">\n          <el-select filterable v-model=\"version_info.system\">\n            <el-option v-for=\"item in system_list\" :key=\"item.system_name\" :label=\"item.system_name\" :value=\"item.system_name\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"分类\">\n          <el-select v-model=\"version_info.version_type\">\n            <el-option v-for=\"item in ['日常','项目']\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input type=\"textarea\" :rows=\"3\" placeholder=\"请输入内容\" v-model=\"version_info.description\" style=\"width: 200px\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"saveVersion\">保 存</el-button>\n        <el-button @click=\"edit_dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Manager from '@/model/statistical/manager'\nimport Version from '@/model/statistical/version'\n\nexport default {\n  data() {\n    this.chartSettings = {\n      yAxisType: ['percent'],\n      labelMap: {\n        percent: '上线成功率',\n      },\n    }\n    this.chartExtend = {\n      series: {\n        label: {\n          normal: {\n            show: true\n          }\n        }\n      }\n    }\n    return {\n      date: '',\n      total: 0,\n      search: {\n        count: 10,\n        page: 1,\n        start_time: '',\n        end_time: '',\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            //  dateCountForMonth是用以获取上月天数的变量\n            const dateCountForMonth = new Date()\n            dateCountForMonth.setMonth(dateCountForMonth.getMonth())\n            dateCountForMonth.setDate(0)\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * dateCountForMonth.getDate())\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近90天',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      product_line_list: [],\n      system: '',\n      system_list: [],\n      tableData: [],\n      rollback_rate_visible: false,\n      version_count_visible: false,\n      chartData: {\n        columns: [],\n        rows: []\n      },\n      chartSettings: {},\n      chartExtend: {\n        // 柱子宽度\n        series: {\n          barWidth: 20,\n          // label: { show: true, position: \"top\", color: \"gray\"}\n        },\n        // x轴字体斜显示\n        xAxis: {\n          axisLabel: {\n            interval: 0,\n            formatter(value) {\n              return value.split('').join('\\n')\n            }\n          },\n        }\n      },\n      isRollbackList: [{\n        label: '否',\n        value: false,\n      }, {\n        label: '是',\n        value: true,\n      }],\n      edit_type: 0, // 1新增 2修改\n      edit_dialog_visible: false,\n      default_version_info: {\n        createDate: '',\n        is_rollback: false,\n        is_emergency: false,\n        system: '',\n        versionType: null,\n        description: ''\n      },\n      version_info: {}\n    }\n  },\n  mounted() {\n    this.getProductLineList()\n    this.getSystemList()\n    this.searchVersionList()\n  },\n  methods: {\n    // 获取产品线列表\n    async getProductLineList() {\n      this.product_line_list = await Manager.getProductList()\n    },\n    // 获取系统列表\n    async getSystemList() {\n      const res = await Version.getSysList()\n      this.system_list = res\n    },\n    // 选择时间\n    async chooseDate(date) {\n      this.search.page = 1\n      if (date === null) {\n        this.search.start_date = ''\n        this.search.end_date = ''\n      } else {\n        [this.search.start_date, this.search.end_date] = date\n      }\n      this.searchVersionList()\n    },\n    async searchVersionList() {\n      const res = await Version.searchVersionList(this.search)\n      this.tableData = res.items\n      this.total = res.total\n      this.tableData.forEach(c => {\n        c.irb = c.is_rollback ? '是' : '否'\n        c.iemg = c.is_emergency ? '是' : '否'\n      })\n    },\n    async statisticalRollbackRate() {\n      this.chartSettings = {\n        yAxisType: ['percent'],\n        labelMap: {\n          percent: '上线成功率',\n        }\n      }\n      this.chartData.columns = ['create_date', 'percent']\n      const res = await Version.queryVersionPercent(this.search)\n      if (res.success) {\n        this.rollback_rate_visible = true\n        this.chartData.rows = res.result\n      } else {\n        this.$message.error(res.msg)\n      }\n    },\n    async statisticalVersionCount() {\n      this.chartSettings = {\n        labelMap: {\n          daily_count: '日常版本',\n          project_count: '项目版本'\n        },\n        stack: { name: ['daily_count', 'project_count'] }\n      }\n      this.chartData.columns = ['department_name', 'daily_count', 'project_count']\n      const res = await Version.queryVersionCount(this.search)\n      if (res.success) {\n        this.version_count_visible = true\n        this.chartData.rows = res.result\n      } else {\n        this.$message.error(res.msg)\n      }\n    },\n    exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/version/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(\n        res => {\n          const link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = URL.createObjectURL(new Blob([res]))\n          link.setAttribute('download', '版本信息.xlsx')\n          document.body.appendChild(link)\n          link.click()\n          URL.revokeObjectURL(link.href)\n          document.body.removeChild(link)\n        }\n      )\n    },\n    insertVersion() {\n      this.edit_type = 1\n      this.edit_dialog_visible = true\n      this.version_info = { ...this.default_version_info }\n    },\n    async saveVersion() {\n      const res = this.edit_type === 1 ? await Version.createVersion(this.version_info) : await Version.updateVersion(this.version_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.edit_dialog_visible = false\n        this.searchVersionList()\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    handleEdit(row) {\n      // 将操作状态设置为2：编辑\n      this.edit_type = 2\n      this.edit_dialog_visible = true\n      // 获取case信息\n      this.version_info = { ...row }\n    },\n    async deleteVersion(id) {\n      const res = await Version.deleteVersion(id)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.searchVersionList()\n      } else {\n        this.$message.error('删除版本功能异常')\n      }\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.searchVersionList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.searchVersionList()\n    },\n    isCore(system) {\n      const coreList = ['CRM', 'OWS', 'PDA-SP', 'BRMS', 'CCS', 'DPAPP', 'MCRM', 'MOW', 'NDOP', 'OCR', 'OSS', 'OMS',\n        'NVAS', 'WQS', 'OCB', 'PPC', 'RCP', 'UAP', 'BDM', 'WMC', 'RNA', 'PDC', 'WKPDAM', 'OWS', 'FOSS-P', 'FOSS-PDA',\n        'FOSS-S', 'ECS-P', 'ECS-PDA', 'ECS-S', 'ECS-ZHCX', 'ECS-ZSJ', 'GAS', 'ACS']\n      const result = {}\n      if (coreList.includes(system)) {\n        result.bool = true\n        result.value = '核'\n      } else {\n        result.bool = false\n        result.value = '非'\n      }\n      return result\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/view/statistical"}]}