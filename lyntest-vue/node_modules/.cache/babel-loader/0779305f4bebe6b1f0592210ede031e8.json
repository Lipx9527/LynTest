{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/autotest/collection-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/autotest/collection-detail.vue","mtime":1608796490998},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LynCron from '@/component/lyn/lyn-cron';\nimport Collection from '@/model/autotest/collection';\nimport HttpCase from '@/model/autotest/http-case';\nimport CollectionReport from '@/model/autotest/collection-report';\nimport Category from '@/model/autotest/category';\nimport HttpCaseEdit from '@/component/autotest/http-case-edit';\nexport default {\n  components: {\n    LynCron: LynCron,\n    HttpCaseEdit: HttpCaseEdit\n  },\n  data: function data() {\n    return {\n      execute_button_loading: false,\n      collection_id: null,\n      current_pocket_id: null,\n      collection_info: {},\n      push_type_list: [{\n        label: 1,\n        value: '不推送'\n      }, {\n        label: 2,\n        value: '失败时推送'\n      }, {\n        label: 3,\n        value: '总是推送'\n      }],\n      push_list_visible: false,\n      collection_info_dialog_visible: false,\n      config_dialog_visible: false,\n      pocket_dialog_visible: false,\n      timing_dialog_visible: false,\n      drawer_visible: false,\n      pocket_operation_type: 0,\n      search: {\n        count: 10,\n        page: 1,\n        case_name: '',\n        category: '',\n        creator_code: ''\n      },\n      total: 0,\n      creator_list: [],\n      category_list: [],\n      case_list: [],\n      case_info: {},\n      pocket_list: [],\n      // 默认展开的pocketId\n      default_expanded_key: [],\n      pocket_info: {\n        collection_id: null,\n        pocket_name: ''\n      },\n      // 当前选中pocket内，所有case的id的列表\n      current_choose_case_id_list: [],\n      tester_list: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getCategoryList();\n    this.getCreatorList();\n    this.pageInit();\n  },\n  watch: {\n    $route: function $route() {\n      this.pageInit();\n    }\n  },\n  methods: {\n    // 获取系统列表\n    getCategoryList: function () {\n      var _getCategoryList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Category.getCategoryList();\n\n              case 2:\n                res = _context.sent;\n                this.category_list = res;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCategoryList() {\n        return _getCategoryList.apply(this, arguments);\n      }\n\n      return getCategoryList;\n    }(),\n    // 获取创建人列表\n    getCreatorList: function () {\n      var _getCreatorList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return HttpCase.getCreatorList();\n\n              case 2:\n                res = _context2.sent;\n                this.creator_list = res;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCreatorList() {\n        return _getCreatorList.apply(this, arguments);\n      }\n\n      return getCreatorList;\n    }(),\n    pageInit: function () {\n      var _pageInit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.collection_id = this.$route.params.id;\n                this.getCollectionDetail();\n                _context3.next = 4;\n                return this.getPocketList();\n\n              case 4:\n                _context3.next = 6;\n                return this.pocketDefaultExpanded();\n\n              case 6:\n                _context3.next = 8;\n                return this.setPocketCaseIdList();\n\n              case 8:\n                _context3.next = 10;\n                return this.refreshTableInfo();\n\n              case 10:\n                _context3.next = 12;\n                return this.getPushList();\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function pageInit() {\n        return _pageInit.apply(this, arguments);\n      }\n\n      return pageInit;\n    }(),\n    // 获取推送人列表（测试人员）\n    getPushList: function () {\n      var _getPushList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return HttpCase.getCreatorList();\n\n              case 2:\n                this.tester_list = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getPushList() {\n        return _getPushList.apply(this, arguments);\n      }\n\n      return getPushList;\n    }(),\n    // 获取集合基础信息详情（不包含case信息）\n    getCollectionDetail: function () {\n      var _getCollectionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Collection.getCollectionDetail(this.collection_id);\n\n              case 2:\n                this.collection_info = _context5.sent;\n                this.push_list_visible = this.collection_info.push_type === 1;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getCollectionDetail() {\n        return _getCollectionDetail.apply(this, arguments);\n      }\n\n      return getCollectionDetail;\n    }(),\n    // 获取pocket列表\n    getPocketList: function () {\n      var _getPocketList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Collection.getPocketInfo(this.collection_id);\n\n              case 2:\n                this.pocket_list = _context6.sent;\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getPocketList() {\n        return _getPocketList.apply(this, arguments);\n      }\n\n      return getPocketList;\n    }(),\n    // 初始化时，默认展开第一个pocket\n    pocketDefaultExpanded: function pocketDefaultExpanded() {\n      this.current_pocket_id = this.pocket_list[0].id;\n      this.default_expanded_key = [this.pocket_list[0].id];\n    },\n    // 获取当前选中pocket的caseList的id集合\n    setPocketCaseIdList: function () {\n      var _setPocketCaseIdList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.current_choose_case_id_list = [];\n                this.pocket_list.forEach(function (pocket) {\n                  if (pocket.id !== _this.current_pocket_id) {\n                    return false;\n                  }\n\n                  pocket.children.forEach(function (e) {\n                    _this.current_choose_case_id_list.push(e.business_id);\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setPocketCaseIdList() {\n        return _setPocketCaseIdList.apply(this, arguments);\n      }\n\n      return setPocketCaseIdList;\n    }(),\n    // 刷新table的数据与选中状态\n    refreshTableInfo: function () {\n      var _refreshTableInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.searchCaseList();\n\n              case 2:\n                _context8.next = 4;\n                return this.refreshCaseChooseType();\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function refreshTableInfo() {\n        return _refreshTableInfo.apply(this, arguments);\n      }\n\n      return refreshTableInfo;\n    }(),\n    // 获取caseList\n    searchCaseList: function () {\n      var _searchCaseList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return HttpCase.searchCaseList(this.search);\n\n              case 2:\n                res = _context9.sent;\n                this.case_list = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function searchCaseList() {\n        return _searchCaseList.apply(this, arguments);\n      }\n\n      return searchCaseList;\n    }(),\n    // 对caseList中的row的选中状态进行渲染\n    refreshCaseChooseType: function () {\n      var _refreshCaseChooseType = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.case_list.forEach(function (row) {\n                  if (_this2.current_choose_case_id_list.indexOf(row.id) > -1) {\n                    _this2.$refs.multipleTable.toggleRowSelection(row, true);\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function refreshCaseChooseType() {\n        return _refreshCaseChooseType.apply(this, arguments);\n      }\n\n      return refreshCaseChooseType;\n    }(),\n    handleEdit: function handleEdit(row) {\n      this.drawer_visible = true;\n      this.case_info = _objectSpread({}, row);\n    },\n    updateCollection: function () {\n      var _updateCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return Collection.updateCollection(this.collection_info);\n\n              case 2:\n                res = _context11.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.collection_info_dialog_visible = false;\n                  this.config_dialog_visible = false;\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function updateCollection() {\n        return _updateCollection.apply(this, arguments);\n      }\n\n      return updateCollection;\n    }(),\n    closeCollectionEdit: function closeCollectionEdit() {\n      this.collection_info_dialog_visible = false;\n      this.$refs.collection_info.resetFields();\n    },\n    pushListChange: function pushListChange(val) {\n      this.push_list_visible = val === 1;\n    },\n    handleNodeClick: function () {\n      var _handleNodeClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(data, node) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!(node.level === 2)) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\");\n\n              case 2:\n                id = node.level === 1 ? data.id : node.parent.data.id;\n                this.current_pocket_id = id;\n                this.default_expanded_key = [id];\n                this.setPocketCaseIdList();\n                this.getPocketList();\n                _context12.next = 9;\n                return this.refreshTableInfo();\n\n              case 9:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function handleNodeClick(_x, _x2) {\n        return _handleNodeClick.apply(this, arguments);\n      }\n\n      return handleNodeClick;\n    }(),\n    handleDragEnd: function () {\n      var _handleDragEnd = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(draggingNode, dropNode, dropType) {\n        var list, nodes;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (!(dropType === 'none' || dropType === undefined)) {\n                  _context13.next = 2;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\");\n\n              case 2:\n                list = [draggingNode.level];\n                nodes = null;\n\n                if (draggingNode.level === 1) {\n                  nodes = dropNode.parent.data;\n                } else if (draggingNode.level === 2) {\n                  nodes = dropNode.parent.data.children;\n                }\n\n                this.getNodeTree(nodes, draggingNode.data.id, list);\n                _context13.next = 8;\n                return Collection.nodePosition(list);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function handleDragEnd(_x3, _x4, _x5) {\n        return _handleDragEnd.apply(this, arguments);\n      }\n\n      return handleDragEnd;\n    }(),\n    getNodeTree: function getNodeTree(nodes, id, list) {\n      if (!nodes) {\n        return;\n      }\n\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === id) {\n          list[1] = i - 1 >= 0 ? nodes[i - 1].id : 0;\n          list[2] = nodes[i].id;\n          list[3] = i + 1 < nodes.length ? nodes[i + 1].id : 0;\n          return;\n        }\n      }\n    },\n    allowDrop: function allowDrop(draggingNode, dropNode, type) {\n      return draggingNode.level === dropNode.level && type !== 'inner';\n    },\n    createNewPocket: function createNewPocket() {\n      this.pocket_dialog_visible = true;\n      this.pocket_operation_type = 1;\n      this.pocket_info.pocket_name = '';\n      this.pocket_info.collection_id = this.collection_id;\n    },\n    updatePocket: function updatePocket(data) {\n      this.pocket_dialog_visible = true;\n      this.pocket_operation_type = 2;\n      this.pocket_info = {\n        id: data.id,\n        pocket_name: data.name\n      };\n    },\n    deletePocket: function () {\n      var _deletePocket = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (!(this.pocket_list.length <= 1)) {\n                  _context15.next = 3;\n                  break;\n                }\n\n                this.$message.error('至少保留一个模块');\n                return _context15.abrupt(\"return\");\n\n              case 3:\n                this.$confirm('确定要删除吗?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).then(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee14() {\n                  var res;\n                  return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                    while (1) {\n                      switch (_context14.prev = _context14.next) {\n                        case 0:\n                          _context14.next = 2;\n                          return Collection.deletePocket(id);\n\n                        case 2:\n                          res = _context14.sent;\n\n                          if (res.code < window.MAX_SUCCESS_CODE) {\n                            _this3.$message.success(res.message);\n\n                            _this3.pageInit();\n                          } else {\n                            _this3.$message.error('删除功能异常');\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context14.stop();\n                      }\n                    }\n                  }, _callee14);\n                })));\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function deletePocket(_x6) {\n        return _deletePocket.apply(this, arguments);\n      }\n\n      return deletePocket;\n    }(),\n    pocketSave: function () {\n      var _pocketSave = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16() {\n        var res, id;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (!(this.pocket_operation_type === 2)) {\n                  _context16.next = 7;\n                  break;\n                }\n\n                _context16.next = 3;\n                return Collection.updatePocket(this.pocket_info);\n\n              case 3:\n                res = _context16.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(res.message);\n                  this.pocket_dialog_visible = false;\n                  this.getPocketList();\n                } else {\n                  this.$message.error('服务端异常');\n                }\n\n                _context16.next = 23;\n                break;\n\n              case 7:\n                if (!(this.pocket_operation_type === 1)) {\n                  _context16.next = 23;\n                  break;\n                }\n\n                _context16.next = 10;\n                return Collection.createPocket(this.pocket_info);\n\n              case 10:\n                res = _context16.sent;\n\n                if (!(res.code < window.MAX_SUCCESS_CODE)) {\n                  _context16.next = 22;\n                  break;\n                }\n\n                this.pocket_dialog_visible = false;\n                this.getPocketList();\n                id = Number(res.message);\n                this.default_expanded_key = [id];\n                this.current_pocket_id = id;\n                this.current_choose_case_id_list = [];\n                _context16.next = 20;\n                return this.refreshTableInfo();\n\n              case 20:\n                _context16.next = 23;\n                break;\n\n              case 22:\n                this.$message.error('服务端异常');\n\n              case 23:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function pocketSave() {\n        return _pocketSave.apply(this, arguments);\n      }\n\n      return pocketSave;\n    }(),\n    selectAll: function () {\n      var _selectAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(val) {\n        var _this4 = this;\n\n        var list;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                list = [];\n\n                if (!(val.length === 0)) {\n                  _context19.next = 7;\n                  break;\n                }\n\n                // 取消全选\n                this.case_list.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee17(e) {\n                    var param;\n                    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n                      while (1) {\n                        switch (_context17.prev = _context17.next) {\n                          case 0:\n                            param = {\n                              pocket_id: _this4.current_pocket_id,\n                              case_id: e.id,\n                              case_name: e.case_name\n                            };\n                            list.push(param);\n\n                            _this4.current_choose_case_id_list.splice(_this4.current_choose_case_id_list.indexOf(e.id), 1);\n\n                          case 3:\n                          case \"end\":\n                            return _context17.stop();\n                        }\n                      }\n                    }, _callee17);\n                  }));\n\n                  return function (_x8) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                _context19.next = 5;\n                return Collection.batchDeleteCase(list);\n\n              case 5:\n                _context19.next = 10;\n                break;\n\n              case 7:\n                // 全选\n                val.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee18(e) {\n                    var param;\n                    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                      while (1) {\n                        switch (_context18.prev = _context18.next) {\n                          case 0:\n                            if (!_this4.current_choose_case_id_list.includes(e.id)) {\n                              param = {\n                                pocket_id: _this4.current_pocket_id,\n                                case_id: e.id,\n                                case_name: e.case_name\n                              };\n                              list.push(param);\n\n                              _this4.current_choose_case_id_list.push(e.id);\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context18.stop();\n                        }\n                      }\n                    }, _callee18);\n                  }));\n\n                  return function (_x9) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n                _context19.next = 10;\n                return Collection.batchInsertCase(list);\n\n              case 10:\n                this.getPocketList();\n                this.default_expanded_key = [this.current_pocket_id];\n\n              case 12:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function selectAll(_x7) {\n        return _selectAll.apply(this, arguments);\n      }\n\n      return selectAll;\n    }(),\n    rowSelect: function () {\n      var _rowSelect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20(selection, row) {\n        var chooseType, id, case_name, param;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                // false为反选，true为选中\n                chooseType = false;\n                id = row.id, case_name = row.case_name;\n                selection.forEach(function (r) {\n                  chooseType = r.id === id;\n                });\n                param = {\n                  pocket_id: this.current_pocket_id,\n                  case_id: id,\n                  case_name: case_name\n                };\n\n                if (!chooseType) {\n                  _context20.next = 10;\n                  break;\n                }\n\n                _context20.next = 7;\n                return Collection.insertCaseToPocket(param);\n\n              case 7:\n                this.current_choose_case_id_list.push(id);\n                _context20.next = 13;\n                break;\n\n              case 10:\n                _context20.next = 12;\n                return Collection.deleteCaseFromPocket(param);\n\n              case 12:\n                this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(id), 1);\n\n              case 13:\n                this.getPocketList();\n\n              case 14:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function rowSelect(_x10, _x11) {\n        return _rowSelect.apply(this, arguments);\n      }\n\n      return rowSelect;\n    }(),\n    deleteCase: function () {\n      var _deleteCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee21(data) {\n        var param;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(data.business_id), 1);\n                param = {\n                  pocket_id: this.current_pocket_id,\n                  case_id: data.business_id\n                };\n                _context21.next = 4;\n                return Collection.deleteCaseFromPocket(param);\n\n              case 4:\n                _context21.next = 6;\n                return this.getPocketList();\n\n              case 6:\n                _context21.next = 8;\n                return this.refreshTableInfo();\n\n              case 8:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function deleteCase(_x12) {\n        return _deleteCase.apply(this, arguments);\n      }\n\n      return deleteCase;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.refreshTableInfo();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.refreshTableInfo();\n    },\n    doExecute: function () {\n      var _doExecute = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee22() {\n        var reportId;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                this.execute_button_loading = true;\n                _context22.next = 3;\n                return CollectionReport.execute(this.collection_id);\n\n              case 3:\n                reportId = _context22.sent;\n                _context22.next = 6;\n                return new Promise(function (resolve) {\n                  setTimeout(function () {\n                    return resolve('down');\n                  }, 1000);\n                });\n\n              case 6:\n                this.execute_button_loading = false;\n                this.$router.push(\"/autotest/report-detail/\".concat(reportId));\n\n              case 8:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function doExecute() {\n        return _doExecute.apply(this, arguments);\n      }\n\n      return doExecute;\n    }(),\n    drawerClose: function drawerClose() {\n      this.drawer_visible = false;\n      this.searchCaseList();\n    }\n  }\n};",{"version":3,"sources":["collection-detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,4BAAA;AACA,OAAA,gBAAA,MAAA,oCAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,YAAA,MAAA,qCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,YAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,sBAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA,IAFA;AAGA,MAAA,iBAAA,EAAA,IAHA;AAIA,MAAA,eAAA,EAAA,EAJA;AAKA,MAAA,cAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,KAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAHA,EAMA;AACA,QAAA,KAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OANA,CALA;AAeA,MAAA,iBAAA,EAAA,KAfA;AAgBA,MAAA,8BAAA,EAAA,KAhBA;AAiBA,MAAA,qBAAA,EAAA,KAjBA;AAkBA,MAAA,qBAAA,EAAA,KAlBA;AAmBA,MAAA,qBAAA,EAAA,KAnBA;AAoBA,MAAA,cAAA,EAAA,KApBA;AAqBA,MAAA,qBAAA,EAAA,CArBA;AAsBA,MAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,CAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,EAJA;AAKA,QAAA,YAAA,EAAA;AALA,OAtBA;AA6BA,MAAA,KAAA,EAAA,CA7BA;AA8BA,MAAA,YAAA,EAAA,EA9BA;AA+BA,MAAA,aAAA,EAAA,EA/BA;AAgCA,MAAA,SAAA,EAAA,EAhCA;AAiCA,MAAA,SAAA,EAAA,EAjCA;AAkCA,MAAA,WAAA,EAAA,EAlCA;AAmCA;AACA,MAAA,oBAAA,EAAA,EApCA;AAqCA,MAAA,WAAA,EAAA;AACA,QAAA,aAAA,EAAA,IADA;AAEA,QAAA,WAAA,EAAA;AAFA,OArCA;AAyCA;AACA,MAAA,2BAAA,EAAA,EA1CA;AA2CA,MAAA,WAAA,EAAA,EA3CA;AA4CA,MAAA,YAAA,EAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA;AA5CA,KAAA;AAiDA,GAvDA;AAwDA,EAAA,OAxDA,qBAwDA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACA,SAAA,QAAA;AACA,GA5DA;AA6DA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,QAAA;AACA;AAHA,GA7DA;AAkEA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,eAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,QAAA,CAAA,eAAA,EAHA;;AAAA;AAGA,gBAAA,GAHA;AAIA,qBAAA,aAAA,GAAA,GAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMA;AACA,IAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQA,QAAA,CAAA,cAAA,EARA;;AAAA;AAQA,gBAAA,GARA;AASA,qBAAA,YAAA,GAAA,GAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA,IAAA,QAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,qBAAA,aAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,qBAAA,mBAAA;AAbA;AAAA,uBAcA,KAAA,aAAA,EAdA;;AAAA;AAAA;AAAA,uBAeA,KAAA,qBAAA,EAfA;;AAAA;AAAA;AAAA,uBAgBA,KAAA,mBAAA,EAhBA;;AAAA;AAAA;AAAA,uBAiBA,KAAA,gBAAA,EAjBA;;AAAA;AAAA;AAAA,uBAkBA,KAAA,WAAA,EAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBA;AACA,IAAA,WArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsBA,QAAA,CAAA,cAAA,EAtBA;;AAAA;AAsBA,qBAAA,WAtBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBA;AACA,IAAA,mBAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0BA,UAAA,CAAA,mBAAA,CAAA,KAAA,aAAA,CA1BA;;AAAA;AA0BA,qBAAA,eA1BA;AA2BA,qBAAA,iBAAA,GAAA,KAAA,eAAA,CAAA,SAAA,KAAA,CAAA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6BA;AACA,IAAA,aA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+BA,UAAA,CAAA,aAAA,CAAA,KAAA,aAAA,CA/BA;;AAAA;AA+BA,qBAAA,WA/BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCA;AACA,IAAA,qBAlCA,mCAkCA;AACA,WAAA,iBAAA,GAAA,KAAA,WAAA,CAAA,CAAA,EAAA,EAAA;AACA,WAAA,oBAAA,GAAA,CAAA,KAAA,WAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,KArCA;AAsCA;AACA,IAAA,mBAvCA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwCA,qBAAA,2BAAA,GAAA,EAAA;AACA,qBAAA,WAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,sBAAA,MAAA,CAAA,EAAA,KAAA,KAAA,CAAA,iBAAA,EAAA;AACA,2BAAA,KAAA;AACA;;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,2BAAA,CAAA,IAAA,CAAA,CAAA,CAAA,WAAA;AACA,mBAFA;AAGA,iBAPA;;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkDA;AACA,IAAA,gBAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoDA,KAAA,cAAA,EApDA;;AAAA;AAAA;AAAA,uBAqDA,KAAA,qBAAA,EArDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDA;AACA,IAAA,cAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAyDA,QAAA,CAAA,cAAA,CAAA,KAAA,MAAA,CAzDA;;AAAA;AAyDA,gBAAA,GAzDA;AA0DA,qBAAA,SAAA,GAAA,GAAA,CAAA,KAAA;AACA,qBAAA,KAAA,GAAA,GAAA,CAAA,KAAA;;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6DA;AACA,IAAA,qBA9DA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA+DA,qBAAA,SAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,sBAAA,MAAA,CAAA,2BAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,IAAA;AACA;AACA,iBAJA;;AA/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqEA,IAAA,UArEA,sBAqEA,GArEA,EAqEA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,WAAA,SAAA,qBAAA,GAAA;AACA,KAxEA;AAyEA,IAAA,gBAzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA0EA,UAAA,CAAA,gBAAA,CAAA,KAAA,eAAA,CA1EA;;AAAA;AA0EA,gBAAA,GA1EA;;AA2EA,oBAAA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,gBAAA,EAAA;AACA,uBAAA,8BAAA,GAAA,KAAA;AACA,uBAAA,qBAAA,GAAA,KAAA;AACA,iBAHA,MAGA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,OAAA;AACA;;AAhFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkFA,IAAA,mBAlFA,iCAkFA;AACA,WAAA,8BAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,eAAA,CAAA,WAAA;AACA,KArFA;AAsFA,IAAA,cAtFA,0BAsFA,GAtFA,EAsFA;AACA,WAAA,iBAAA,GAAA,GAAA,KAAA,CAAA;AACA,KAxFA;AAyFA,IAAA,eAzFA;AAAA;AAAA;AAAA,kDAyFA,IAzFA,EAyFA,IAzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA0FA,IAAA,CAAA,KAAA,KAAA,CA1FA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA6FA,gBAAA,EA7FA,GA6FA,IAAA,CAAA,KAAA,KAAA,CAAA,GAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EA7FA;AA8FA,qBAAA,iBAAA,GAAA,EAAA;AACA,qBAAA,oBAAA,GAAA,CAAA,EAAA,CAAA;AACA,qBAAA,mBAAA;AACA,qBAAA,aAAA;AAjGA;AAAA,uBAkGA,KAAA,gBAAA,EAlGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoGA,IAAA,aApGA;AAAA;AAAA;AAAA,kDAoGA,YApGA,EAoGA,QApGA,EAoGA,QApGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAqGA,QAAA,KAAA,MAAA,IAAA,QAAA,KAAA,SArGA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAwGA,gBAAA,IAxGA,GAwGA,CAAA,YAAA,CAAA,KAAA,CAxGA;AAyGA,gBAAA,KAzGA,GAyGA,IAzGA;;AA0GA,oBAAA,YAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,kBAAA,KAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA;AACA,iBAFA,MAEA,IAAA,YAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,kBAAA,KAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA;;AACA,qBAAA,WAAA,CAAA,KAAA,EAAA,YAAA,CAAA,IAAA,CAAA,EAAA,EAAA,IAAA;AA/GA;AAAA,uBAgHA,UAAA,CAAA,YAAA,CAAA,IAAA,CAhHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkHA,IAAA,WAlHA,uBAkHA,KAlHA,EAkHA,EAlHA,EAkHA,IAlHA,EAkHA;AACA,UAAA,CAAA,KAAA,EAAA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AACA,UAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,UAAA,IAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA;AACA;AACA;AACA,KA9HA;AA+HA,IAAA,SA/HA,qBA+HA,YA/HA,EA+HA,QA/HA,EA+HA,IA/HA,EA+HA;AACA,aAAA,YAAA,CAAA,KAAA,KAAA,QAAA,CAAA,KAAA,IAAA,IAAA,KAAA,OAAA;AACA,KAjIA;AAkIA,IAAA,eAlIA,6BAkIA;AACA,WAAA,qBAAA,GAAA,IAAA;AACA,WAAA,qBAAA,GAAA,CAAA;AACA,WAAA,WAAA,CAAA,WAAA,GAAA,EAAA;AACA,WAAA,WAAA,CAAA,aAAA,GAAA,KAAA,aAAA;AACA,KAvIA;AAwIA,IAAA,YAxIA,wBAwIA,IAxIA,EAwIA;AACA,WAAA,qBAAA,GAAA,IAAA;AACA,WAAA,qBAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA;AACA,QAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,QAAA,WAAA,EAAA,IAAA,CAAA;AAFA,OAAA;AAIA,KA/IA;AAgJA,IAAA,YAhJA;AAAA;AAAA;AAAA,kDAgJA,EAhJA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBAiJA,KAAA,WAAA,CAAA,MAAA,IAAA,CAjJA;AAAA;AAAA;AAAA;;AAkJA,qBAAA,QAAA,CAAA,KAAA,CAAA,UAAA;AAlJA;;AAAA;AAqJA,qBAAA,QAAA,CAAA,SAAA,EAAA,IAAA,EAAA;AACA,kBAAA,iBAAA,EAAA,IADA;AAEA,kBAAA,gBAAA,EAAA,IAFA;AAGA,kBAAA,IAAA,EAAA;AAHA,iBAAA,EAKA,IALA;AAAA;AAAA;AAAA;AAAA,yCAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,UAAA,CAAA,YAAA,CAAA,EAAA,CADA;;AAAA;AACA,0BAAA,GADA;;AAEA,8BAAA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,gBAAA,EAAA;AACA,4BAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;;AACA,4BAAA,MAAA,CAAA,QAAA;AACA,2BAHA,MAGA;AACA,4BAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA;AACA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANA;;AArJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsKA,IAAA,UAtKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAwKA,KAAA,qBAAA,KAAA,CAxKA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAyKA,UAAA,CAAA,YAAA,CAAA,KAAA,WAAA,CAzKA;;AAAA;AAyKA,gBAAA,GAzKA;;AA0KA,oBAAA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,gBAAA,EAAA;AACA,uBAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,uBAAA,qBAAA,GAAA,KAAA;AACA,uBAAA,aAAA;AACA,iBAJA,MAIA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,OAAA;AACA;;AAhLA;AAAA;;AAAA;AAAA,sBAiLA,KAAA,qBAAA,KAAA,CAjLA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkLA,UAAA,CAAA,YAAA,CAAA,KAAA,WAAA,CAlLA;;AAAA;AAkLA,gBAAA,GAlLA;;AAAA,sBAmLA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,gBAnLA;AAAA;AAAA;AAAA;;AAoLA,qBAAA,qBAAA,GAAA,KAAA;AACA,qBAAA,aAAA;AACA,gBAAA,EAtLA,GAsLA,MAAA,CAAA,GAAA,CAAA,OAAA,CAtLA;AAuLA,qBAAA,oBAAA,GAAA,CAAA,EAAA,CAAA;AACA,qBAAA,iBAAA,GAAA,EAAA;AACA,qBAAA,2BAAA,GAAA,EAAA;AAzLA;AAAA,uBA0LA,KAAA,gBAAA,EA1LA;;AAAA;AAAA;AAAA;;AAAA;AA4LA,qBAAA,QAAA,CAAA,KAAA,CAAA,OAAA;;AA5LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgMA,IAAA,SAhMA;AAAA;AAAA;AAAA,kDAgMA,GAhMA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiMA,gBAAA,IAjMA,GAiMA,EAjMA;;AAAA,sBAkMA,GAAA,CAAA,MAAA,KAAA,CAlMA;AAAA;AAAA;AAAA;;AAmMA;AACA,qBAAA,SAAA,CAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAA,mBAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAAA,KADA,GACA;AACA,8BAAA,SAAA,EAAA,MAAA,CAAA,iBADA;AAEA,8BAAA,OAAA,EAAA,CAAA,CAAA,EAFA;AAGA,8BAAA,SAAA,EAAA,CAAA,CAAA;AAHA,6BADA;AAMA,4BAAA,IAAA,CAAA,IAAA,CAAA,KAAA;;AACA,4BAAA,MAAA,CAAA,2BAAA,CAAA,MAAA,CAAA,MAAA,CAAA,2BAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA;AApMA;AAAA,uBA6MA,UAAA,CAAA,eAAA,CAAA,IAAA,CA7MA;;AAAA;AAAA;AAAA;;AAAA;AA+MA;AACA,gBAAA,GAAA,CAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAA,mBAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAAA,CAAA,MAAA,CAAA,2BAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACA,8BAAA,KADA,GACA;AACA,gCAAA,SAAA,EAAA,MAAA,CAAA,iBADA;AAEA,gCAAA,OAAA,EAAA,CAAA,CAAA,EAFA;AAGA,gCAAA,SAAA,EAAA,CAAA,CAAA;AAHA,+BADA;AAMA,8BAAA,IAAA,CAAA,IAAA,CAAA,KAAA;;AACA,8BAAA,MAAA,CAAA,2BAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA;AAhNA;AAAA,uBA2NA,UAAA,CAAA,eAAA,CAAA,IAAA,CA3NA;;AAAA;AA6NA,qBAAA,aAAA;AACA,qBAAA,oBAAA,GAAA,CAAA,KAAA,iBAAA,CAAA;;AA9NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgOA,IAAA,SAhOA;AAAA;AAAA;AAAA,kDAgOA,SAhOA,EAgOA,GAhOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiOA;AACA,gBAAA,UAlOA,GAkOA,KAlOA;AAmOA,gBAAA,EAnOA,GAmOA,GAnOA,CAmOA,EAnOA,EAmOA,SAnOA,GAmOA,GAnOA,CAmOA,SAnOA;AAoOA,gBAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,kBAAA,UAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AACA,iBAFA;AAGA,gBAAA,KAvOA,GAuOA;AACA,kBAAA,SAAA,EAAA,KAAA,iBADA;AAEA,kBAAA,OAAA,EAAA,EAFA;AAGA,kBAAA,SAAA,EAAA;AAHA,iBAvOA;;AAAA,qBA4OA,UA5OA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA6OA,UAAA,CAAA,kBAAA,CAAA,KAAA,CA7OA;;AAAA;AA8OA,qBAAA,2BAAA,CAAA,IAAA,CAAA,EAAA;AA9OA;AAAA;;AAAA;AAAA;AAAA,uBAgPA,UAAA,CAAA,oBAAA,CAAA,KAAA,CAhPA;;AAAA;AAiPA,qBAAA,2BAAA,CAAA,MAAA,CAAA,KAAA,2BAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA;;AAjPA;AAmPA,qBAAA,aAAA;;AAnPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqPA,IAAA,UArPA;AAAA;AAAA;AAAA,kDAqPA,IArPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsPA,qBAAA,2BAAA,CAAA,MAAA,CAAA,KAAA,2BAAA,CAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAA,EAAA,CAAA;AACA,gBAAA,KAvPA,GAuPA;AACA,kBAAA,SAAA,EAAA,KAAA,iBADA;AAEA,kBAAA,OAAA,EAAA,IAAA,CAAA;AAFA,iBAvPA;AAAA;AAAA,uBA2PA,UAAA,CAAA,oBAAA,CAAA,KAAA,CA3PA;;AAAA;AAAA;AAAA,uBA4PA,KAAA,aAAA,EA5PA;;AAAA;AAAA;AAAA,uBA6PA,KAAA,gBAAA,EA7PA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+PA,IAAA,gBA/PA,4BA+PA,GA/PA,EA+PA;AACA,WAAA,MAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,gBAAA;AACA,KAlQA;AAmQA,IAAA,mBAnQA,+BAmQA,GAnQA,EAmQA;AACA,WAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA,WAAA,gBAAA;AACA,KAtQA;AAuQA,IAAA,SAvQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwQA,qBAAA,sBAAA,GAAA,IAAA;AAxQA;AAAA,uBAyQA,gBAAA,CAAA,OAAA,CAAA,KAAA,aAAA,CAzQA;;AAAA;AAyQA,gBAAA,QAzQA;AAAA;AAAA,uBA0QA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA;AAAA,2BAAA,OAAA,CAAA,MAAA,CAAA;AAAA,mBAAA,EAAA,IAAA,CAAA;AACA,iBAFA,CA1QA;;AAAA;AA6QA,qBAAA,sBAAA,GAAA,KAAA;AACA,qBAAA,OAAA,CAAA,IAAA,mCAAA,QAAA;;AA9QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgRA,IAAA,WAhRA,yBAgRA;AACA,WAAA,cAAA,GAAA,KAAA;AACA,WAAA,cAAA;AACA;AAnRA;AAlEA,CAAA","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"title\">{{collection_info.collection_name}} <i class=\"el-icon-edit\" @click=\"collection_info_dialog_visible = true\"></i></div>\n      <el-button type=\"primary\" size=\"small\" icon=\"el-icon-setting\" style=\"float: right\" @click=\"config_dialog_visible = true\"/>\n    </div>\n    <div class=\"body\">\n      <el-card class=\"pocket-card\">\n        <el-button type=\"success\"\n                   class=\"run-button\"\n                   @click=\"doExecute\"\n                   :disabled=\"pocket_list.length === 1 && current_choose_case_id_list.length === 0\">\n          执 行\n          <i v-if=\"execute_button_loading\" class=\"el-icon-loading\"></i>\n          <i v-else class=\"el-icon-video-play\"></i>\n        </el-button>\n        <div class=\"tree-list\">\n          <vue-scroll>\n            <el-tree :data=\"pocket_list\" :props=\"defaultProps\"\n                     @node-click=\"handleNodeClick\"\n                     @node-drag-end=\"handleDragEnd\"\n                     :allow-drop=\"allowDrop\"\n                     :default-expanded-keys=\"default_expanded_key\"\n                     node-key=\"id\"\n                     draggable\n                     highlight-current\n                     accordion\n                     ref=\"tree\"\n                     style=\"margin-top: 10px\">\n              <template v-slot:default=\"{node,data}\">\n            <span class=\"custom-tree-node father\">\n              <span v-if=\"node.level === 1\" class=\"node-icon\">\n                <i class=\"el-icon-folder\"></i>\n              </span>\n              <!--如果没修改过字段，这里对应后端应该使用node.name-->\n              <span class=\"node-title\">{{ node.label }}</span>\n              <span v-if=\"node.level === 1\" class=\"node-operate child\">\n                <el-tooltip\n                  class=\"item\"\n                  effect=\"dark\"\n                  :open-delay=\"200\"\n                  content=\"新增模块\"\n                  placement=\"top\">\n                  <i @click.stop=\"createNewPocket\" class=\"el-icon-circle-plus-outline\"></i>\n                </el-tooltip>\n                <el-tooltip\n                  class=\"item\"\n                  effect=\"dark\"\n                  :open-delay=\"200\"\n                  content=\"重命名\"\n                  placement=\"top\">\n                  <i @click.stop=\"updatePocket(data)\" class=\"el-icon-edit\"></i>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\"\n                            :open-delay=\"200\" content=\"删除\" placement=\"top\">\n                  <i @click.stop=\"deletePocket(data.id)\" class=\"el-icon-delete\"></i>\n                </el-tooltip>\n              </span>\n              <span v-if=\"node.level === 2\" class=\"node-operate child\">\n                <el-tooltip class=\"item\" effect=\"dark\"\n                            :open-delay=\"200\" content=\"删除\" placement=\"top\">\n                  <i @click.stop=\"deleteCase(data)\" class=\"el-icon-delete\"></i>\n                </el-tooltip>\n              </span>\n            </span>\n              </template>\n            </el-tree>\n          </vue-scroll>\n        </div>\n\n      </el-card>\n      <el-card class=\"case-manage-card\">\n        <el-row>\n          <el-input v-model=\"search.case_name\"\n                    placeholder=\"接口名称\"\n                    class=\"row-name\"\n                    size=\"small\"\n                    @change=\"refreshTableInfo\" />\n          <el-select v-model=\"search.category\"\n                     placeholder=\"系 统\"\n                     class=\"row-category\"\n                     @change=\"refreshTableInfo\"\n                     clearable\n                     size=\"small\"\n                     filterable>\n            <el-option v-for=\"item in category_list\"\n                       :key=\"item.category_name\"\n                       :label=\"item.category_name\"\n                       :value=\"item.category_name\"/>\n          </el-select>\n          <el-select v-model=\"search.creator_code\"\n                     placeholder=\"创建人\"\n                     class=\"row-creator\"\n                     @change=\"refreshTableInfo\"\n                     clearable\n                     size=\"small\"\n                     filterable>\n            <el-option v-for=\"item in creator_list\"\n                       :key=\"item.creator_code\"\n                       :label=\"item.creator_name\"\n                       :value=\"item.creator_code\">\n              <span class=\"creator-name\">{{ item.creator_name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.creator_code }}</span>\n            </el-option>\n          </el-select>\n          <el-pagination background\n                         small\n                         @size-change=\"handleSizeChange\"\n                         @current-change=\"handleCurrentChange\"\n                         :current-page=\"search.page\"\n                         :page-size=\"search.count\"\n                         :page-sizes=\"[10, 20, 50, 100]\"\n                         :total=\"total\" layout=\"sizes, prev, pager, next\" style=\"float: right\">\n          </el-pagination>\n        </el-row>\n        <div class=\"case-table\">\n          <vue-scroll>\n            <el-table ref=\"multipleTable\"\n                      :data=\"case_list\"\n                      tooltip-effect=\"dark\"\n                      @select-all=\"selectAll\"\n                      @select=\"rowSelect\"\n                      stripe>\n              <el-table-column type=\"selection\" width=\"35\" fixed/>\n              <el-table-column prop=\"case_name\" label=\"接口名称\" min-width=\"200\" fixed></el-table-column>\n              <el-table-column label=\"备注\" fixed>\n                <template v-slot:default=\"scope\">\n                  <el-tooltip effect=\"dark\" placement=\"top-start\" v-if=\"scope.row.description\">\n                    <div slot=\"content\">{{scope.row.description}}</div>\n                    <l-icon name=\"read\" color=\"#409EFF\" height=\"1.6em\" width=\"1.6em\"></l-icon>\n                  </el-tooltip>\n                  <l-icon name=\"read\" color=\"#ccc\" height=\"1.6em\" width=\"1.6em\" v-else></l-icon>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"api_method\" min-width=\"100\" label=\"请求方式\">\n                <template v-slot:default=\"scope\">\n                  <div :class=\"scope.row.api_method\">{{scope.row.api_method}}</div>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"接口路径\" prop=\"api_url\" :show-overflow-tooltip=\"true\" min-width=\"440\"></el-table-column>\n              <el-table-column prop=\"category\" label=\"系 统\" min-width=\"100\" sortable/>\n              <el-table-column prop=\"creator_name\" label=\"创建人\" width=\"120\"/>\n              <el-table-column\n                align=\"center\"\n                fixed=\"right\"\n                label=\"操作\">\n                <template v-slot:default=\"scope\">\n                  <el-tooltip content=\"编辑\"\n                              placement=\"bottom\"\n                              :enterable=\"false\"\n                              effect=\"dark\">\n                    <el-button\n                      type=\"primary\"\n                      icon=\"el-icon-edit\"\n                      circle size=\"mini\"\n                      @click=\"handleEdit(scope.row)\"></el-button>\n                  </el-tooltip>\n                </template>\n              </el-table-column>\n            </el-table>\n          </vue-scroll>\n        </div>\n      </el-card>\n    </div>\n    <el-dialog :visible.sync=\"collection_info_dialog_visible\" width=\"400px\" :close-on-click-modal=\"false\">\n      <el-form :model=\"collection_info\" ref=\"collection_info\" label-width=\"80px\">\n        <el-form-item prop=\"collection_name\" label=\"集合名\">\n          <el-input v-model=\"collection_info.collection_name\" style=\"width: 240px\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"description\" label=\"描述\">\n          <el-input v-model=\"collection_info.description\" style=\"width: 240px\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"updateCollection\">保 存</el-button>\n        <el-button @click=\"closeCollectionEdit\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"config_dialog_visible\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"定时任务\">\n          <el-switch v-model=\"collection_info.timing_switch\" active-color=\"#13ce66\"></el-switch>\n          <el-input placeholder=\"请输入cron表达式\"\n                    v-show=\"collection_info.timing_switch\"\n                    v-model=\"collection_info.cron\"\n                    clearable\n                    style=\"width: 240px;margin-left: 20px\">\n            <el-button type=\"primary\"\n                       icon=\"el-icon-time\"\n                       slot=\"append\"\n                       @click=\"timing_dialog_visible = true\"\n                       v-if=\"collection_info.timing_switch\"></el-button>\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"微信推送\">\n          <el-radio-group v-model=\"collection_info.push_type\" @change=\"pushListChange\">\n            <el-radio v-for=\"item in push_type_list\" :key=\"item.label\" :label=\"item.label\">{{item.value}}</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"推送列表\">\n          <el-select v-model=\"collection_info.push_list\" multiple filterable :disabled=\"push_list_visible\" placeholder=\"请选择\" style=\"width: 200px\">\n            <el-option v-for=\"item in tester_list\" :key=\"item.creator_code\" :label=\"item.creator_name\" :value=\"item.creator_code\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"updateCollection\">保 存</el-button>\n        <el-button @click=\"config_dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"pocket_dialog_visible\" destroy-on-close width=\"400px\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"模块名\">\n          <el-input v-model=\"pocket_info.pocket_name\"\n                    placeholder=\"请输入名称\" style=\"width: 240px\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"pocketSave\">保 存</el-button>\n        <el-button @click=\"pocket_dialog_visible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"timing_dialog_visible\"\n               destroy-on-close\n               width=\"800px\"\n               :show-close=\"false\"\n               :close-on-click-modal=\"false\">\n      <lyn-cron v-model=\"collection_info.cron\"></lyn-cron>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"timing_dialog_visible = false\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-drawer :visible.sync=\"drawer_visible\" :with-header=\"false\" size=\"70%\">\n      <http-case-edit v-if=\"drawer_visible\" :case-info=\"case_info\" operation-type=\"2\" @drawer-close=\"drawerClose\"></http-case-edit>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport LynCron from '@/component/lyn/lyn-cron'\nimport Collection from '@/model/autotest/collection'\nimport HttpCase from '@/model/autotest/http-case'\nimport CollectionReport from '@/model/autotest/collection-report'\nimport Category from '@/model/autotest/category'\nimport HttpCaseEdit from '@/component/autotest/http-case-edit'\n\nexport default {\n  components: {\n    LynCron,\n    HttpCaseEdit\n  },\n  data() {\n    return {\n      execute_button_loading: false,\n      collection_id: null,\n      current_pocket_id: null,\n      collection_info: {},\n      push_type_list: [{\n        label: 1,\n        value: '不推送'\n      }, {\n        label: 2,\n        value: '失败时推送'\n      }, {\n        label: 3,\n        value: '总是推送'\n      }],\n      push_list_visible: false,\n      collection_info_dialog_visible: false,\n      config_dialog_visible: false,\n      pocket_dialog_visible: false,\n      timing_dialog_visible: false,\n      drawer_visible: false,\n      pocket_operation_type: 0,\n      search: {\n        count: 10,\n        page: 1,\n        case_name: '',\n        category: '',\n        creator_code: '',\n      },\n      total: 0,\n      creator_list: [],\n      category_list: [],\n      case_list: [],\n      case_info: {},\n      pocket_list: [],\n      // 默认展开的pocketId\n      default_expanded_key: [],\n      pocket_info: {\n        collection_id: null,\n        pocket_name: ''\n      },\n      // 当前选中pocket内，所有case的id的列表\n      current_choose_case_id_list: [],\n      tester_list: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    }\n  },\n  mounted() {\n    this.getCategoryList()\n    this.getCreatorList()\n    this.pageInit()\n  },\n  watch: {\n    $route() {\n      this.pageInit()\n    }\n  },\n  methods: {\n    // 获取系统列表\n    async getCategoryList() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    // 获取创建人列表\n    async getCreatorList() {\n      const res = await HttpCase.getCreatorList()\n      this.creator_list = res\n    },\n    async pageInit() {\n      this.collection_id = this.$route.params.id\n      this.getCollectionDetail()\n      await this.getPocketList()\n      await this.pocketDefaultExpanded()\n      await this.setPocketCaseIdList()\n      await this.refreshTableInfo()\n      await this.getPushList()\n    },\n    // 获取推送人列表（测试人员）\n    async getPushList() {\n      this.tester_list = await HttpCase.getCreatorList()\n    },\n    // 获取集合基础信息详情（不包含case信息）\n    async getCollectionDetail() {\n      this.collection_info = await Collection.getCollectionDetail(this.collection_id)\n      this.push_list_visible = this.collection_info.push_type === 1\n    },\n    // 获取pocket列表\n    async getPocketList() {\n      this.pocket_list = await Collection.getPocketInfo(this.collection_id)\n    },\n    // 初始化时，默认展开第一个pocket\n    pocketDefaultExpanded() {\n      this.current_pocket_id = this.pocket_list[0].id\n      this.default_expanded_key = [this.pocket_list[0].id]\n    },\n    // 获取当前选中pocket的caseList的id集合\n    async setPocketCaseIdList() {\n      this.current_choose_case_id_list = []\n      this.pocket_list.forEach(pocket => {\n        if (pocket.id !== this.current_pocket_id) {\n          return false\n        }\n        pocket.children.forEach(e => {\n          this.current_choose_case_id_list.push(e.business_id)\n        })\n      })\n    },\n    // 刷新table的数据与选中状态\n    async refreshTableInfo() {\n      await this.searchCaseList()\n      await this.refreshCaseChooseType()\n    },\n    // 获取caseList\n    async searchCaseList() {\n      const res = await HttpCase.searchCaseList(this.search)\n      this.case_list = res.items\n      this.total = res.total\n    },\n    // 对caseList中的row的选中状态进行渲染\n    async refreshCaseChooseType() {\n      this.case_list.forEach(row => {\n        if (this.current_choose_case_id_list.indexOf(row.id) > -1) {\n          this.$refs.multipleTable.toggleRowSelection(row, true)\n        }\n      })\n    },\n    handleEdit(row) {\n      this.drawer_visible = true\n      this.case_info = { ...row }\n    },\n    async updateCollection() {\n      const res = await Collection.updateCollection(this.collection_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.collection_info_dialog_visible = false\n        this.config_dialog_visible = false\n      } else {\n        this.$message.error('服务端异常')\n      }\n    },\n    closeCollectionEdit() {\n      this.collection_info_dialog_visible = false\n      this.$refs.collection_info.resetFields()\n    },\n    pushListChange(val) {\n      this.push_list_visible = val === 1\n    },\n    async handleNodeClick(data, node) {\n      if (node.level === 2) {\n        return\n      }\n      const id = node.level === 1 ? data.id : node.parent.data.id\n      this.current_pocket_id = id\n      this.default_expanded_key = [id]\n      this.setPocketCaseIdList()\n      this.getPocketList()\n      await this.refreshTableInfo()\n    },\n    async handleDragEnd(draggingNode, dropNode, dropType) {\n      if (dropType === 'none' || dropType === undefined) {\n        return\n      }\n      const list = [draggingNode.level]\n      let nodes = null\n      if (draggingNode.level === 1) {\n        nodes = dropNode.parent.data\n      } else if (draggingNode.level === 2) {\n        nodes = dropNode.parent.data.children\n      }\n      this.getNodeTree(nodes, draggingNode.data.id, list)\n      await Collection.nodePosition(list)\n    },\n    getNodeTree(nodes, id, list) {\n      if (!nodes) {\n        return\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === id) {\n          list[1] = i - 1 >= 0 ? nodes[i - 1].id : 0\n          list[2] = nodes[i].id\n          list[3] = i + 1 < nodes.length ? nodes[i + 1].id : 0\n          return\n        }\n      }\n    },\n    allowDrop(draggingNode, dropNode, type) {\n      return draggingNode.level === dropNode.level && type !== 'inner'\n    },\n    createNewPocket() {\n      this.pocket_dialog_visible = true\n      this.pocket_operation_type = 1\n      this.pocket_info.pocket_name = ''\n      this.pocket_info.collection_id = this.collection_id\n    },\n    updatePocket(data) {\n      this.pocket_dialog_visible = true\n      this.pocket_operation_type = 2\n      this.pocket_info = {\n        id: data.id,\n        pocket_name: data.name\n      }\n    },\n    async deletePocket(id) {\n      if (this.pocket_list.length <= 1) {\n        this.$message.error('至少保留一个模块')\n        return\n      }\n      this.$confirm('确定要删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      })\n        .then(\n          async () => {\n            const res = await Collection.deletePocket(id)\n            if (res.code < window.MAX_SUCCESS_CODE) {\n              this.$message.success(res.message)\n              this.pageInit()\n            } else {\n              this.$message.error('删除功能异常')\n            }\n          }\n        )\n    },\n    async pocketSave() {\n      let res\n      if (this.pocket_operation_type === 2) {\n        res = await Collection.updatePocket(this.pocket_info)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(res.message)\n          this.pocket_dialog_visible = false\n          this.getPocketList()\n        } else {\n          this.$message.error('服务端异常')\n        }\n      } else if (this.pocket_operation_type === 1) {\n        res = await Collection.createPocket(this.pocket_info)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.pocket_dialog_visible = false\n          this.getPocketList()\n          const id = Number(res.message)\n          this.default_expanded_key = [id]\n          this.current_pocket_id = id\n          this.current_choose_case_id_list = []\n          await this.refreshTableInfo()\n        } else {\n          this.$message.error('服务端异常')\n        }\n      }\n    },\n    async selectAll(val) {\n      const list = []\n      if (val.length === 0) {\n        // 取消全选\n        this.case_list.forEach(async e => {\n          const param = {\n            pocket_id: this.current_pocket_id,\n            case_id: e.id,\n            case_name: e.case_name,\n          }\n          list.push(param)\n          this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(e.id), 1)\n        })\n        await Collection.batchDeleteCase(list)\n      } else {\n        // 全选\n        val.forEach(async e => {\n          if (!this.current_choose_case_id_list.includes(e.id)) {\n            const param = {\n              pocket_id: this.current_pocket_id,\n              case_id: e.id,\n              case_name: e.case_name,\n            }\n            list.push(param)\n            this.current_choose_case_id_list.push(e.id)\n          }\n        })\n        await Collection.batchInsertCase(list)\n      }\n      this.getPocketList()\n      this.default_expanded_key = [this.current_pocket_id]\n    },\n    async rowSelect(selection, row) {\n      // false为反选，true为选中\n      let chooseType = false\n      const { id, case_name } = row\n      selection.forEach(r => {\n        chooseType = r.id === id\n      })\n      const param = {\n        pocket_id: this.current_pocket_id,\n        case_id: id,\n        case_name,\n      }\n      if (chooseType) {\n        await Collection.insertCaseToPocket(param)\n        this.current_choose_case_id_list.push(id)\n      } else {\n        await Collection.deleteCaseFromPocket(param)\n        this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(id), 1)\n      }\n      this.getPocketList()\n    },\n    async deleteCase(data) {\n      this.current_choose_case_id_list.splice(this.current_choose_case_id_list.indexOf(data.business_id), 1)\n      const param = {\n        pocket_id: this.current_pocket_id,\n        case_id: data.business_id,\n      }\n      await Collection.deleteCaseFromPocket(param)\n      await this.getPocketList()\n      await this.refreshTableInfo()\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.refreshTableInfo()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.refreshTableInfo()\n    },\n    async doExecute() {\n      this.execute_button_loading = true\n      const reportId = await CollectionReport.execute(this.collection_id)\n      await new Promise(resolve => {\n        setTimeout(() => resolve('down'), 1000)\n      })\n      this.execute_button_loading = false\n      this.$router.push(`/autotest/report-detail/${reportId}`)\n    },\n    drawerClose() {\n      this.drawer_visible = false\n      this.searchCaseList()\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  //noinspection CssUnknownTarget\n  @import \"@/static/css/common.scss\";\n  .body {\n    display: flex;\n\n    .pocket-card {\n      width: 22%;\n      height: 600px;\n      position:relative;\n\n      .run-button {\n        width: 100%;\n        height: 40px;\n        font-size: 120%;\n      }\n\n      .tree-list {\n        height: 520px;\n\n        .custom-tree-node {\n          flex: 1 1 auto;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          font-size: 14px;\n          padding-right: 8px;\n          width: 100%;\n\n          .node-title {\n            width: 0;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            flex: 1 1 auto;\n            padding: 0 5px;\n            overflow: hidden;\n          }\n\n          .node-operate > i {\n            color: #409eff;\n            margin: 0 5px;\n          }\n\n          .children-content {\n            width: 150px;\n            overflow:hidden;\n            text-overflow:ellipsis;\n            white-space:nowrap;\n          }\n\n          .delete-icon {\n            display: none;\n          }\n        }\n\n        .father .child {\n          display: none;\n        }\n\n        .father:hover .child {\n          display: block;\n        }\n\n        .custom-tree-node:hover .delete-icon{\n          display: block;\n        }\n      }\n\n\n    }\n\n    .case-manage-card {\n      width: 78%;\n      height: 600px;\n      margin-left: 5px;\n\n      .row-name {\n        width: 120px\n      }\n\n      .row-category {\n        width: 100px;\n        margin-left: 10px\n      }\n\n      .row-creator {\n        width: 120px;\n        margin-left: 10px;\n\n        .creator-name {\n          float: left;\n        }\n        .creator-code {\n          float: right;\n          color: #8492a6;\n          font-size: 13px;\n        }\n      }\n\n      .case-table {\n        height: 520px;\n        margin-top: 10px;\n        width: 100%;\n\n        .GET {\n          color: #00C292;\n          font-weight: 500;\n        }\n        .POST {\n          color: #409EFF;\n          font-weight: 500;\n        }\n        .PUT {\n          color: #E6A23C;\n          font-weight: 500;\n        }\n        .DELETE {\n          color: #E46A76;\n          font-weight: 500;\n        }\n      }\n    }\n  }\n\n  .el-tree /deep/ .is-expanded {\n    color: #333333;\n    font-weight: bold\n  }\n\n\n</style>\n"],"sourceRoot":"src/view/autotest"}]}