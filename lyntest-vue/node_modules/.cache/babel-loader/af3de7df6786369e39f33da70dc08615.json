{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/statistical/function/data-manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/component/statistical/function/data-manage.vue","mtime":1606834545502},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Manager from '@/model/statistical/manager';\nimport Function from '@/model/statistical/function';\nexport default {\n  data: function data() {\n    return {\n      date: [],\n      tester_list: {},\n      dev_list: [],\n      product_line_list: [],\n      total: 0,\n      search: {\n        start_date: '',\n        end_date: '',\n        tester_code: '',\n        dev_code: '',\n        product_code: '',\n        count: 10,\n        page: 1\n      },\n      upload_dialog_visible: false,\n      file_list: [],\n      tableData: [],\n      edit_dialog_visible: false,\n      function_info: {}\n    };\n  },\n  mounted: function mounted() {\n    this.getDevList();\n    this.getTesterList();\n    this.getProductLineList();\n    this.searchFunctionList();\n  },\n  methods: {\n    chooseDate: function () {\n      var _chooseDate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(date) {\n        var _date;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.search.page = 1;\n\n                if (date === null) {\n                  this.search.start_date = '';\n                  this.search.end_date = '';\n                } else {\n                  _date = _slicedToArray(date, 2);\n                  this.search.start_date = _date[0];\n                  this.search.end_date = _date[1];\n                }\n\n                _context.next = 4;\n                return this.searchFunctionList();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function chooseDate(_x) {\n        return _chooseDate.apply(this, arguments);\n      }\n\n      return chooseDate;\n    }(),\n    getTesterList: function () {\n      var _getTesterList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Manager.getTesterList();\n\n              case 2:\n                this.tester_list = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTesterList() {\n        return _getTesterList.apply(this, arguments);\n      }\n\n      return getTesterList;\n    }(),\n    getDevList: function () {\n      var _getDevList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Manager.getDevList();\n\n              case 2:\n                this.dev_list = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getDevList() {\n        return _getDevList.apply(this, arguments);\n      }\n\n      return getDevList;\n    }(),\n    // 获取产品线列表\n    getProductLineList: function () {\n      var _getProductLineList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Manager.getProductList();\n\n              case 2:\n                this.product_line_list = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getProductLineList() {\n        return _getProductLineList.apply(this, arguments);\n      }\n\n      return getProductLineList;\n    }(),\n    searchFunctionList: function () {\n      var _searchFunctionList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Function.searchFuncList(this.search);\n\n              case 2:\n                res = _context5.sent;\n                this.tableData = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function searchFunctionList() {\n        return _searchFunctionList.apply(this, arguments);\n      }\n\n      return searchFunctionList;\n    }(),\n    exportExcel: function exportExcel() {\n      this.$axios({\n        method: 'post',\n        url: '/statistical/func/download',\n        responseType: 'blob',\n        data: this.search\n      }).then(function (res) {\n        var link = document.createElement('a');\n        link.style.display = 'none';\n        link.href = URL.createObjectURL(new Blob([res]));\n        link.setAttribute('download', '功能点信息.xlsx');\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(link.href);\n        document.body.removeChild(link);\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.searchFunctionList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.searchFunctionList();\n    },\n    editFunction: function editFunction(row) {\n      this.edit_dialog_visible = true;\n      this.function_info = _objectSpread({}, row);\n    },\n    modifyFunction: function () {\n      var _modifyFunction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Function.updateFunc(this.function_info);\n\n              case 2:\n                res = _context6.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.edit_dialog_visible = false;\n                  this.searchFunctionList();\n                } else {\n                  this.$message.error('修改功能点功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function modifyFunction() {\n        return _modifyFunction.apply(this, arguments);\n      }\n\n      return modifyFunction;\n    }(),\n    deleteFunction: function () {\n      var _deleteFunction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Function.deleteFunc(id);\n\n              case 2:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.searchFunctionList();\n                } else {\n                  this.$message.error('删除功能点功能异常');\n                }\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function deleteFunction(_x2) {\n        return _deleteFunction.apply(this, arguments);\n      }\n\n      return deleteFunction;\n    }(),\n    // 文件超出个数限制时的钩子\n    exceedFile: function exceedFile(files, fileList) {\n      this.$message.warning(\"\\u53EA\\u80FD\\u9009\\u62E9 1 \\u4E2A\\u6587\\u4EF6\\uFF0C\\u5F53\\u524D\\u5171\\u9009\\u62E9\\u4E86 \".concat(files.length + fileList.length, \" \\u4E2A\"));\n    },\n    // 文件状态改变时的钩子\n    fileChange: function fileChange(file) {\n      this.file_list.push(file.raw);\n    },\n    // 上传文件之前的钩子, 参数为上传的文件,若返回 false 或者返回 Promise 且被 reject，则停止上传\n    beforeUploadFile: function beforeUploadFile(file) {\n      var extension = file.name.substring(file.name.lastIndexOf('.') + 1);\n      var size = file.size / 1024 / 1024;\n\n      if (extension !== 'xlsx') {\n        this.$message.warning('只能上传后缀是.xlsx的文件');\n      }\n\n      if (size > 10) {\n        this.$message.warning('文件大小不得超过10M');\n      }\n    },\n    deleteFile: function deleteFile(file) {\n      this.file_list.pop(file);\n    },\n    uploadFile: function uploadFile() {\n      var _this = this;\n\n      if (this.file_list.length === 0) {\n        this.$message.warning('请上传文件');\n      } else {\n        var form = new FormData();\n        form.append('file', this.file_list[0]);\n        this.$axios({\n          method: 'post',\n          url: '/statistical/func/upload',\n          headers: {\n            'Content-type': 'multipart/form-data'\n          },\n          data: form\n        }).then(function (res) {\n          if (res.success === true) {\n            _this.file_list = [];\n\n            _this.$message.success(res.result);\n\n            _this.upload_dialog_visible = false;\n\n            _this.searchFunctionList();\n          } else if (res.success === false) {\n            _this.$message.error(res.msg);\n          }\n        });\n      }\n    }\n  }\n};",null]}