{"remainingRequest":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/pressure-test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/src/view/api-test/pressure-test.vue","mtime":1608716943629},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/mmdz_ceshi/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Pressure from '@/model/autotest/pressure';\nimport HttpCaseChoose from '@/component/autotest/http-case-choose.vue';\nimport AssertionsDetail from '@/component/autotest/assertions-detail';\nimport VariableDetail from '@/component/autotest/variable-detail';\nimport ReadOnlyContent from '@/component/autotest/read-only-content';\nimport ResponseStatus from '@/component/autotest/response-status';\nexport default {\n  name: 'batch-execute',\n  components: {\n    HttpCaseChoose: HttpCaseChoose,\n    AssertionsDetail: AssertionsDetail,\n    VariableDetail: VariableDetail,\n    ReadOnlyContent: ReadOnlyContent,\n    ResponseStatus: ResponseStatus\n  },\n  data: function data() {\n    return {\n      websocket: null,\n      loading: false,\n      total_count: 0,\n      case_info: {},\n      dialog_visible: false,\n      param: {\n        threads: 1,\n        times: 1,\n        case_id: null\n      },\n      report_id: null,\n      report_list: [],\n      result_list: [],\n      table_data: [],\n      case_choose: false,\n      case_detail: {},\n      chartSettings: {\n        radius: [65, 45],\n        hoverAnimation: false,\n        label: {\n          show: false\n        }\n      },\n      chartExtend: {\n        graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '45%',\n          style: {\n            text: 0,\n            textAlign: 'center',\n            fill: '#000',\n            fontSize: 28\n          }\n        }, {\n          type: 'text',\n          left: 'center',\n          top: '55%',\n          style: {\n            text: '请求',\n            textAlign: 'center',\n            fill: '#999999',\n            fontSize: 16\n          }\n        }],\n        color: ['#00C292', '#E46A76']\n      },\n      chartData: {\n        columns: ['type', 'count'],\n        rows: [{\n          type: '成功',\n          count: 0\n        }, {\n          type: '失败',\n          count: 0\n        }]\n      }\n    };\n  },\n  destroyed: function destroyed() {\n    // 关闭链接\n    if (this.websocket) {\n      this.websocket.close();\n    }\n  },\n  watch: {\n    total_count: function total_count(val) {\n      this.chartExtend.graphic[0].style.text = val;\n    }\n  },\n  methods: {\n    initWebSocket: function initWebSocket() {\n      var baseUri = process.env.VUE_APP_BASE_URL;\n      var uri = \"\".concat(baseUri.replace('http', 'ws'), \"ws/message\");\n      this.websocket = new WebSocket(uri);\n      this.websocket.onmessage = this.websocketOnMessage;\n      this.websocket.onopen = this.websocketOnOpen;\n      this.websocket.onerror = this.websocketOnError;\n      this.websocket.onclose = this.websocketClose;\n    },\n    websocketOnOpen: function websocketOnOpen() {\n      console.log('建立websocket连接');\n    },\n    websocketOnError: function websocketOnError() {\n      // 连接建立失败重连\n      this.initWebSocket();\n    },\n    websocketOnMessage: function () {\n      var _websocketOnMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _e$data$split, _e$data$split2, type, id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 数据接收\n                console.log(e.data);\n                _e$data$split = e.data.split('_'), _e$data$split2 = _slicedToArray(_e$data$split, 2), type = _e$data$split2[0], id = _e$data$split2[1];\n\n                if (!(type !== 'pressure')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(Number(id) !== this.param.case_id)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                this.websocket.close();\n                this.loading = false;\n                _context.next = 10;\n                return this.getReportDetail();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function websocketOnMessage(_x) {\n        return _websocketOnMessage.apply(this, arguments);\n      }\n\n      return websocketOnMessage;\n    }(),\n    websocketSend: function websocketSend(data) {\n      // 数据发送\n      this.websocket.send(data);\n    },\n    websocketClose: function websocketClose(e) {\n      // 关闭\n      console.log('断开连接', e);\n      this.loading = false;\n    },\n    doExecute: function () {\n      var _doExecute = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.initWebSocket();\n                _context2.next = 4;\n                return Pressure.execute(this.param);\n\n              case 4:\n                this.report_id = _context2.sent;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function doExecute() {\n        return _doExecute.apply(this, arguments);\n      }\n\n      return doExecute;\n    }(),\n    dialogClose: function () {\n      var _dialogClose = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.dialog_visible = false;\n                this.param.case_id = this.case_info.id;\n                _context3.next = 4;\n                return this.getReportList();\n\n              case 4:\n                _context3.next = 6;\n                return this.getReportDetail();\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function dialogClose() {\n        return _dialogClose.apply(this, arguments);\n      }\n\n      return dialogClose;\n    }(),\n    getReportList: function () {\n      var _getReportList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res, firstId;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Pressure.getReportIdList(this.param.case_id);\n\n              case 2:\n                res = _context4.sent;\n                this.report_list = res;\n\n                if (!(res.length === 0)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 6:\n                firstId = res[0];\n                this.report_id = firstId;\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getReportList() {\n        return _getReportList.apply(this, arguments);\n      }\n\n      return getReportList;\n    }(),\n    getReportDetail: function () {\n      var _getReportDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(this.report_id === null)) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                _context5.next = 4;\n                return Pressure.getReportDetail(this.report_id);\n\n              case 4:\n                res = _context5.sent;\n                this.dataInit(res);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getReportDetail() {\n        return _getReportDetail.apply(this, arguments);\n      }\n\n      return getReportDetail;\n    }(),\n    dataInit: function dataInit(res) {\n      this.table_data = [];\n      var pass_count = res.pass_count,\n          error_count = res.error_count,\n          result = res.result;\n      this.table_data.push(res);\n      this.total_count = pass_count + error_count;\n      this.chartExtend.graphic[0].style.text = pass_count + error_count;\n      res.count = this.total_count;\n      this.chartData.rows[0].count = pass_count;\n      this.chartData.rows[1].count = error_count;\n      this.result_list = result.slice();\n    },\n    getCaseDetail: function getCaseDetail(caseInfo) {\n      this.case_choose = true;\n      this.result_list.forEach(function (e) {\n        e.is_choose = false;\n      });\n      caseInfo.is_choose = true;\n      this.case_detail = caseInfo;\n    }\n  }\n};",{"version":3,"sources":["pressure-test.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"info\">\n      <el-form :inline=\"true\" :model=\"param\" class=\"demo-form-inline\">\n        <el-form-item>\n          <el-button @click=\"dialog_visible = true\" type=\"primary\">Case选择</el-button>\n        </el-form-item>\n        <el-form-item label=\"线程数\" class=\"label\">\n          <el-input-number v-model=\"param.threads\" :min=\"1\" :max=\"100\"></el-input-number>\n        </el-form-item>\n        <el-form-item label=\"执行次数\" class=\"label\">\n          <el-input-number v-model=\"param.times\" :min=\"1\" :max=\"20\"></el-input-number>\n        </el-form-item>\n        <el-form-item class=\"label\">\n          <el-button type=\"success\"\n                     class=\"run-button\"\n                     @click=\"doExecute\"\n                     :disabled=\"!case_info.case_name || loading\">\n            执 行\n            <i v-if=\"loading\" class=\"el-icon-loading\"></i>\n            <i v-else class=\"el-icon-video-play\"></i>\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    <el-card class=\"result\">\n      <div class=\"case-choose\" v-show=\"case_info.case_name\">\n        <span class=\"title\">{{case_info.case_name}}</span>\n        <el-select v-model=\"report_id\" placeholder=\"历史报告\" size=\"small\" @change=\"getReportDetail\">\n          <el-option v-for=\"id in report_list\" :key=\"id\" :value=\"id\" :label=\"id\"></el-option>\n        </el-select>\n      </div>\n      <div class=\"case-info\" v-if=\"loading\" v-loading=\"loading\"></div>\n      <div class=\"case-info\" v-show=\"report_id && !loading\">\n        <div class=\"statistical\">\n          <el-card class=\"ring-card\">\n            <div>\n              <ve-ring :data=\"chartData\"\n                       :settings=\"chartSettings\"\n                       :extend=\"chartExtend\" class=\"ring\">\n              </ve-ring>\n            </div>\n          </el-card>\n          <el-card class=\"case-list\">\n            <div style=\"height: 260px\">\n              <vue-scroll>\n                <div v-for=\"item in result_list\"\n                     :class=\"{'case-title-normal': !item.is_choose, 'case-title-choose':item.is_choose}\"\n                     :key=\"item.index\"\n                     @click=\"getCaseDetail(item)\">\n                  <i class=\"el-icon-success icon\" v-if=\"item.expected_is_pass\" style=\"color: #00C292\"></i>\n                  <i class=\"el-icon-error icon\" v-else-if=\"!item.expected_is_pass\" style=\"color: #E46A76\"></i>\n                  <span class=\"title\">\n              {{item.case_name}}\n              </span>\n                </div>\n              </vue-scroll>\n            </div>\n          </el-card>\n        </div>\n        <div class=\"case-detail\">\n          <el-card class=\"table\">\n            <el-table :data=\"table_data\">\n              <el-table-column prop=\"count\" label=\"请求数\"></el-table-column>\n              <el-table-column prop=\"average\" label=\"平均\"></el-table-column>\n              <el-table-column prop=\"median\" label=\"中位数\"></el-table-column>\n              <el-table-column prop=\"ninety\" label=\"90%\"></el-table-column>\n              <el-table-column prop=\"ninety_five\" label=\"95%\"></el-table-column>\n              <el-table-column prop=\"ninety_nine\" label=\"99%\"></el-table-column>\n              <el-table-column prop=\"min\" label=\"最小\"></el-table-column>\n              <el-table-column prop=\"max\" label=\"最大\"></el-table-column>\n            </el-table>\n          </el-card>\n          <el-card class=\"detail\">\n            <div v-show=\"case_choose\" style=\"height: 280px\">\n              <vue-scroll>\n                <div class=\"header\">\n                  <div class=\"title\">\n                    {{case_detail.case_name}}\n                  </div>\n                  <response-status v-if=\"case_detail.status_code\"\n                                   :status-code=\"case_detail.status_code\"\n                                   :message=\"case_detail.message\"\n                                   :response-time=\"case_detail.response_time\"/>\n                </div>\n                <assertions-detail :result=\"case_detail.expected_res\"\n                                   class=\"table\"\n                                   v-if=\"case_choose && case_detail.expected_res.length !== 0\">\n                </assertions-detail>\n                <variable-detail :result=\"case_detail.variable_list\"\n                                 class=\"table\"\n                                 v-if=\"case_choose && case_detail.variable_list.length !== 0\">\n                </variable-detail>\n                <read-only-content title=\"URL\" :content=\"case_detail.url\"></read-only-content>\n                <read-only-content title=\"Request\" :content=\"case_detail.request_text\"></read-only-content>\n                <read-only-content title=\"Response\" :content=\"case_detail.response_text\"></read-only-content>\n              </vue-scroll>\n            </div>\n          </el-card>\n        </div>\n      </div>\n    </el-card>\n    <el-dialog :visible.sync=\"dialog_visible\" :show-close=\"false\" width=\"70%\">\n      <http-case-choose v-model=\"case_info\" @dialogClose=\"dialogClose\"></http-case-choose>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Pressure from '@/model/autotest/pressure'\nimport HttpCaseChoose from '@/component/autotest/http-case-choose.vue'\nimport AssertionsDetail from '@/component/autotest/assertions-detail'\nimport VariableDetail from '@/component/autotest/variable-detail'\nimport ReadOnlyContent from '@/component/autotest/read-only-content'\nimport ResponseStatus from '@/component/autotest/response-status'\n\nexport default {\n  name: 'batch-execute',\n  components: {\n    HttpCaseChoose,\n    AssertionsDetail,\n    VariableDetail,\n    ReadOnlyContent,\n    ResponseStatus\n  },\n  data() {\n    return {\n      websocket: null,\n      loading: false,\n      total_count: 0,\n      case_info: {},\n      dialog_visible: false,\n      param: {\n        threads: 1,\n        times: 1,\n        case_id: null,\n      },\n      report_id: null,\n      report_list: [],\n      result_list: [],\n      table_data: [],\n      case_choose: false,\n      case_detail: {},\n      chartSettings: {\n        radius: [65, 45],\n        hoverAnimation: false,\n        label: { show: false }\n      },\n      chartExtend: {\n        graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '45%',\n          style: {\n            text: 0,\n            textAlign: 'center',\n            fill: '#000',\n            fontSize: 28,\n          }\n        }, {\n          type: 'text',\n          left: 'center',\n          top: '55%',\n          style: {\n            text: '请求',\n            textAlign: 'center',\n            fill: '#999999',\n            fontSize: 16,\n          }\n        }],\n        color: ['#00C292', '#E46A76']\n      },\n      chartData: {\n        columns: ['type', 'count'],\n        rows: [\n          { type: '成功', count: 0 },\n          { type: '失败', count: 0 }\n        ]\n      },\n    }\n  },\n  destroyed() {\n    // 关闭链接\n    if (this.websocket) {\n      this.websocket.close()\n    }\n  },\n  watch: {\n    total_count(val) {\n      this.chartExtend.graphic[0].style.text = val\n    },\n  },\n  methods: {\n    initWebSocket() {\n      const baseUri = process.env.VUE_APP_BASE_URL\n      const uri = `${baseUri.replace('http', 'ws')}ws/message`\n      this.websocket = new WebSocket(uri)\n      this.websocket.onmessage = this.websocketOnMessage\n      this.websocket.onopen = this.websocketOnOpen\n      this.websocket.onerror = this.websocketOnError\n      this.websocket.onclose = this.websocketClose\n    },\n    websocketOnOpen() {\n      console.log('建立websocket连接')\n    },\n    websocketOnError() { // 连接建立失败重连\n      this.initWebSocket()\n    },\n    async websocketOnMessage(e) { // 数据接收\n      console.log(e.data)\n      const [type, id] = e.data.split('_')\n      if (type !== 'pressure') {\n        return\n      }\n      if (Number(id) !== this.param.case_id) {\n        return\n      }\n      this.websocket.close()\n      this.loading = false\n      await this.getReportDetail()\n    },\n    websocketSend(data) { // 数据发送\n      this.websocket.send(data)\n    },\n    websocketClose(e) { // 关闭\n      console.log('断开连接', e)\n      this.loading = false\n    },\n    async doExecute() {\n      this.loading = true\n      this.initWebSocket()\n      this.report_id = await Pressure.execute(this.param)\n    },\n    async dialogClose() {\n      this.dialog_visible = false\n      this.param.case_id = this.case_info.id\n      await this.getReportList()\n      await this.getReportDetail()\n    },\n    async getReportList() {\n      const res = await Pressure.getReportIdList(this.param.case_id)\n      this.report_list = res\n      if (res.length === 0) {\n        return\n      }\n      const firstId = res[0]\n      this.report_id = firstId\n    },\n    async getReportDetail() {\n      if (this.report_id === null) {\n        return\n      }\n      const res = await Pressure.getReportDetail(this.report_id)\n      this.dataInit(res)\n    },\n    dataInit(res) {\n      this.table_data = []\n      const { pass_count, error_count, result } = res\n      this.table_data.push(res)\n      this.total_count = pass_count + error_count\n      this.chartExtend.graphic[0].style.text = pass_count + error_count\n      res.count = this.total_count\n      this.chartData.rows[0].count = pass_count\n      this.chartData.rows[1].count = error_count\n      this.result_list = result.slice()\n    },\n    getCaseDetail(caseInfo) {\n      this.case_choose = true\n      this.result_list.forEach(e => {\n        e.is_choose = false\n      })\n      caseInfo.is_choose = true\n      this.case_detail = caseInfo\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .container {\n    padding: 6px;\n\n    .info {\n      height: 80px;\n\n      .label {\n        margin-left: 10px\n      }\n\n      .run-button {\n        width: 100%;\n        height: 40px;\n        font-size: 120%;\n      }\n    }\n\n    .result {\n      min-height: 600px;\n      margin-top: 6px;\n      display: flex;\n      flex-direction: column;\n\n      .case-choose {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 5px;\n\n        .title {\n          color: $parent-title-color;\n          font-size: 1.1em;\n          font-weight: 500;\n        }\n      }\n\n      .case-info {\n        display: flex;\n\n        .statistical {\n          display: flex;\n          flex-direction: column;\n          width: 40%;\n\n          .ring-card {\n            height: 240px;\n\n            .ring {\n              transform: translateY(-90px);\n            }\n          }\n\n          .case-list {\n            margin-top: 10px;\n            height: 300px;\n\n            .case-title {\n              height: 30px;\n              width: 98%;\n              border:1px solid #b3d8ff;\n              margin-bottom: 6px;\n              display: flex;\n              align-items: center;\n\n              .icon {\n                margin-left: 10px;\n              }\n\n              .title {\n                margin-left: 10px;\n              }\n            }\n\n            .case-title-normal {\n              @extend .case-title;\n              color: #409EFF;\n              background: #ecf5ff;\n            }\n\n            .case-title-normal:hover {\n              border: 1px solid #409EFF;\n            }\n\n            .case-title-choose{\n              @extend .case-title;\n              color: #ecf5ff;\n              background: #409EFF;\n            }\n          }\n        }\n\n        .case-detail {\n          margin-left: 10px;\n          width: 60%;\n          height: 600px;\n\n          .table {\n            height: 200px;\n          }\n\n          .detail {\n            margin-top: 10px;\n            height: 340px;\n\n            .header {\n              display: flex;\n              align-items: flex-end;\n              justify-content: space-between;\n\n              .title {\n                color: $parent-title-color;\n                font-size: 20px;\n                font-weight: 500;\n              }\n            }\n\n            .table {\n              margin-top: 10px;\n              height: 100%;\n            }\n\n            .response-text {\n              margin-top: 10px;\n              word-wrap: break-word;\n              word-break: normal;\n            }\n          }\n\n        }\n      }\n\n    }\n  }\n\n</style>\n"],"sourceRoot":"src/view/api-test"}]}