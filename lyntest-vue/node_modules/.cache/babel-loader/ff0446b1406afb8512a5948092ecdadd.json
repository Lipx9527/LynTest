{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/lyn/Desktop/lyntest/lyntest-vue/src/lin/util/search.js","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/lin/util/search.js","mtime":1606834545466},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport FastScanner from 'fastscan';\n/**\n *\n * @param {string} word\n * @param {string} content\n */\n\nexport function searchForWord(_x, _x2) {\n  return _searchForWord.apply(this, arguments);\n}\n/**\n *\n * @param {Array<string>} words\n * @param {string} content\n */\n\nfunction _searchForWord() {\n  _searchForWord = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(word, content) {\n    var scanner, offWords;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            scanner = new FastScanner([word]);\n            offWords = scanner.search(content);\n            return _context.abrupt(\"return\", offWords);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _searchForWord.apply(this, arguments);\n}\n\nexport function searchForWords(_x3, _x4) {\n  return _searchForWords.apply(this, arguments);\n}\n/**\n *\n * @param {string} keyword\n * @param {Array} logs\n */\n\nfunction _searchForWords() {\n  _searchForWords = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(words, content) {\n    var scanner, offWords;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            scanner = new FastScanner(words);\n            offWords = scanner.search(content);\n            return _context2.abrupt(\"return\", offWords);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _searchForWords.apply(this, arguments);\n}\n\nexport function searchLogKeyword(_x5, _x6) {\n  return _searchLogKeyword.apply(this, arguments);\n}\n\nfunction _searchLogKeyword() {\n  _searchLogKeyword = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(keyword, logs) {\n    var className,\n        _logs,\n        _args3 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            className = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 'strong';\n            _logs = logs.map(function (log) {\n              var msg = log.message;\n              msg = msg.replace(RegExp(\"\".concat(keyword), 'g'), \"<span class=\\\"\".concat(className, \"\\\">\").concat(keyword, \"</span>\")); // eslint-disable-next-line\n\n              log.message = msg;\n              return log;\n            });\n            return _context3.abrupt(\"return\", _logs);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _searchLogKeyword.apply(this, arguments);\n}",null]}