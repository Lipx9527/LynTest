{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/http-case-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/http-case-list.vue","mtime":1608859958693},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HttpCase from '@/model/autotest/http-case';\nimport HttpCaseEdit from '@/component/autotest/http-case-edit';\nimport Category from '@/model/autotest/category';\nexport default {\n  components: {\n    HttpCaseEdit: HttpCaseEdit\n  },\n  data: function data() {\n    return {\n      operation_type: 0,\n      search: {\n        case_name: '',\n        category: '',\n        creator_code: '',\n        page: 1,\n        count: 10\n      },\n      creator_list: [],\n      category_list: [],\n      edit_dialog_visible: false,\n      case_info: {},\n      total: null,\n      table: {\n        deleteConfirmDialogVisible: false,\n        multipleSelection: [],\n        ids: []\n      },\n      table_data: [],\n      drawer_visible: false\n    };\n  },\n  mounted: function mounted() {\n    this.getCategoryList();\n    this.getCreatorList();\n    this.searchCaseList();\n  },\n  methods: {\n    // 获取分类列表\n    getCategoryList: function () {\n      var _getCategoryList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Category.getCategoryList();\n\n              case 2:\n                res = _context.sent;\n                this.category_list = res;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCategoryList() {\n        return _getCategoryList.apply(this, arguments);\n      }\n\n      return getCategoryList;\n    }(),\n    // 获取创建人列表\n    getCreatorList: function () {\n      var _getCreatorList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return HttpCase.getCreatorList();\n\n              case 2:\n                res = _context2.sent;\n                this.creator_list = res;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCreatorList() {\n        return _getCreatorList.apply(this, arguments);\n      }\n\n      return getCreatorList;\n    }(),\n    // 搜索符合条件的所有testCase\n    searchCaseList: function () {\n      var _searchCaseList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return HttpCase.searchCaseList(this.search);\n\n              case 2:\n                res = _context3.sent;\n                this.table_data = res.items;\n                this.total = res.total;\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchCaseList() {\n        return _searchCaseList.apply(this, arguments);\n      }\n\n      return searchCaseList;\n    }(),\n    // 创建case\n    createCase: function createCase() {\n      this.case_info = _objectSpread({}, this.default_case_info);\n      this.drawer_visible = true;\n      this.operation_type = 1;\n    },\n    saveCase: function () {\n      var _saveCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return HttpCase.createCase(this.case_info);\n\n              case 2:\n                res = _context4.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.searchCaseList();\n                } else {\n                  this.$message.error(res.message);\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function saveCase() {\n        return _saveCase.apply(this, arguments);\n      }\n\n      return saveCase;\n    }(),\n    confirmDeleteCase: function confirmDeleteCase() {\n      if (this.table.multipleSelection.length > 0) {\n        this.table.deleteConfirmDialogVisible = true;\n      } else {\n        this.$message.warning('请选择至少一条case！');\n      }\n    },\n    deleteCase: function () {\n      var _deleteCase = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.table.ids = [];\n                this.table.multipleSelection.forEach(function (e) {\n                  _this.table.ids.push(e.id);\n                });\n                _context5.next = 4;\n                return HttpCase.deleteCase(this.table.ids);\n\n              case 4:\n                res = _context5.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.table.deleteConfirmDialogVisible = false;\n                  this.searchCaseList();\n                } else {\n                  this.$message.error(res.message);\n                }\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteCase() {\n        return _deleteCase.apply(this, arguments);\n      }\n\n      return deleteCase;\n    }(),\n    handleSizeChange: function handleSizeChange(val) {\n      this.search.count = val;\n      this.searchCaseList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.search.page = val;\n      this.searchCaseList();\n    },\n    // 选中的case\n    tableSelectionChange: function tableSelectionChange(value) {\n      this.table.multipleSelection = value;\n    },\n    handleEdit: function handleEdit(row) {\n      this.drawer_visible = true;\n      this.operation_type = 2;\n      this.case_info = _objectSpread({}, row);\n    },\n    handleCopy: function handleCopy(row) {\n      this.drawer_visible = true;\n      this.operation_type = 3;\n      this.case_info = _objectSpread({}, row);\n    },\n    drawerClose: function drawerClose() {\n      this.drawer_visible = false;\n      this.searchCaseList();\n    }\n  }\n};",{"version":3,"sources":["http-case-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <div>\n    <!--筛选框-->\n    <el-card style=\"margin-bottom: 5px;margin-top: 5px\">\n      <el-input v-model=\"search.case_name\"\n                placeholder=\"接口名称\"\n                style=\"width: 150px\"\n                @change=\"searchCaseList\" />\n      <el-select v-model=\"search.category\"\n                 placeholder=\"分 类\"\n                 style=\"width: 150px;margin-left: 10px\"\n                 @change=\"searchCaseList\"\n                 clearable\n                 filterable>\n        <el-option v-for=\"item in category_list\"\n                   :key=\"item.category_name\"\n                   :label=\"item.category_name\"\n                   :value=\"item.category_name\"/>\n      </el-select>\n      <el-select v-model=\"search.creator_code\"\n                 placeholder=\"创建人\"\n                 style=\"width: 150px;margin-left: 10px\"\n                 @change=\"searchCaseList\"\n                 clearable\n                 filterable>\n        <el-option v-for=\"item in creator_list\"\n                   :key=\"item.creator_code\"\n                   :label=\"item.creator_name\"\n                   :value=\"item.creator_code\">\n          <span style=\"float: left\">{{ item.creator_name }}</span>\n          <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.creator_code }}</span>\n        </el-option>\n      </el-select>\n    </el-card>\n    <!--form表单-->\n    <el-card>\n      <!--操作栏-->\n      <el-row>\n        <el-button type=\"primary\" size=\"small\" @click=\"createCase\">新 增</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"confirmDeleteCase\">删 除</el-button>\n        <el-pagination background\n                       @size-change=\"handleSizeChange\"\n                       @current-change=\"handleCurrentChange\"\n                       :current-page=\"search.page\"\n                       :page-size=\"search.count\"\n                       :page-sizes=\"[10, 20, 50, 100]\"\n                       :total=\"total\" layout=\"total, sizes, prev, pager, next\" style=\"float: right\">\n        </el-pagination>\n        <el-dialog :visible.sync=\"table.deleteConfirmDialogVisible\" width=\"400px\">\n          <span>确认删除？</span>\n          <span slot=\"footer\" class=\"dialog-footer\">\n              <el-button @click=\"table.deleteConfirmDialogVisible = false\">取 消</el-button>\n              <el-button type=\"primary\" @click=\"deleteCase\">确 定</el-button>\n            </span>\n        </el-dialog>\n      </el-row>\n      <br/>\n      <!--case数据表单-->\n      <el-row>\n        <el-table ref=\"multipleTable\" :data=\"table_data\" tooltip-effect=\"dark\" @selection-change=\"tableSelectionChange\" stripe>\n          <el-table-column type=\"selection\" width=\"35\" fixed/>\n          <el-table-column prop=\"case_name\" label=\"接口名称\" min-width=\"200\" fixed></el-table-column>\n          <el-table-column prop=\"api_method\" min-width=\"100\" label=\"请求方式\">\n            <template v-slot:default=\"scope\">\n              <div :class=\"scope.row.api_method\">{{scope.row.api_method}}</div>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"接口路径\" prop=\"api_url\" :show-overflow-tooltip=\"true\" min-width=\"440\"></el-table-column>\n          <el-table-column prop=\"category\" label=\"分 类\" min-width=\"100\" sortable/>\n          <el-table-column prop=\"creator_name\" label=\"创建人\" width=\"120\"/>\n          <el-table-column label=\"备注\">\n            <template v-slot:default=\"scope\">\n              <el-tooltip effect=\"dark\" placement=\"top-start\" v-if=\"scope.row.description\">\n                <div slot=\"content\">{{scope.row.description}}</div>\n                <l-icon name=\"read\" color=\"#409EFF\" height=\"1.6em\" width=\"1.6em\"></l-icon>\n              </el-tooltip>\n              <l-icon name=\"read\" color=\"#ccc\" height=\"1.6em\" width=\"1.6em\" v-else></l-icon>\n            </template>\n          </el-table-column>\n          <el-table-column\n            align=\"center\"\n            fixed=\"right\"\n            label=\"操作\">\n            <template v-slot:default=\"scope\">\n              <el-tooltip content=\"编辑\"\n                          placement=\"bottom\"\n                          :enterable=\"false\"\n                          effect=\"dark\">\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  circle size=\"mini\"\n                  @click=\"handleEdit(scope.row)\"></el-button>\n              </el-tooltip>\n              <el-tooltip content=\"复制\"\n                          placement=\"bottom\"\n                          :enterable=\"false\"\n                          effect=\"dark\">\n                <el-button\n                  type=\"warning\"\n                  icon=\"el-icon-document-copy\"\n                  circle size=\"mini\"\n                  @click=\"handleCopy(scope.row)\"></el-button>\n              </el-tooltip>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-row>\n    </el-card>\n    <!--case编辑弹出层-->\n    <el-drawer :visible.sync=\"drawer_visible\" :with-header=\"false\" size=\"70%\">\n      <http-case-edit v-if=\"drawer_visible\" :case-info=\"case_info\" :operation-type=\"operation_type\" @drawer-close=\"drawerClose\"></http-case-edit>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport HttpCase from '@/model/autotest/http-case'\nimport HttpCaseEdit from '@/component/autotest/http-case-edit'\nimport Category from '@/model/autotest/category'\n\nexport default {\n  components: {\n    HttpCaseEdit,\n  },\n  data() {\n    return {\n      operation_type: 0,\n      search: {\n        case_name: '',\n        category: '',\n        creator_code: '',\n        page: 1,\n        count: 10,\n      },\n      creator_list: [],\n      category_list: [],\n      edit_dialog_visible: false,\n      case_info: {},\n      total: null,\n      table: {\n        deleteConfirmDialogVisible: false,\n        multipleSelection: [],\n        ids: [],\n      },\n      table_data: [],\n      drawer_visible: false,\n    }\n  },\n  mounted() {\n    this.getCategoryList()\n    this.getCreatorList()\n    this.searchCaseList()\n  },\n  methods: {\n    // 获取分类列表\n    async getCategoryList() {\n      const res = await Category.getCategoryList()\n      this.category_list = res\n    },\n    // 获取创建人列表\n    async getCreatorList() {\n      const res = await HttpCase.getCreatorList()\n      this.creator_list = res\n    },\n    // 搜索符合条件的所有testCase\n    async searchCaseList() {\n      const res = await HttpCase.searchCaseList(this.search)\n      this.table_data = res.items\n      this.total = res.total\n    },\n    // 创建case\n    createCase() {\n      this.case_info = { ...this.default_case_info }\n      this.drawer_visible = true\n      this.operation_type = 1\n    },\n    async saveCase() {\n      const res = await HttpCase.createCase(this.case_info)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.searchCaseList()\n      } else {\n        this.$message.error(res.message)\n      }\n    },\n    confirmDeleteCase() {\n      if (this.table.multipleSelection.length > 0) {\n        this.table.deleteConfirmDialogVisible = true\n      } else {\n        this.$message.warning('请选择至少一条case！')\n      }\n    },\n    async deleteCase() {\n      this.table.ids = []\n      this.table.multipleSelection.forEach(e => {\n        this.table.ids.push(e.id)\n      })\n      const res = await HttpCase.deleteCase(this.table.ids)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.table.deleteConfirmDialogVisible = false\n        this.searchCaseList()\n      } else {\n        this.$message.error(res.message)\n      }\n    },\n    handleSizeChange(val) {\n      this.search.count = val\n      this.searchCaseList()\n    },\n    handleCurrentChange(val) {\n      this.search.page = val\n      this.searchCaseList()\n    },\n    // 选中的case\n    tableSelectionChange(value) {\n      this.table.multipleSelection = value\n    },\n    handleEdit(row) {\n      this.drawer_visible = true\n      this.operation_type = 2\n      this.case_info = { ...row }\n    },\n    handleCopy(row) {\n      this.drawer_visible = true\n      this.operation_type = 3\n      this.case_info = { ...row }\n    },\n    drawerClose() {\n      this.drawer_visible = false\n      this.searchCaseList()\n    }\n  },\n}\n</script>\n\n<style scoped>\n  .GET {\n    color: #00C292;\n    font-weight: 500;\n  }\n  .POST {\n    color: #409EFF;\n    font-weight: 500;\n  }\n  .PUT {\n    color: #E6A23C;\n    font-weight: 500;\n  }\n  .DELETE {\n    color: #E46A76;\n    font-weight: 500;\n  }\n</style>\n"],"sourceRoot":"src/view/autotest"}]}