{"remainingRequest":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/report-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/src/view/autotest/report-detail.vue","mtime":1608796653787},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/lyn/Desktop/lyntest/lyntest-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CollectionReport from '@/model/autotest/collection-report';\nimport AssertionsDetail from '@/component/autotest/assertions-detail';\nimport VariableDetail from '@/component/autotest/variable-detail';\nimport ReadOnlyContent from '@/component/autotest/read-only-content';\nimport ResponseStatus from '@/component/autotest/response-status';\nexport default {\n  components: {\n    AssertionsDetail: AssertionsDetail,\n    ReadOnlyContent: ReadOnlyContent,\n    ResponseStatus: ResponseStatus,\n    VariableDetail: VariableDetail\n  },\n  data: function data() {\n    return {\n      report_id: null,\n      collection_id: null,\n      report_loading: true,\n      total_count: 0,\n      percentage: 0,\n      sort_switch: false,\n      base_result_list: [],\n      result_list: [],\n      case_detail: {},\n      case_choose: false,\n      chartSettings: {\n        radius: [65, 45],\n        hoverAnimation: false,\n        label: {\n          show: false\n        }\n      },\n      chartExtend: {\n        graphic: [{\n          type: 'text',\n          left: 'center',\n          top: '45%',\n          style: {\n            text: 0,\n            textAlign: 'center',\n            fill: '#000',\n            fontSize: 28\n          }\n        }, {\n          type: 'text',\n          left: 'center',\n          top: '55%',\n          style: {\n            text: '请求',\n            textAlign: 'center',\n            fill: '#999999',\n            fontSize: 16\n          }\n        }],\n        color: ['#00C292', '#E46A76']\n      },\n      chartData: {\n        columns: ['type', 'count'],\n        rows: [{\n          type: '成功',\n          count: 0\n        }, {\n          type: '失败',\n          count: 0\n        }]\n      },\n      result_css: {\n        status_code_type: 'success',\n        time_type: 'success'\n      }\n    };\n  },\n  watch: {\n    total_count: function total_count(val) {\n      this.chartExtend.graphic[0].style.text = val;\n    },\n    $route: function $route() {\n      this.pageInit();\n    }\n  },\n  mounted: function mounted() {\n    this.pageInit();\n  },\n  destroyed: function destroyed() {\n    if (this.websocket) {\n      this.websocket.close();\n    }\n  },\n  methods: {\n    pageInit: function () {\n      var _pageInit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$report_id$split, _this$report_id$split2, collection_id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.report_id = this.$route.params.id;\n                _this$report_id$split = this.report_id.split('_'), _this$report_id$split2 = _slicedToArray(_this$report_id$split, 1), collection_id = _this$report_id$split2[0];\n                this.collection_id = collection_id;\n                _context.next = 5;\n                return this.getReportDetail();\n\n              case 5:\n                if (_context.sent) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.initWebSocket();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function pageInit() {\n        return _pageInit.apply(this, arguments);\n      }\n\n      return pageInit;\n    }(),\n    getReportDetail: function () {\n      var _getReportDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return CollectionReport.getReportDetail(this.report_id);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 5:\n                this.report_loading = false;\n                this.dataInit(res);\n                return _context2.abrupt(\"return\", true);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getReportDetail() {\n        return _getReportDetail.apply(this, arguments);\n      }\n\n      return getReportDetail;\n    }(),\n    dataInit: function dataInit(res) {\n      var pass_count = res.pass_count,\n          error_count = res.error_count,\n          result = res.result;\n      this.total_count = pass_count + error_count;\n      this.chartData.rows[0].count = pass_count;\n      this.chartData.rows[1].count = error_count;\n      this.base_result_list = result.slice();\n      this.result_list = result.slice();\n      this.dataSort();\n    },\n    dataSort: function dataSort() {\n      if (this.sort_switch) {\n        this.result_list = this.base_result_list.slice();\n      } else {\n        this.result_list.sort(function (a, b) {\n          return a.expected_is_pass - b.expected_is_pass;\n        });\n      }\n    },\n    initWebSocket: function initWebSocket() {\n      var uri = process.env.VUE_APP_SOCKET_URL;\n      console.log(uri);\n      this.websocket = new WebSocket(uri);\n      this.websocket.onmessage = this.websocketOnMessage;\n      this.websocket.onopen = this.websocketOnOpen;\n      this.websocket.onerror = this.websocketOnError;\n      this.websocket.onclose = this.websocketClose;\n    },\n    websocketOnOpen: function websocketOnOpen() {\n      console.log('建立连接');\n    },\n    websocketOnError: function websocketOnError() {\n      // 连接建立失败重连\n      this.initWebSocket();\n    },\n    websocketOnMessage: function () {\n      var _websocketOnMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var _e$data$split, _e$data$split2, type, collection_id, percentage;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _e$data$split = e.data.split('_'), _e$data$split2 = _slicedToArray(_e$data$split, 3), type = _e$data$split2[0], collection_id = _e$data$split2[1], percentage = _e$data$split2[2];\n\n                if (!(type !== 'collection')) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                if (!(collection_id !== this.collection_id)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                this.percentage = Number(percentage);\n\n                if (!(Number(percentage) === 100)) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                this.websocket.close();\n                _context3.next = 10;\n                return new Promise(function (resolve) {\n                  setTimeout(function () {\n                    return resolve('done!');\n                  }, 1000);\n                });\n\n              case 10:\n                _context3.next = 12;\n                return this.getReportDetail();\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function websocketOnMessage(_x) {\n        return _websocketOnMessage.apply(this, arguments);\n      }\n\n      return websocketOnMessage;\n    }(),\n    websocketSend: function websocketSend(data) {\n      // 数据发送\n      this.websocket.send(data);\n    },\n    websocketClose: function websocketClose(e) {\n      // 关闭\n      console.log('断开连接', e);\n    },\n    getCaseDetail: function getCaseDetail(caseInfo) {\n      this.case_choose = true;\n      this.result_list.forEach(function (e) {\n        e.is_choose = false;\n      });\n      caseInfo.is_choose = true;\n      this.case_detail = caseInfo;\n    }\n  }\n};",null]}